"use strict";

module.exports = {
  typeDefs:
  /* GraphQL */
  "type Advertisement {\n  id: ID!\n  image1: String\n  image2: String\n  image3: String\n  image4: String\n  image5: String\n  startTime: DateTime\n  endTime: DateTime\n}\n\ntype AdvertisementConnection {\n  pageInfo: PageInfo!\n  edges: [AdvertisementEdge]!\n  aggregate: AggregateAdvertisement!\n}\n\ninput AdvertisementCreateInput {\n  image1: String\n  image2: String\n  image3: String\n  image4: String\n  image5: String\n  startTime: DateTime\n  endTime: DateTime\n}\n\ntype AdvertisementEdge {\n  node: Advertisement!\n  cursor: String!\n}\n\nenum AdvertisementOrderByInput {\n  id_ASC\n  id_DESC\n  image1_ASC\n  image1_DESC\n  image2_ASC\n  image2_DESC\n  image3_ASC\n  image3_DESC\n  image4_ASC\n  image4_DESC\n  image5_ASC\n  image5_DESC\n  startTime_ASC\n  startTime_DESC\n  endTime_ASC\n  endTime_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype AdvertisementPreviousValues {\n  id: ID!\n  image1: String\n  image2: String\n  image3: String\n  image4: String\n  image5: String\n  startTime: DateTime\n  endTime: DateTime\n}\n\ntype AdvertisementSubscriptionPayload {\n  mutation: MutationType!\n  node: Advertisement\n  updatedFields: [String!]\n  previousValues: AdvertisementPreviousValues\n}\n\ninput AdvertisementSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: AdvertisementWhereInput\n  AND: [AdvertisementSubscriptionWhereInput!]\n  OR: [AdvertisementSubscriptionWhereInput!]\n  NOT: [AdvertisementSubscriptionWhereInput!]\n}\n\ninput AdvertisementUpdateInput {\n  image1: String\n  image2: String\n  image3: String\n  image4: String\n  image5: String\n  startTime: DateTime\n  endTime: DateTime\n}\n\ninput AdvertisementUpdateManyMutationInput {\n  image1: String\n  image2: String\n  image3: String\n  image4: String\n  image5: String\n  startTime: DateTime\n  endTime: DateTime\n}\n\ninput AdvertisementWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  image1: String\n  image1_not: String\n  image1_in: [String!]\n  image1_not_in: [String!]\n  image1_lt: String\n  image1_lte: String\n  image1_gt: String\n  image1_gte: String\n  image1_contains: String\n  image1_not_contains: String\n  image1_starts_with: String\n  image1_not_starts_with: String\n  image1_ends_with: String\n  image1_not_ends_with: String\n  image2: String\n  image2_not: String\n  image2_in: [String!]\n  image2_not_in: [String!]\n  image2_lt: String\n  image2_lte: String\n  image2_gt: String\n  image2_gte: String\n  image2_contains: String\n  image2_not_contains: String\n  image2_starts_with: String\n  image2_not_starts_with: String\n  image2_ends_with: String\n  image2_not_ends_with: String\n  image3: String\n  image3_not: String\n  image3_in: [String!]\n  image3_not_in: [String!]\n  image3_lt: String\n  image3_lte: String\n  image3_gt: String\n  image3_gte: String\n  image3_contains: String\n  image3_not_contains: String\n  image3_starts_with: String\n  image3_not_starts_with: String\n  image3_ends_with: String\n  image3_not_ends_with: String\n  image4: String\n  image4_not: String\n  image4_in: [String!]\n  image4_not_in: [String!]\n  image4_lt: String\n  image4_lte: String\n  image4_gt: String\n  image4_gte: String\n  image4_contains: String\n  image4_not_contains: String\n  image4_starts_with: String\n  image4_not_starts_with: String\n  image4_ends_with: String\n  image4_not_ends_with: String\n  image5: String\n  image5_not: String\n  image5_in: [String!]\n  image5_not_in: [String!]\n  image5_lt: String\n  image5_lte: String\n  image5_gt: String\n  image5_gte: String\n  image5_contains: String\n  image5_not_contains: String\n  image5_starts_with: String\n  image5_not_starts_with: String\n  image5_ends_with: String\n  image5_not_ends_with: String\n  startTime: DateTime\n  startTime_not: DateTime\n  startTime_in: [DateTime!]\n  startTime_not_in: [DateTime!]\n  startTime_lt: DateTime\n  startTime_lte: DateTime\n  startTime_gt: DateTime\n  startTime_gte: DateTime\n  endTime: DateTime\n  endTime_not: DateTime\n  endTime_in: [DateTime!]\n  endTime_not_in: [DateTime!]\n  endTime_lt: DateTime\n  endTime_lte: DateTime\n  endTime_gt: DateTime\n  endTime_gte: DateTime\n  AND: [AdvertisementWhereInput!]\n  OR: [AdvertisementWhereInput!]\n  NOT: [AdvertisementWhereInput!]\n}\n\ninput AdvertisementWhereUniqueInput {\n  id: ID\n}\n\ntype AggregateAdvertisement {\n  count: Int!\n}\n\ntype AggregateArea {\n  count: Int!\n}\n\ntype AggregateBootCount {\n  count: Int!\n}\n\ntype AggregateCity {\n  count: Int!\n}\n\ntype AggregateClassGroup {\n  count: Int!\n}\n\ntype AggregateClassMate {\n  count: Int!\n}\n\ntype AggregateColleague {\n  count: Int!\n}\n\ntype AggregateCollegeEntranceExam {\n  count: Int!\n}\n\ntype AggregateCompany {\n  count: Int!\n}\n\ntype AggregateFamily {\n  count: Int!\n}\n\ntype AggregateFamilyGroup {\n  count: Int!\n}\n\ntype AggregateFindPassWord {\n  count: Int!\n}\n\ntype AggregateGroup {\n  count: Int!\n}\n\ntype AggregateGroupMessage {\n  count: Int!\n}\n\ntype AggregateLocation {\n  count: Int!\n}\n\ntype AggregateLocationGroup {\n  count: Int!\n}\n\ntype AggregateLogs {\n  count: Int!\n}\n\ntype AggregateMajor {\n  count: Int!\n}\n\ntype AggregateMessage {\n  count: Int!\n}\n\ntype AggregateOldColleague {\n  count: Int!\n}\n\ntype AggregatePerson {\n  count: Int!\n}\n\ntype AggregatePhoto {\n  count: Int!\n}\n\ntype AggregatePost {\n  count: Int!\n}\n\ntype AggregateProvince {\n  count: Int!\n}\n\ntype AggregateRegisterCount {\n  count: Int!\n}\n\ntype AggregateRegStatus {\n  count: Int!\n}\n\ntype AggregateSchool {\n  count: Int!\n}\n\ntype AggregateSchoolEdu {\n  count: Int!\n}\n\ntype AggregateStation {\n  count: Int!\n}\n\ntype AggregateStreet {\n  count: Int!\n}\n\ntype AggregateUniversity {\n  count: Int!\n}\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype AggregateVillage {\n  count: Int!\n}\n\ntype AggregateWork {\n  count: Int!\n}\n\ntype AggregateWorkGroup {\n  count: Int!\n}\n\ntype Area {\n  id: ID!\n  code: String!\n  name: String!\n  city: City!\n  towns(where: StreetWhereInput, orderBy: StreetOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Street!]\n}\n\ntype AreaConnection {\n  pageInfo: PageInfo!\n  edges: [AreaEdge]!\n  aggregate: AggregateArea!\n}\n\ninput AreaCreateInput {\n  code: String!\n  name: String!\n  city: CityCreateOneWithoutAreasInput!\n  towns: StreetCreateManyWithoutAreaInput\n}\n\ninput AreaCreateManyWithoutCityInput {\n  create: [AreaCreateWithoutCityInput!]\n  connect: [AreaWhereUniqueInput!]\n}\n\ninput AreaCreateOneInput {\n  create: AreaCreateInput\n  connect: AreaWhereUniqueInput\n}\n\ninput AreaCreateOneWithoutTownsInput {\n  create: AreaCreateWithoutTownsInput\n  connect: AreaWhereUniqueInput\n}\n\ninput AreaCreateWithoutCityInput {\n  code: String!\n  name: String!\n  towns: StreetCreateManyWithoutAreaInput\n}\n\ninput AreaCreateWithoutTownsInput {\n  code: String!\n  name: String!\n  city: CityCreateOneWithoutAreasInput!\n}\n\ntype AreaEdge {\n  node: Area!\n  cursor: String!\n}\n\nenum AreaOrderByInput {\n  id_ASC\n  id_DESC\n  code_ASC\n  code_DESC\n  name_ASC\n  name_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype AreaPreviousValues {\n  id: ID!\n  code: String!\n  name: String!\n}\n\ninput AreaScalarWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  code: String\n  code_not: String\n  code_in: [String!]\n  code_not_in: [String!]\n  code_lt: String\n  code_lte: String\n  code_gt: String\n  code_gte: String\n  code_contains: String\n  code_not_contains: String\n  code_starts_with: String\n  code_not_starts_with: String\n  code_ends_with: String\n  code_not_ends_with: String\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  AND: [AreaScalarWhereInput!]\n  OR: [AreaScalarWhereInput!]\n  NOT: [AreaScalarWhereInput!]\n}\n\ntype AreaSubscriptionPayload {\n  mutation: MutationType!\n  node: Area\n  updatedFields: [String!]\n  previousValues: AreaPreviousValues\n}\n\ninput AreaSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: AreaWhereInput\n  AND: [AreaSubscriptionWhereInput!]\n  OR: [AreaSubscriptionWhereInput!]\n  NOT: [AreaSubscriptionWhereInput!]\n}\n\ninput AreaUpdateDataInput {\n  code: String\n  name: String\n  city: CityUpdateOneRequiredWithoutAreasInput\n  towns: StreetUpdateManyWithoutAreaInput\n}\n\ninput AreaUpdateInput {\n  code: String\n  name: String\n  city: CityUpdateOneRequiredWithoutAreasInput\n  towns: StreetUpdateManyWithoutAreaInput\n}\n\ninput AreaUpdateManyDataInput {\n  code: String\n  name: String\n}\n\ninput AreaUpdateManyMutationInput {\n  code: String\n  name: String\n}\n\ninput AreaUpdateManyWithoutCityInput {\n  create: [AreaCreateWithoutCityInput!]\n  delete: [AreaWhereUniqueInput!]\n  connect: [AreaWhereUniqueInput!]\n  disconnect: [AreaWhereUniqueInput!]\n  update: [AreaUpdateWithWhereUniqueWithoutCityInput!]\n  upsert: [AreaUpsertWithWhereUniqueWithoutCityInput!]\n  deleteMany: [AreaScalarWhereInput!]\n  updateMany: [AreaUpdateManyWithWhereNestedInput!]\n}\n\ninput AreaUpdateManyWithWhereNestedInput {\n  where: AreaScalarWhereInput!\n  data: AreaUpdateManyDataInput!\n}\n\ninput AreaUpdateOneInput {\n  create: AreaCreateInput\n  update: AreaUpdateDataInput\n  upsert: AreaUpsertNestedInput\n  delete: Boolean\n  disconnect: Boolean\n  connect: AreaWhereUniqueInput\n}\n\ninput AreaUpdateOneRequiredWithoutTownsInput {\n  create: AreaCreateWithoutTownsInput\n  update: AreaUpdateWithoutTownsDataInput\n  upsert: AreaUpsertWithoutTownsInput\n  connect: AreaWhereUniqueInput\n}\n\ninput AreaUpdateWithoutCityDataInput {\n  code: String\n  name: String\n  towns: StreetUpdateManyWithoutAreaInput\n}\n\ninput AreaUpdateWithoutTownsDataInput {\n  code: String\n  name: String\n  city: CityUpdateOneRequiredWithoutAreasInput\n}\n\ninput AreaUpdateWithWhereUniqueWithoutCityInput {\n  where: AreaWhereUniqueInput!\n  data: AreaUpdateWithoutCityDataInput!\n}\n\ninput AreaUpsertNestedInput {\n  update: AreaUpdateDataInput!\n  create: AreaCreateInput!\n}\n\ninput AreaUpsertWithoutTownsInput {\n  update: AreaUpdateWithoutTownsDataInput!\n  create: AreaCreateWithoutTownsInput!\n}\n\ninput AreaUpsertWithWhereUniqueWithoutCityInput {\n  where: AreaWhereUniqueInput!\n  update: AreaUpdateWithoutCityDataInput!\n  create: AreaCreateWithoutCityInput!\n}\n\ninput AreaWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  code: String\n  code_not: String\n  code_in: [String!]\n  code_not_in: [String!]\n  code_lt: String\n  code_lte: String\n  code_gt: String\n  code_gte: String\n  code_contains: String\n  code_not_contains: String\n  code_starts_with: String\n  code_not_starts_with: String\n  code_ends_with: String\n  code_not_ends_with: String\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  city: CityWhereInput\n  towns_every: StreetWhereInput\n  towns_some: StreetWhereInput\n  towns_none: StreetWhereInput\n  AND: [AreaWhereInput!]\n  OR: [AreaWhereInput!]\n  NOT: [AreaWhereInput!]\n}\n\ninput AreaWhereUniqueInput {\n  id: ID\n  code: String\n}\n\ntype BatchPayload {\n  count: Long!\n}\n\ntype BootCount {\n  id: ID!\n  bootUser: User\n  createdAt: DateTime!\n}\n\ntype BootCountConnection {\n  pageInfo: PageInfo!\n  edges: [BootCountEdge]!\n  aggregate: AggregateBootCount!\n}\n\ninput BootCountCreateInput {\n  bootUser: UserCreateOneInput\n}\n\ntype BootCountEdge {\n  node: BootCount!\n  cursor: String!\n}\n\nenum BootCountOrderByInput {\n  id_ASC\n  id_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype BootCountPreviousValues {\n  id: ID!\n  createdAt: DateTime!\n}\n\ntype BootCountSubscriptionPayload {\n  mutation: MutationType!\n  node: BootCount\n  updatedFields: [String!]\n  previousValues: BootCountPreviousValues\n}\n\ninput BootCountSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: BootCountWhereInput\n  AND: [BootCountSubscriptionWhereInput!]\n  OR: [BootCountSubscriptionWhereInput!]\n  NOT: [BootCountSubscriptionWhereInput!]\n}\n\ninput BootCountUpdateInput {\n  bootUser: UserUpdateOneInput\n}\n\ninput BootCountWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  bootUser: UserWhereInput\n  createdAt: DateTime\n  createdAt_not: DateTime\n  createdAt_in: [DateTime!]\n  createdAt_not_in: [DateTime!]\n  createdAt_lt: DateTime\n  createdAt_lte: DateTime\n  createdAt_gt: DateTime\n  createdAt_gte: DateTime\n  AND: [BootCountWhereInput!]\n  OR: [BootCountWhereInput!]\n  NOT: [BootCountWhereInput!]\n}\n\ninput BootCountWhereUniqueInput {\n  id: ID\n}\n\ntype City {\n  id: ID!\n  code: String!\n  name: String!\n  province: Province!\n  areas(where: AreaWhereInput, orderBy: AreaOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Area!]\n}\n\ntype CityConnection {\n  pageInfo: PageInfo!\n  edges: [CityEdge]!\n  aggregate: AggregateCity!\n}\n\ninput CityCreateInput {\n  code: String!\n  name: String!\n  province: ProvinceCreateOneWithoutCitiesInput!\n  areas: AreaCreateManyWithoutCityInput\n}\n\ninput CityCreateManyWithoutProvinceInput {\n  create: [CityCreateWithoutProvinceInput!]\n  connect: [CityWhereUniqueInput!]\n}\n\ninput CityCreateOneInput {\n  create: CityCreateInput\n  connect: CityWhereUniqueInput\n}\n\ninput CityCreateOneWithoutAreasInput {\n  create: CityCreateWithoutAreasInput\n  connect: CityWhereUniqueInput\n}\n\ninput CityCreateWithoutAreasInput {\n  code: String!\n  name: String!\n  province: ProvinceCreateOneWithoutCitiesInput!\n}\n\ninput CityCreateWithoutProvinceInput {\n  code: String!\n  name: String!\n  areas: AreaCreateManyWithoutCityInput\n}\n\ntype CityEdge {\n  node: City!\n  cursor: String!\n}\n\nenum CityOrderByInput {\n  id_ASC\n  id_DESC\n  code_ASC\n  code_DESC\n  name_ASC\n  name_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype CityPreviousValues {\n  id: ID!\n  code: String!\n  name: String!\n}\n\ninput CityScalarWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  code: String\n  code_not: String\n  code_in: [String!]\n  code_not_in: [String!]\n  code_lt: String\n  code_lte: String\n  code_gt: String\n  code_gte: String\n  code_contains: String\n  code_not_contains: String\n  code_starts_with: String\n  code_not_starts_with: String\n  code_ends_with: String\n  code_not_ends_with: String\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  AND: [CityScalarWhereInput!]\n  OR: [CityScalarWhereInput!]\n  NOT: [CityScalarWhereInput!]\n}\n\ntype CitySubscriptionPayload {\n  mutation: MutationType!\n  node: City\n  updatedFields: [String!]\n  previousValues: CityPreviousValues\n}\n\ninput CitySubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: CityWhereInput\n  AND: [CitySubscriptionWhereInput!]\n  OR: [CitySubscriptionWhereInput!]\n  NOT: [CitySubscriptionWhereInput!]\n}\n\ninput CityUpdateDataInput {\n  code: String\n  name: String\n  province: ProvinceUpdateOneRequiredWithoutCitiesInput\n  areas: AreaUpdateManyWithoutCityInput\n}\n\ninput CityUpdateInput {\n  code: String\n  name: String\n  province: ProvinceUpdateOneRequiredWithoutCitiesInput\n  areas: AreaUpdateManyWithoutCityInput\n}\n\ninput CityUpdateManyDataInput {\n  code: String\n  name: String\n}\n\ninput CityUpdateManyMutationInput {\n  code: String\n  name: String\n}\n\ninput CityUpdateManyWithoutProvinceInput {\n  create: [CityCreateWithoutProvinceInput!]\n  delete: [CityWhereUniqueInput!]\n  connect: [CityWhereUniqueInput!]\n  disconnect: [CityWhereUniqueInput!]\n  update: [CityUpdateWithWhereUniqueWithoutProvinceInput!]\n  upsert: [CityUpsertWithWhereUniqueWithoutProvinceInput!]\n  deleteMany: [CityScalarWhereInput!]\n  updateMany: [CityUpdateManyWithWhereNestedInput!]\n}\n\ninput CityUpdateManyWithWhereNestedInput {\n  where: CityScalarWhereInput!\n  data: CityUpdateManyDataInput!\n}\n\ninput CityUpdateOneInput {\n  create: CityCreateInput\n  update: CityUpdateDataInput\n  upsert: CityUpsertNestedInput\n  delete: Boolean\n  disconnect: Boolean\n  connect: CityWhereUniqueInput\n}\n\ninput CityUpdateOneRequiredWithoutAreasInput {\n  create: CityCreateWithoutAreasInput\n  update: CityUpdateWithoutAreasDataInput\n  upsert: CityUpsertWithoutAreasInput\n  connect: CityWhereUniqueInput\n}\n\ninput CityUpdateWithoutAreasDataInput {\n  code: String\n  name: String\n  province: ProvinceUpdateOneRequiredWithoutCitiesInput\n}\n\ninput CityUpdateWithoutProvinceDataInput {\n  code: String\n  name: String\n  areas: AreaUpdateManyWithoutCityInput\n}\n\ninput CityUpdateWithWhereUniqueWithoutProvinceInput {\n  where: CityWhereUniqueInput!\n  data: CityUpdateWithoutProvinceDataInput!\n}\n\ninput CityUpsertNestedInput {\n  update: CityUpdateDataInput!\n  create: CityCreateInput!\n}\n\ninput CityUpsertWithoutAreasInput {\n  update: CityUpdateWithoutAreasDataInput!\n  create: CityCreateWithoutAreasInput!\n}\n\ninput CityUpsertWithWhereUniqueWithoutProvinceInput {\n  where: CityWhereUniqueInput!\n  update: CityUpdateWithoutProvinceDataInput!\n  create: CityCreateWithoutProvinceInput!\n}\n\ninput CityWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  code: String\n  code_not: String\n  code_in: [String!]\n  code_not_in: [String!]\n  code_lt: String\n  code_lte: String\n  code_gt: String\n  code_gte: String\n  code_contains: String\n  code_not_contains: String\n  code_starts_with: String\n  code_not_starts_with: String\n  code_ends_with: String\n  code_not_ends_with: String\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  province: ProvinceWhereInput\n  areas_every: AreaWhereInput\n  areas_some: AreaWhereInput\n  areas_none: AreaWhereInput\n  AND: [CityWhereInput!]\n  OR: [CityWhereInput!]\n  NOT: [CityWhereInput!]\n}\n\ninput CityWhereUniqueInput {\n  id: ID\n  code: String\n}\n\ntype ClassGroup {\n  id: ID!\n  study: SchoolEdu\n  name: String\n  members(where: ClassMateWhereInput, orderBy: ClassMateOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ClassMate!]\n}\n\ntype ClassGroupConnection {\n  pageInfo: PageInfo!\n  edges: [ClassGroupEdge]!\n  aggregate: AggregateClassGroup!\n}\n\ninput ClassGroupCreateInput {\n  study: SchoolEduCreateOneInput\n  name: String\n  members: ClassMateCreateManyWithoutGroupInput\n}\n\ninput ClassGroupCreateOneWithoutMembersInput {\n  create: ClassGroupCreateWithoutMembersInput\n  connect: ClassGroupWhereUniqueInput\n}\n\ninput ClassGroupCreateWithoutMembersInput {\n  study: SchoolEduCreateOneInput\n  name: String\n}\n\ntype ClassGroupEdge {\n  node: ClassGroup!\n  cursor: String!\n}\n\nenum ClassGroupOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype ClassGroupPreviousValues {\n  id: ID!\n  name: String\n}\n\ntype ClassGroupSubscriptionPayload {\n  mutation: MutationType!\n  node: ClassGroup\n  updatedFields: [String!]\n  previousValues: ClassGroupPreviousValues\n}\n\ninput ClassGroupSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: ClassGroupWhereInput\n  AND: [ClassGroupSubscriptionWhereInput!]\n  OR: [ClassGroupSubscriptionWhereInput!]\n  NOT: [ClassGroupSubscriptionWhereInput!]\n}\n\ninput ClassGroupUpdateInput {\n  study: SchoolEduUpdateOneInput\n  name: String\n  members: ClassMateUpdateManyWithoutGroupInput\n}\n\ninput ClassGroupUpdateManyMutationInput {\n  name: String\n}\n\ninput ClassGroupUpdateOneRequiredWithoutMembersInput {\n  create: ClassGroupCreateWithoutMembersInput\n  update: ClassGroupUpdateWithoutMembersDataInput\n  upsert: ClassGroupUpsertWithoutMembersInput\n  connect: ClassGroupWhereUniqueInput\n}\n\ninput ClassGroupUpdateWithoutMembersDataInput {\n  study: SchoolEduUpdateOneInput\n  name: String\n}\n\ninput ClassGroupUpsertWithoutMembersInput {\n  update: ClassGroupUpdateWithoutMembersDataInput!\n  create: ClassGroupCreateWithoutMembersInput!\n}\n\ninput ClassGroupWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  study: SchoolEduWhereInput\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  members_every: ClassMateWhereInput\n  members_some: ClassMateWhereInput\n  members_none: ClassMateWhereInput\n  AND: [ClassGroupWhereInput!]\n  OR: [ClassGroupWhereInput!]\n  NOT: [ClassGroupWhereInput!]\n}\n\ninput ClassGroupWhereUniqueInput {\n  id: ID\n}\n\ntype ClassMate {\n  id: ID!\n  student: User\n  status: String!\n  group: ClassGroup!\n}\n\ntype ClassMateConnection {\n  pageInfo: PageInfo!\n  edges: [ClassMateEdge]!\n  aggregate: AggregateClassMate!\n}\n\ninput ClassMateCreateInput {\n  student: UserCreateOneWithoutClassMateInput\n  status: String!\n  group: ClassGroupCreateOneWithoutMembersInput!\n}\n\ninput ClassMateCreateManyWithoutGroupInput {\n  create: [ClassMateCreateWithoutGroupInput!]\n  connect: [ClassMateWhereUniqueInput!]\n}\n\ninput ClassMateCreateManyWithoutStudentInput {\n  create: [ClassMateCreateWithoutStudentInput!]\n  connect: [ClassMateWhereUniqueInput!]\n}\n\ninput ClassMateCreateWithoutGroupInput {\n  student: UserCreateOneWithoutClassMateInput\n  status: String!\n}\n\ninput ClassMateCreateWithoutStudentInput {\n  status: String!\n  group: ClassGroupCreateOneWithoutMembersInput!\n}\n\ntype ClassMateEdge {\n  node: ClassMate!\n  cursor: String!\n}\n\nenum ClassMateOrderByInput {\n  id_ASC\n  id_DESC\n  status_ASC\n  status_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype ClassMatePreviousValues {\n  id: ID!\n  status: String!\n}\n\ninput ClassMateScalarWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  status: String\n  status_not: String\n  status_in: [String!]\n  status_not_in: [String!]\n  status_lt: String\n  status_lte: String\n  status_gt: String\n  status_gte: String\n  status_contains: String\n  status_not_contains: String\n  status_starts_with: String\n  status_not_starts_with: String\n  status_ends_with: String\n  status_not_ends_with: String\n  AND: [ClassMateScalarWhereInput!]\n  OR: [ClassMateScalarWhereInput!]\n  NOT: [ClassMateScalarWhereInput!]\n}\n\ntype ClassMateSubscriptionPayload {\n  mutation: MutationType!\n  node: ClassMate\n  updatedFields: [String!]\n  previousValues: ClassMatePreviousValues\n}\n\ninput ClassMateSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: ClassMateWhereInput\n  AND: [ClassMateSubscriptionWhereInput!]\n  OR: [ClassMateSubscriptionWhereInput!]\n  NOT: [ClassMateSubscriptionWhereInput!]\n}\n\ninput ClassMateUpdateInput {\n  student: UserUpdateOneWithoutClassMateInput\n  status: String\n  group: ClassGroupUpdateOneRequiredWithoutMembersInput\n}\n\ninput ClassMateUpdateManyDataInput {\n  status: String\n}\n\ninput ClassMateUpdateManyMutationInput {\n  status: String\n}\n\ninput ClassMateUpdateManyWithoutGroupInput {\n  create: [ClassMateCreateWithoutGroupInput!]\n  delete: [ClassMateWhereUniqueInput!]\n  connect: [ClassMateWhereUniqueInput!]\n  disconnect: [ClassMateWhereUniqueInput!]\n  update: [ClassMateUpdateWithWhereUniqueWithoutGroupInput!]\n  upsert: [ClassMateUpsertWithWhereUniqueWithoutGroupInput!]\n  deleteMany: [ClassMateScalarWhereInput!]\n  updateMany: [ClassMateUpdateManyWithWhereNestedInput!]\n}\n\ninput ClassMateUpdateManyWithoutStudentInput {\n  create: [ClassMateCreateWithoutStudentInput!]\n  delete: [ClassMateWhereUniqueInput!]\n  connect: [ClassMateWhereUniqueInput!]\n  disconnect: [ClassMateWhereUniqueInput!]\n  update: [ClassMateUpdateWithWhereUniqueWithoutStudentInput!]\n  upsert: [ClassMateUpsertWithWhereUniqueWithoutStudentInput!]\n  deleteMany: [ClassMateScalarWhereInput!]\n  updateMany: [ClassMateUpdateManyWithWhereNestedInput!]\n}\n\ninput ClassMateUpdateManyWithWhereNestedInput {\n  where: ClassMateScalarWhereInput!\n  data: ClassMateUpdateManyDataInput!\n}\n\ninput ClassMateUpdateWithoutGroupDataInput {\n  student: UserUpdateOneWithoutClassMateInput\n  status: String\n}\n\ninput ClassMateUpdateWithoutStudentDataInput {\n  status: String\n  group: ClassGroupUpdateOneRequiredWithoutMembersInput\n}\n\ninput ClassMateUpdateWithWhereUniqueWithoutGroupInput {\n  where: ClassMateWhereUniqueInput!\n  data: ClassMateUpdateWithoutGroupDataInput!\n}\n\ninput ClassMateUpdateWithWhereUniqueWithoutStudentInput {\n  where: ClassMateWhereUniqueInput!\n  data: ClassMateUpdateWithoutStudentDataInput!\n}\n\ninput ClassMateUpsertWithWhereUniqueWithoutGroupInput {\n  where: ClassMateWhereUniqueInput!\n  update: ClassMateUpdateWithoutGroupDataInput!\n  create: ClassMateCreateWithoutGroupInput!\n}\n\ninput ClassMateUpsertWithWhereUniqueWithoutStudentInput {\n  where: ClassMateWhereUniqueInput!\n  update: ClassMateUpdateWithoutStudentDataInput!\n  create: ClassMateCreateWithoutStudentInput!\n}\n\ninput ClassMateWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  student: UserWhereInput\n  status: String\n  status_not: String\n  status_in: [String!]\n  status_not_in: [String!]\n  status_lt: String\n  status_lte: String\n  status_gt: String\n  status_gte: String\n  status_contains: String\n  status_not_contains: String\n  status_starts_with: String\n  status_not_starts_with: String\n  status_ends_with: String\n  status_not_ends_with: String\n  group: ClassGroupWhereInput\n  AND: [ClassMateWhereInput!]\n  OR: [ClassMateWhereInput!]\n  NOT: [ClassMateWhereInput!]\n}\n\ninput ClassMateWhereUniqueInput {\n  id: ID\n}\n\ntype Colleague {\n  id: ID!\n  worker: User\n  status: String!\n  group: WorkGroup\n}\n\ntype ColleagueConnection {\n  pageInfo: PageInfo!\n  edges: [ColleagueEdge]!\n  aggregate: AggregateColleague!\n}\n\ninput ColleagueCreateInput {\n  worker: UserCreateOneWithoutColleaguesInput\n  status: String!\n  group: WorkGroupCreateOneWithoutColleaguesInput\n}\n\ninput ColleagueCreateManyWithoutGroupInput {\n  create: [ColleagueCreateWithoutGroupInput!]\n  connect: [ColleagueWhereUniqueInput!]\n}\n\ninput ColleagueCreateManyWithoutWorkerInput {\n  create: [ColleagueCreateWithoutWorkerInput!]\n  connect: [ColleagueWhereUniqueInput!]\n}\n\ninput ColleagueCreateWithoutGroupInput {\n  worker: UserCreateOneWithoutColleaguesInput\n  status: String!\n}\n\ninput ColleagueCreateWithoutWorkerInput {\n  status: String!\n  group: WorkGroupCreateOneWithoutColleaguesInput\n}\n\ntype ColleagueEdge {\n  node: Colleague!\n  cursor: String!\n}\n\nenum ColleagueOrderByInput {\n  id_ASC\n  id_DESC\n  status_ASC\n  status_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype ColleaguePreviousValues {\n  id: ID!\n  status: String!\n}\n\ninput ColleagueScalarWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  status: String\n  status_not: String\n  status_in: [String!]\n  status_not_in: [String!]\n  status_lt: String\n  status_lte: String\n  status_gt: String\n  status_gte: String\n  status_contains: String\n  status_not_contains: String\n  status_starts_with: String\n  status_not_starts_with: String\n  status_ends_with: String\n  status_not_ends_with: String\n  AND: [ColleagueScalarWhereInput!]\n  OR: [ColleagueScalarWhereInput!]\n  NOT: [ColleagueScalarWhereInput!]\n}\n\ntype ColleagueSubscriptionPayload {\n  mutation: MutationType!\n  node: Colleague\n  updatedFields: [String!]\n  previousValues: ColleaguePreviousValues\n}\n\ninput ColleagueSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: ColleagueWhereInput\n  AND: [ColleagueSubscriptionWhereInput!]\n  OR: [ColleagueSubscriptionWhereInput!]\n  NOT: [ColleagueSubscriptionWhereInput!]\n}\n\ninput ColleagueUpdateInput {\n  worker: UserUpdateOneWithoutColleaguesInput\n  status: String\n  group: WorkGroupUpdateOneWithoutColleaguesInput\n}\n\ninput ColleagueUpdateManyDataInput {\n  status: String\n}\n\ninput ColleagueUpdateManyMutationInput {\n  status: String\n}\n\ninput ColleagueUpdateManyWithoutGroupInput {\n  create: [ColleagueCreateWithoutGroupInput!]\n  delete: [ColleagueWhereUniqueInput!]\n  connect: [ColleagueWhereUniqueInput!]\n  disconnect: [ColleagueWhereUniqueInput!]\n  update: [ColleagueUpdateWithWhereUniqueWithoutGroupInput!]\n  upsert: [ColleagueUpsertWithWhereUniqueWithoutGroupInput!]\n  deleteMany: [ColleagueScalarWhereInput!]\n  updateMany: [ColleagueUpdateManyWithWhereNestedInput!]\n}\n\ninput ColleagueUpdateManyWithoutWorkerInput {\n  create: [ColleagueCreateWithoutWorkerInput!]\n  delete: [ColleagueWhereUniqueInput!]\n  connect: [ColleagueWhereUniqueInput!]\n  disconnect: [ColleagueWhereUniqueInput!]\n  update: [ColleagueUpdateWithWhereUniqueWithoutWorkerInput!]\n  upsert: [ColleagueUpsertWithWhereUniqueWithoutWorkerInput!]\n  deleteMany: [ColleagueScalarWhereInput!]\n  updateMany: [ColleagueUpdateManyWithWhereNestedInput!]\n}\n\ninput ColleagueUpdateManyWithWhereNestedInput {\n  where: ColleagueScalarWhereInput!\n  data: ColleagueUpdateManyDataInput!\n}\n\ninput ColleagueUpdateWithoutGroupDataInput {\n  worker: UserUpdateOneWithoutColleaguesInput\n  status: String\n}\n\ninput ColleagueUpdateWithoutWorkerDataInput {\n  status: String\n  group: WorkGroupUpdateOneWithoutColleaguesInput\n}\n\ninput ColleagueUpdateWithWhereUniqueWithoutGroupInput {\n  where: ColleagueWhereUniqueInput!\n  data: ColleagueUpdateWithoutGroupDataInput!\n}\n\ninput ColleagueUpdateWithWhereUniqueWithoutWorkerInput {\n  where: ColleagueWhereUniqueInput!\n  data: ColleagueUpdateWithoutWorkerDataInput!\n}\n\ninput ColleagueUpsertWithWhereUniqueWithoutGroupInput {\n  where: ColleagueWhereUniqueInput!\n  update: ColleagueUpdateWithoutGroupDataInput!\n  create: ColleagueCreateWithoutGroupInput!\n}\n\ninput ColleagueUpsertWithWhereUniqueWithoutWorkerInput {\n  where: ColleagueWhereUniqueInput!\n  update: ColleagueUpdateWithoutWorkerDataInput!\n  create: ColleagueCreateWithoutWorkerInput!\n}\n\ninput ColleagueWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  worker: UserWhereInput\n  status: String\n  status_not: String\n  status_in: [String!]\n  status_not_in: [String!]\n  status_lt: String\n  status_lte: String\n  status_gt: String\n  status_gte: String\n  status_contains: String\n  status_not_contains: String\n  status_starts_with: String\n  status_not_starts_with: String\n  status_ends_with: String\n  status_not_ends_with: String\n  group: WorkGroupWhereInput\n  AND: [ColleagueWhereInput!]\n  OR: [ColleagueWhereInput!]\n  NOT: [ColleagueWhereInput!]\n}\n\ninput ColleagueWhereUniqueInput {\n  id: ID\n}\n\ntype CollegeEntranceExam {\n  id: ID!\n  province: Province!\n  subject: String!\n  culscore: Float!\n  proscore: Float\n  candidatenum: String!\n  times: Int\n  student: User!\n}\n\ntype CollegeEntranceExamConnection {\n  pageInfo: PageInfo!\n  edges: [CollegeEntranceExamEdge]!\n  aggregate: AggregateCollegeEntranceExam!\n}\n\ninput CollegeEntranceExamCreateInput {\n  province: ProvinceCreateOneInput!\n  subject: String!\n  culscore: Float!\n  proscore: Float\n  candidatenum: String!\n  times: Int\n  student: UserCreateOneWithoutExamInput!\n}\n\ninput CollegeEntranceExamCreateOneWithoutStudentInput {\n  create: CollegeEntranceExamCreateWithoutStudentInput\n  connect: CollegeEntranceExamWhereUniqueInput\n}\n\ninput CollegeEntranceExamCreateWithoutStudentInput {\n  province: ProvinceCreateOneInput!\n  subject: String!\n  culscore: Float!\n  proscore: Float\n  candidatenum: String!\n  times: Int\n}\n\ntype CollegeEntranceExamEdge {\n  node: CollegeEntranceExam!\n  cursor: String!\n}\n\nenum CollegeEntranceExamOrderByInput {\n  id_ASC\n  id_DESC\n  subject_ASC\n  subject_DESC\n  culscore_ASC\n  culscore_DESC\n  proscore_ASC\n  proscore_DESC\n  candidatenum_ASC\n  candidatenum_DESC\n  times_ASC\n  times_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype CollegeEntranceExamPreviousValues {\n  id: ID!\n  subject: String!\n  culscore: Float!\n  proscore: Float\n  candidatenum: String!\n  times: Int\n}\n\ntype CollegeEntranceExamSubscriptionPayload {\n  mutation: MutationType!\n  node: CollegeEntranceExam\n  updatedFields: [String!]\n  previousValues: CollegeEntranceExamPreviousValues\n}\n\ninput CollegeEntranceExamSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: CollegeEntranceExamWhereInput\n  AND: [CollegeEntranceExamSubscriptionWhereInput!]\n  OR: [CollegeEntranceExamSubscriptionWhereInput!]\n  NOT: [CollegeEntranceExamSubscriptionWhereInput!]\n}\n\ninput CollegeEntranceExamUpdateInput {\n  province: ProvinceUpdateOneRequiredInput\n  subject: String\n  culscore: Float\n  proscore: Float\n  candidatenum: String\n  times: Int\n  student: UserUpdateOneRequiredWithoutExamInput\n}\n\ninput CollegeEntranceExamUpdateManyMutationInput {\n  subject: String\n  culscore: Float\n  proscore: Float\n  candidatenum: String\n  times: Int\n}\n\ninput CollegeEntranceExamUpdateOneWithoutStudentInput {\n  create: CollegeEntranceExamCreateWithoutStudentInput\n  update: CollegeEntranceExamUpdateWithoutStudentDataInput\n  upsert: CollegeEntranceExamUpsertWithoutStudentInput\n  delete: Boolean\n  disconnect: Boolean\n  connect: CollegeEntranceExamWhereUniqueInput\n}\n\ninput CollegeEntranceExamUpdateWithoutStudentDataInput {\n  province: ProvinceUpdateOneRequiredInput\n  subject: String\n  culscore: Float\n  proscore: Float\n  candidatenum: String\n  times: Int\n}\n\ninput CollegeEntranceExamUpsertWithoutStudentInput {\n  update: CollegeEntranceExamUpdateWithoutStudentDataInput!\n  create: CollegeEntranceExamCreateWithoutStudentInput!\n}\n\ninput CollegeEntranceExamWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  province: ProvinceWhereInput\n  subject: String\n  subject_not: String\n  subject_in: [String!]\n  subject_not_in: [String!]\n  subject_lt: String\n  subject_lte: String\n  subject_gt: String\n  subject_gte: String\n  subject_contains: String\n  subject_not_contains: String\n  subject_starts_with: String\n  subject_not_starts_with: String\n  subject_ends_with: String\n  subject_not_ends_with: String\n  culscore: Float\n  culscore_not: Float\n  culscore_in: [Float!]\n  culscore_not_in: [Float!]\n  culscore_lt: Float\n  culscore_lte: Float\n  culscore_gt: Float\n  culscore_gte: Float\n  proscore: Float\n  proscore_not: Float\n  proscore_in: [Float!]\n  proscore_not_in: [Float!]\n  proscore_lt: Float\n  proscore_lte: Float\n  proscore_gt: Float\n  proscore_gte: Float\n  candidatenum: String\n  candidatenum_not: String\n  candidatenum_in: [String!]\n  candidatenum_not_in: [String!]\n  candidatenum_lt: String\n  candidatenum_lte: String\n  candidatenum_gt: String\n  candidatenum_gte: String\n  candidatenum_contains: String\n  candidatenum_not_contains: String\n  candidatenum_starts_with: String\n  candidatenum_not_starts_with: String\n  candidatenum_ends_with: String\n  candidatenum_not_ends_with: String\n  times: Int\n  times_not: Int\n  times_in: [Int!]\n  times_not_in: [Int!]\n  times_lt: Int\n  times_lte: Int\n  times_gt: Int\n  times_gte: Int\n  student: UserWhereInput\n  AND: [CollegeEntranceExamWhereInput!]\n  OR: [CollegeEntranceExamWhereInput!]\n  NOT: [CollegeEntranceExamWhereInput!]\n}\n\ninput CollegeEntranceExamWhereUniqueInput {\n  id: ID\n  candidatenum: String\n}\n\ntype Company {\n  id: ID!\n  name: String\n  code: String\n  establishmentDate: DateTime\n  representative: String\n  location: Location\n  BusinessScope: String\n  works(where: WorkWhereInput, orderBy: WorkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Work!]\n  workGroup: WorkGroup\n}\n\ntype CompanyConnection {\n  pageInfo: PageInfo!\n  edges: [CompanyEdge]!\n  aggregate: AggregateCompany!\n}\n\ninput CompanyCreateInput {\n  name: String\n  code: String\n  establishmentDate: DateTime\n  representative: String\n  location: LocationCreateOneWithoutCompaniesInput\n  BusinessScope: String\n  works: WorkCreateManyWithoutCompanyInput\n  workGroup: WorkGroupCreateOneWithoutCompanyInput\n}\n\ninput CompanyCreateManyWithoutLocationInput {\n  create: [CompanyCreateWithoutLocationInput!]\n  connect: [CompanyWhereUniqueInput!]\n}\n\ninput CompanyCreateOneInput {\n  create: CompanyCreateInput\n  connect: CompanyWhereUniqueInput\n}\n\ninput CompanyCreateOneWithoutWorkGroupInput {\n  create: CompanyCreateWithoutWorkGroupInput\n  connect: CompanyWhereUniqueInput\n}\n\ninput CompanyCreateOneWithoutWorksInput {\n  create: CompanyCreateWithoutWorksInput\n  connect: CompanyWhereUniqueInput\n}\n\ninput CompanyCreateWithoutLocationInput {\n  name: String\n  code: String\n  establishmentDate: DateTime\n  representative: String\n  BusinessScope: String\n  works: WorkCreateManyWithoutCompanyInput\n  workGroup: WorkGroupCreateOneWithoutCompanyInput\n}\n\ninput CompanyCreateWithoutWorkGroupInput {\n  name: String\n  code: String\n  establishmentDate: DateTime\n  representative: String\n  location: LocationCreateOneWithoutCompaniesInput\n  BusinessScope: String\n  works: WorkCreateManyWithoutCompanyInput\n}\n\ninput CompanyCreateWithoutWorksInput {\n  name: String\n  code: String\n  establishmentDate: DateTime\n  representative: String\n  location: LocationCreateOneWithoutCompaniesInput\n  BusinessScope: String\n  workGroup: WorkGroupCreateOneWithoutCompanyInput\n}\n\ntype CompanyEdge {\n  node: Company!\n  cursor: String!\n}\n\nenum CompanyOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  code_ASC\n  code_DESC\n  establishmentDate_ASC\n  establishmentDate_DESC\n  representative_ASC\n  representative_DESC\n  BusinessScope_ASC\n  BusinessScope_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype CompanyPreviousValues {\n  id: ID!\n  name: String\n  code: String\n  establishmentDate: DateTime\n  representative: String\n  BusinessScope: String\n}\n\ninput CompanyScalarWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  code: String\n  code_not: String\n  code_in: [String!]\n  code_not_in: [String!]\n  code_lt: String\n  code_lte: String\n  code_gt: String\n  code_gte: String\n  code_contains: String\n  code_not_contains: String\n  code_starts_with: String\n  code_not_starts_with: String\n  code_ends_with: String\n  code_not_ends_with: String\n  establishmentDate: DateTime\n  establishmentDate_not: DateTime\n  establishmentDate_in: [DateTime!]\n  establishmentDate_not_in: [DateTime!]\n  establishmentDate_lt: DateTime\n  establishmentDate_lte: DateTime\n  establishmentDate_gt: DateTime\n  establishmentDate_gte: DateTime\n  representative: String\n  representative_not: String\n  representative_in: [String!]\n  representative_not_in: [String!]\n  representative_lt: String\n  representative_lte: String\n  representative_gt: String\n  representative_gte: String\n  representative_contains: String\n  representative_not_contains: String\n  representative_starts_with: String\n  representative_not_starts_with: String\n  representative_ends_with: String\n  representative_not_ends_with: String\n  BusinessScope: String\n  BusinessScope_not: String\n  BusinessScope_in: [String!]\n  BusinessScope_not_in: [String!]\n  BusinessScope_lt: String\n  BusinessScope_lte: String\n  BusinessScope_gt: String\n  BusinessScope_gte: String\n  BusinessScope_contains: String\n  BusinessScope_not_contains: String\n  BusinessScope_starts_with: String\n  BusinessScope_not_starts_with: String\n  BusinessScope_ends_with: String\n  BusinessScope_not_ends_with: String\n  AND: [CompanyScalarWhereInput!]\n  OR: [CompanyScalarWhereInput!]\n  NOT: [CompanyScalarWhereInput!]\n}\n\ntype CompanySubscriptionPayload {\n  mutation: MutationType!\n  node: Company\n  updatedFields: [String!]\n  previousValues: CompanyPreviousValues\n}\n\ninput CompanySubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: CompanyWhereInput\n  AND: [CompanySubscriptionWhereInput!]\n  OR: [CompanySubscriptionWhereInput!]\n  NOT: [CompanySubscriptionWhereInput!]\n}\n\ninput CompanyUpdateDataInput {\n  name: String\n  code: String\n  establishmentDate: DateTime\n  representative: String\n  location: LocationUpdateOneWithoutCompaniesInput\n  BusinessScope: String\n  works: WorkUpdateManyWithoutCompanyInput\n  workGroup: WorkGroupUpdateOneWithoutCompanyInput\n}\n\ninput CompanyUpdateInput {\n  name: String\n  code: String\n  establishmentDate: DateTime\n  representative: String\n  location: LocationUpdateOneWithoutCompaniesInput\n  BusinessScope: String\n  works: WorkUpdateManyWithoutCompanyInput\n  workGroup: WorkGroupUpdateOneWithoutCompanyInput\n}\n\ninput CompanyUpdateManyDataInput {\n  name: String\n  code: String\n  establishmentDate: DateTime\n  representative: String\n  BusinessScope: String\n}\n\ninput CompanyUpdateManyMutationInput {\n  name: String\n  code: String\n  establishmentDate: DateTime\n  representative: String\n  BusinessScope: String\n}\n\ninput CompanyUpdateManyWithoutLocationInput {\n  create: [CompanyCreateWithoutLocationInput!]\n  delete: [CompanyWhereUniqueInput!]\n  connect: [CompanyWhereUniqueInput!]\n  disconnect: [CompanyWhereUniqueInput!]\n  update: [CompanyUpdateWithWhereUniqueWithoutLocationInput!]\n  upsert: [CompanyUpsertWithWhereUniqueWithoutLocationInput!]\n  deleteMany: [CompanyScalarWhereInput!]\n  updateMany: [CompanyUpdateManyWithWhereNestedInput!]\n}\n\ninput CompanyUpdateManyWithWhereNestedInput {\n  where: CompanyScalarWhereInput!\n  data: CompanyUpdateManyDataInput!\n}\n\ninput CompanyUpdateOneInput {\n  create: CompanyCreateInput\n  update: CompanyUpdateDataInput\n  upsert: CompanyUpsertNestedInput\n  delete: Boolean\n  disconnect: Boolean\n  connect: CompanyWhereUniqueInput\n}\n\ninput CompanyUpdateOneWithoutWorkGroupInput {\n  create: CompanyCreateWithoutWorkGroupInput\n  update: CompanyUpdateWithoutWorkGroupDataInput\n  upsert: CompanyUpsertWithoutWorkGroupInput\n  delete: Boolean\n  disconnect: Boolean\n  connect: CompanyWhereUniqueInput\n}\n\ninput CompanyUpdateOneWithoutWorksInput {\n  create: CompanyCreateWithoutWorksInput\n  update: CompanyUpdateWithoutWorksDataInput\n  upsert: CompanyUpsertWithoutWorksInput\n  delete: Boolean\n  disconnect: Boolean\n  connect: CompanyWhereUniqueInput\n}\n\ninput CompanyUpdateWithoutLocationDataInput {\n  name: String\n  code: String\n  establishmentDate: DateTime\n  representative: String\n  BusinessScope: String\n  works: WorkUpdateManyWithoutCompanyInput\n  workGroup: WorkGroupUpdateOneWithoutCompanyInput\n}\n\ninput CompanyUpdateWithoutWorkGroupDataInput {\n  name: String\n  code: String\n  establishmentDate: DateTime\n  representative: String\n  location: LocationUpdateOneWithoutCompaniesInput\n  BusinessScope: String\n  works: WorkUpdateManyWithoutCompanyInput\n}\n\ninput CompanyUpdateWithoutWorksDataInput {\n  name: String\n  code: String\n  establishmentDate: DateTime\n  representative: String\n  location: LocationUpdateOneWithoutCompaniesInput\n  BusinessScope: String\n  workGroup: WorkGroupUpdateOneWithoutCompanyInput\n}\n\ninput CompanyUpdateWithWhereUniqueWithoutLocationInput {\n  where: CompanyWhereUniqueInput!\n  data: CompanyUpdateWithoutLocationDataInput!\n}\n\ninput CompanyUpsertNestedInput {\n  update: CompanyUpdateDataInput!\n  create: CompanyCreateInput!\n}\n\ninput CompanyUpsertWithoutWorkGroupInput {\n  update: CompanyUpdateWithoutWorkGroupDataInput!\n  create: CompanyCreateWithoutWorkGroupInput!\n}\n\ninput CompanyUpsertWithoutWorksInput {\n  update: CompanyUpdateWithoutWorksDataInput!\n  create: CompanyCreateWithoutWorksInput!\n}\n\ninput CompanyUpsertWithWhereUniqueWithoutLocationInput {\n  where: CompanyWhereUniqueInput!\n  update: CompanyUpdateWithoutLocationDataInput!\n  create: CompanyCreateWithoutLocationInput!\n}\n\ninput CompanyWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  code: String\n  code_not: String\n  code_in: [String!]\n  code_not_in: [String!]\n  code_lt: String\n  code_lte: String\n  code_gt: String\n  code_gte: String\n  code_contains: String\n  code_not_contains: String\n  code_starts_with: String\n  code_not_starts_with: String\n  code_ends_with: String\n  code_not_ends_with: String\n  establishmentDate: DateTime\n  establishmentDate_not: DateTime\n  establishmentDate_in: [DateTime!]\n  establishmentDate_not_in: [DateTime!]\n  establishmentDate_lt: DateTime\n  establishmentDate_lte: DateTime\n  establishmentDate_gt: DateTime\n  establishmentDate_gte: DateTime\n  representative: String\n  representative_not: String\n  representative_in: [String!]\n  representative_not_in: [String!]\n  representative_lt: String\n  representative_lte: String\n  representative_gt: String\n  representative_gte: String\n  representative_contains: String\n  representative_not_contains: String\n  representative_starts_with: String\n  representative_not_starts_with: String\n  representative_ends_with: String\n  representative_not_ends_with: String\n  location: LocationWhereInput\n  BusinessScope: String\n  BusinessScope_not: String\n  BusinessScope_in: [String!]\n  BusinessScope_not_in: [String!]\n  BusinessScope_lt: String\n  BusinessScope_lte: String\n  BusinessScope_gt: String\n  BusinessScope_gte: String\n  BusinessScope_contains: String\n  BusinessScope_not_contains: String\n  BusinessScope_starts_with: String\n  BusinessScope_not_starts_with: String\n  BusinessScope_ends_with: String\n  BusinessScope_not_ends_with: String\n  works_every: WorkWhereInput\n  works_some: WorkWhereInput\n  works_none: WorkWhereInput\n  workGroup: WorkGroupWhereInput\n  AND: [CompanyWhereInput!]\n  OR: [CompanyWhereInput!]\n  NOT: [CompanyWhereInput!]\n}\n\ninput CompanyWhereUniqueInput {\n  id: ID\n  name: String\n}\n\nscalar DateTime\n\nenum Educationkind {\n  PrimarySchool\n  JuniorMiddleSchool\n  HighSchool\n  VocationalHighSchool\n  TechnicalSchool\n  SecondarySpecializedSchool\n  JuniorCollege\n  Undergraduate\n  Master\n  Doctor\n  JuniorToCollege\n  HighToCollege\n  HighToJunior\n}\n\ntype Family {\n  id: ID!\n  from: User!\n  to: Person!\n  relationship: String!\n  spouse: Family\n  status: String!\n}\n\ntype FamilyConnection {\n  pageInfo: PageInfo!\n  edges: [FamilyEdge]!\n  aggregate: AggregateFamily!\n}\n\ninput FamilyCreateInput {\n  from: UserCreateOneWithoutFamiliesInput!\n  to: PersonCreateOneWithoutFamiliesInput!\n  relationship: String!\n  spouse: FamilyCreateOneInput\n  status: String!\n}\n\ninput FamilyCreateManyInput {\n  create: [FamilyCreateInput!]\n  connect: [FamilyWhereUniqueInput!]\n}\n\ninput FamilyCreateManyWithoutFromInput {\n  create: [FamilyCreateWithoutFromInput!]\n  connect: [FamilyWhereUniqueInput!]\n}\n\ninput FamilyCreateManyWithoutToInput {\n  create: [FamilyCreateWithoutToInput!]\n  connect: [FamilyWhereUniqueInput!]\n}\n\ninput FamilyCreateOneInput {\n  create: FamilyCreateInput\n  connect: FamilyWhereUniqueInput\n}\n\ninput FamilyCreateWithoutFromInput {\n  to: PersonCreateOneWithoutFamiliesInput!\n  relationship: String!\n  spouse: FamilyCreateOneInput\n  status: String!\n}\n\ninput FamilyCreateWithoutToInput {\n  from: UserCreateOneWithoutFamiliesInput!\n  relationship: String!\n  spouse: FamilyCreateOneInput\n  status: String!\n}\n\ntype FamilyEdge {\n  node: Family!\n  cursor: String!\n}\n\ntype FamilyGroup {\n  id: ID!\n  father: Person\n  mother: Person\n  creater: User\n  name: String\n  families(where: FamilyWhereInput, orderBy: FamilyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Family!]\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]\n}\n\ntype FamilyGroupConnection {\n  pageInfo: PageInfo!\n  edges: [FamilyGroupEdge]!\n  aggregate: AggregateFamilyGroup!\n}\n\ninput FamilyGroupCreateInput {\n  father: PersonCreateOneWithoutAsFatherInput\n  mother: PersonCreateOneWithoutAsMotherInput\n  creater: UserCreateOneWithoutCreaterInput\n  name: String\n  families: FamilyCreateManyInput\n  users: UserCreateManyWithoutFamilyGroupInput\n}\n\ninput FamilyGroupCreateManyWithoutFatherInput {\n  create: [FamilyGroupCreateWithoutFatherInput!]\n  connect: [FamilyGroupWhereUniqueInput!]\n}\n\ninput FamilyGroupCreateManyWithoutMotherInput {\n  create: [FamilyGroupCreateWithoutMotherInput!]\n  connect: [FamilyGroupWhereUniqueInput!]\n}\n\ninput FamilyGroupCreateOneWithoutCreaterInput {\n  create: FamilyGroupCreateWithoutCreaterInput\n  connect: FamilyGroupWhereUniqueInput\n}\n\ninput FamilyGroupCreateOneWithoutUsersInput {\n  create: FamilyGroupCreateWithoutUsersInput\n  connect: FamilyGroupWhereUniqueInput\n}\n\ninput FamilyGroupCreateWithoutCreaterInput {\n  father: PersonCreateOneWithoutAsFatherInput\n  mother: PersonCreateOneWithoutAsMotherInput\n  name: String\n  families: FamilyCreateManyInput\n  users: UserCreateManyWithoutFamilyGroupInput\n}\n\ninput FamilyGroupCreateWithoutFatherInput {\n  mother: PersonCreateOneWithoutAsMotherInput\n  creater: UserCreateOneWithoutCreaterInput\n  name: String\n  families: FamilyCreateManyInput\n  users: UserCreateManyWithoutFamilyGroupInput\n}\n\ninput FamilyGroupCreateWithoutMotherInput {\n  father: PersonCreateOneWithoutAsFatherInput\n  creater: UserCreateOneWithoutCreaterInput\n  name: String\n  families: FamilyCreateManyInput\n  users: UserCreateManyWithoutFamilyGroupInput\n}\n\ninput FamilyGroupCreateWithoutUsersInput {\n  father: PersonCreateOneWithoutAsFatherInput\n  mother: PersonCreateOneWithoutAsMotherInput\n  creater: UserCreateOneWithoutCreaterInput\n  name: String\n  families: FamilyCreateManyInput\n}\n\ntype FamilyGroupEdge {\n  node: FamilyGroup!\n  cursor: String!\n}\n\nenum FamilyGroupOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype FamilyGroupPreviousValues {\n  id: ID!\n  name: String\n}\n\ninput FamilyGroupScalarWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  AND: [FamilyGroupScalarWhereInput!]\n  OR: [FamilyGroupScalarWhereInput!]\n  NOT: [FamilyGroupScalarWhereInput!]\n}\n\ntype FamilyGroupSubscriptionPayload {\n  mutation: MutationType!\n  node: FamilyGroup\n  updatedFields: [String!]\n  previousValues: FamilyGroupPreviousValues\n}\n\ninput FamilyGroupSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: FamilyGroupWhereInput\n  AND: [FamilyGroupSubscriptionWhereInput!]\n  OR: [FamilyGroupSubscriptionWhereInput!]\n  NOT: [FamilyGroupSubscriptionWhereInput!]\n}\n\ninput FamilyGroupUpdateInput {\n  father: PersonUpdateOneWithoutAsFatherInput\n  mother: PersonUpdateOneWithoutAsMotherInput\n  creater: UserUpdateOneWithoutCreaterInput\n  name: String\n  families: FamilyUpdateManyInput\n  users: UserUpdateManyWithoutFamilyGroupInput\n}\n\ninput FamilyGroupUpdateManyDataInput {\n  name: String\n}\n\ninput FamilyGroupUpdateManyMutationInput {\n  name: String\n}\n\ninput FamilyGroupUpdateManyWithoutFatherInput {\n  create: [FamilyGroupCreateWithoutFatherInput!]\n  delete: [FamilyGroupWhereUniqueInput!]\n  connect: [FamilyGroupWhereUniqueInput!]\n  disconnect: [FamilyGroupWhereUniqueInput!]\n  update: [FamilyGroupUpdateWithWhereUniqueWithoutFatherInput!]\n  upsert: [FamilyGroupUpsertWithWhereUniqueWithoutFatherInput!]\n  deleteMany: [FamilyGroupScalarWhereInput!]\n  updateMany: [FamilyGroupUpdateManyWithWhereNestedInput!]\n}\n\ninput FamilyGroupUpdateManyWithoutMotherInput {\n  create: [FamilyGroupCreateWithoutMotherInput!]\n  delete: [FamilyGroupWhereUniqueInput!]\n  connect: [FamilyGroupWhereUniqueInput!]\n  disconnect: [FamilyGroupWhereUniqueInput!]\n  update: [FamilyGroupUpdateWithWhereUniqueWithoutMotherInput!]\n  upsert: [FamilyGroupUpsertWithWhereUniqueWithoutMotherInput!]\n  deleteMany: [FamilyGroupScalarWhereInput!]\n  updateMany: [FamilyGroupUpdateManyWithWhereNestedInput!]\n}\n\ninput FamilyGroupUpdateManyWithWhereNestedInput {\n  where: FamilyGroupScalarWhereInput!\n  data: FamilyGroupUpdateManyDataInput!\n}\n\ninput FamilyGroupUpdateOneWithoutCreaterInput {\n  create: FamilyGroupCreateWithoutCreaterInput\n  update: FamilyGroupUpdateWithoutCreaterDataInput\n  upsert: FamilyGroupUpsertWithoutCreaterInput\n  delete: Boolean\n  disconnect: Boolean\n  connect: FamilyGroupWhereUniqueInput\n}\n\ninput FamilyGroupUpdateOneWithoutUsersInput {\n  create: FamilyGroupCreateWithoutUsersInput\n  update: FamilyGroupUpdateWithoutUsersDataInput\n  upsert: FamilyGroupUpsertWithoutUsersInput\n  delete: Boolean\n  disconnect: Boolean\n  connect: FamilyGroupWhereUniqueInput\n}\n\ninput FamilyGroupUpdateWithoutCreaterDataInput {\n  father: PersonUpdateOneWithoutAsFatherInput\n  mother: PersonUpdateOneWithoutAsMotherInput\n  name: String\n  families: FamilyUpdateManyInput\n  users: UserUpdateManyWithoutFamilyGroupInput\n}\n\ninput FamilyGroupUpdateWithoutFatherDataInput {\n  mother: PersonUpdateOneWithoutAsMotherInput\n  creater: UserUpdateOneWithoutCreaterInput\n  name: String\n  families: FamilyUpdateManyInput\n  users: UserUpdateManyWithoutFamilyGroupInput\n}\n\ninput FamilyGroupUpdateWithoutMotherDataInput {\n  father: PersonUpdateOneWithoutAsFatherInput\n  creater: UserUpdateOneWithoutCreaterInput\n  name: String\n  families: FamilyUpdateManyInput\n  users: UserUpdateManyWithoutFamilyGroupInput\n}\n\ninput FamilyGroupUpdateWithoutUsersDataInput {\n  father: PersonUpdateOneWithoutAsFatherInput\n  mother: PersonUpdateOneWithoutAsMotherInput\n  creater: UserUpdateOneWithoutCreaterInput\n  name: String\n  families: FamilyUpdateManyInput\n}\n\ninput FamilyGroupUpdateWithWhereUniqueWithoutFatherInput {\n  where: FamilyGroupWhereUniqueInput!\n  data: FamilyGroupUpdateWithoutFatherDataInput!\n}\n\ninput FamilyGroupUpdateWithWhereUniqueWithoutMotherInput {\n  where: FamilyGroupWhereUniqueInput!\n  data: FamilyGroupUpdateWithoutMotherDataInput!\n}\n\ninput FamilyGroupUpsertWithoutCreaterInput {\n  update: FamilyGroupUpdateWithoutCreaterDataInput!\n  create: FamilyGroupCreateWithoutCreaterInput!\n}\n\ninput FamilyGroupUpsertWithoutUsersInput {\n  update: FamilyGroupUpdateWithoutUsersDataInput!\n  create: FamilyGroupCreateWithoutUsersInput!\n}\n\ninput FamilyGroupUpsertWithWhereUniqueWithoutFatherInput {\n  where: FamilyGroupWhereUniqueInput!\n  update: FamilyGroupUpdateWithoutFatherDataInput!\n  create: FamilyGroupCreateWithoutFatherInput!\n}\n\ninput FamilyGroupUpsertWithWhereUniqueWithoutMotherInput {\n  where: FamilyGroupWhereUniqueInput!\n  update: FamilyGroupUpdateWithoutMotherDataInput!\n  create: FamilyGroupCreateWithoutMotherInput!\n}\n\ninput FamilyGroupWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  father: PersonWhereInput\n  mother: PersonWhereInput\n  creater: UserWhereInput\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  families_every: FamilyWhereInput\n  families_some: FamilyWhereInput\n  families_none: FamilyWhereInput\n  users_every: UserWhereInput\n  users_some: UserWhereInput\n  users_none: UserWhereInput\n  AND: [FamilyGroupWhereInput!]\n  OR: [FamilyGroupWhereInput!]\n  NOT: [FamilyGroupWhereInput!]\n}\n\ninput FamilyGroupWhereUniqueInput {\n  id: ID\n}\n\nenum FamilyOrderByInput {\n  id_ASC\n  id_DESC\n  relationship_ASC\n  relationship_DESC\n  status_ASC\n  status_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype FamilyPreviousValues {\n  id: ID!\n  relationship: String!\n  status: String!\n}\n\ninput FamilyScalarWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  relationship: String\n  relationship_not: String\n  relationship_in: [String!]\n  relationship_not_in: [String!]\n  relationship_lt: String\n  relationship_lte: String\n  relationship_gt: String\n  relationship_gte: String\n  relationship_contains: String\n  relationship_not_contains: String\n  relationship_starts_with: String\n  relationship_not_starts_with: String\n  relationship_ends_with: String\n  relationship_not_ends_with: String\n  status: String\n  status_not: String\n  status_in: [String!]\n  status_not_in: [String!]\n  status_lt: String\n  status_lte: String\n  status_gt: String\n  status_gte: String\n  status_contains: String\n  status_not_contains: String\n  status_starts_with: String\n  status_not_starts_with: String\n  status_ends_with: String\n  status_not_ends_with: String\n  AND: [FamilyScalarWhereInput!]\n  OR: [FamilyScalarWhereInput!]\n  NOT: [FamilyScalarWhereInput!]\n}\n\ntype FamilySubscriptionPayload {\n  mutation: MutationType!\n  node: Family\n  updatedFields: [String!]\n  previousValues: FamilyPreviousValues\n}\n\ninput FamilySubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: FamilyWhereInput\n  AND: [FamilySubscriptionWhereInput!]\n  OR: [FamilySubscriptionWhereInput!]\n  NOT: [FamilySubscriptionWhereInput!]\n}\n\ninput FamilyUpdateDataInput {\n  from: UserUpdateOneRequiredWithoutFamiliesInput\n  to: PersonUpdateOneRequiredWithoutFamiliesInput\n  relationship: String\n  spouse: FamilyUpdateOneInput\n  status: String\n}\n\ninput FamilyUpdateInput {\n  from: UserUpdateOneRequiredWithoutFamiliesInput\n  to: PersonUpdateOneRequiredWithoutFamiliesInput\n  relationship: String\n  spouse: FamilyUpdateOneInput\n  status: String\n}\n\ninput FamilyUpdateManyDataInput {\n  relationship: String\n  status: String\n}\n\ninput FamilyUpdateManyInput {\n  create: [FamilyCreateInput!]\n  update: [FamilyUpdateWithWhereUniqueNestedInput!]\n  upsert: [FamilyUpsertWithWhereUniqueNestedInput!]\n  delete: [FamilyWhereUniqueInput!]\n  connect: [FamilyWhereUniqueInput!]\n  disconnect: [FamilyWhereUniqueInput!]\n  deleteMany: [FamilyScalarWhereInput!]\n  updateMany: [FamilyUpdateManyWithWhereNestedInput!]\n}\n\ninput FamilyUpdateManyMutationInput {\n  relationship: String\n  status: String\n}\n\ninput FamilyUpdateManyWithoutFromInput {\n  create: [FamilyCreateWithoutFromInput!]\n  delete: [FamilyWhereUniqueInput!]\n  connect: [FamilyWhereUniqueInput!]\n  disconnect: [FamilyWhereUniqueInput!]\n  update: [FamilyUpdateWithWhereUniqueWithoutFromInput!]\n  upsert: [FamilyUpsertWithWhereUniqueWithoutFromInput!]\n  deleteMany: [FamilyScalarWhereInput!]\n  updateMany: [FamilyUpdateManyWithWhereNestedInput!]\n}\n\ninput FamilyUpdateManyWithoutToInput {\n  create: [FamilyCreateWithoutToInput!]\n  delete: [FamilyWhereUniqueInput!]\n  connect: [FamilyWhereUniqueInput!]\n  disconnect: [FamilyWhereUniqueInput!]\n  update: [FamilyUpdateWithWhereUniqueWithoutToInput!]\n  upsert: [FamilyUpsertWithWhereUniqueWithoutToInput!]\n  deleteMany: [FamilyScalarWhereInput!]\n  updateMany: [FamilyUpdateManyWithWhereNestedInput!]\n}\n\ninput FamilyUpdateManyWithWhereNestedInput {\n  where: FamilyScalarWhereInput!\n  data: FamilyUpdateManyDataInput!\n}\n\ninput FamilyUpdateOneInput {\n  create: FamilyCreateInput\n  update: FamilyUpdateDataInput\n  upsert: FamilyUpsertNestedInput\n  delete: Boolean\n  disconnect: Boolean\n  connect: FamilyWhereUniqueInput\n}\n\ninput FamilyUpdateWithoutFromDataInput {\n  to: PersonUpdateOneRequiredWithoutFamiliesInput\n  relationship: String\n  spouse: FamilyUpdateOneInput\n  status: String\n}\n\ninput FamilyUpdateWithoutToDataInput {\n  from: UserUpdateOneRequiredWithoutFamiliesInput\n  relationship: String\n  spouse: FamilyUpdateOneInput\n  status: String\n}\n\ninput FamilyUpdateWithWhereUniqueNestedInput {\n  where: FamilyWhereUniqueInput!\n  data: FamilyUpdateDataInput!\n}\n\ninput FamilyUpdateWithWhereUniqueWithoutFromInput {\n  where: FamilyWhereUniqueInput!\n  data: FamilyUpdateWithoutFromDataInput!\n}\n\ninput FamilyUpdateWithWhereUniqueWithoutToInput {\n  where: FamilyWhereUniqueInput!\n  data: FamilyUpdateWithoutToDataInput!\n}\n\ninput FamilyUpsertNestedInput {\n  update: FamilyUpdateDataInput!\n  create: FamilyCreateInput!\n}\n\ninput FamilyUpsertWithWhereUniqueNestedInput {\n  where: FamilyWhereUniqueInput!\n  update: FamilyUpdateDataInput!\n  create: FamilyCreateInput!\n}\n\ninput FamilyUpsertWithWhereUniqueWithoutFromInput {\n  where: FamilyWhereUniqueInput!\n  update: FamilyUpdateWithoutFromDataInput!\n  create: FamilyCreateWithoutFromInput!\n}\n\ninput FamilyUpsertWithWhereUniqueWithoutToInput {\n  where: FamilyWhereUniqueInput!\n  update: FamilyUpdateWithoutToDataInput!\n  create: FamilyCreateWithoutToInput!\n}\n\ninput FamilyWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  from: UserWhereInput\n  to: PersonWhereInput\n  relationship: String\n  relationship_not: String\n  relationship_in: [String!]\n  relationship_not_in: [String!]\n  relationship_lt: String\n  relationship_lte: String\n  relationship_gt: String\n  relationship_gte: String\n  relationship_contains: String\n  relationship_not_contains: String\n  relationship_starts_with: String\n  relationship_not_starts_with: String\n  relationship_ends_with: String\n  relationship_not_ends_with: String\n  spouse: FamilyWhereInput\n  status: String\n  status_not: String\n  status_in: [String!]\n  status_not_in: [String!]\n  status_lt: String\n  status_lte: String\n  status_gt: String\n  status_gte: String\n  status_contains: String\n  status_not_contains: String\n  status_starts_with: String\n  status_not_starts_with: String\n  status_ends_with: String\n  status_not_ends_with: String\n  AND: [FamilyWhereInput!]\n  OR: [FamilyWhereInput!]\n  NOT: [FamilyWhereInput!]\n}\n\ninput FamilyWhereUniqueInput {\n  id: ID\n}\n\ntype FindPassWord {\n  id: ID!\n  times: Int\n  forgetter: User\n  remmember(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]\n}\n\ntype FindPassWordConnection {\n  pageInfo: PageInfo!\n  edges: [FindPassWordEdge]!\n  aggregate: AggregateFindPassWord!\n}\n\ninput FindPassWordCreateInput {\n  times: Int\n  forgetter: UserCreateOneWithoutForgetPasswordInput\n  remmember: UserCreateManyWithoutRemmemberPasswordInput\n}\n\ninput FindPassWordCreateOneWithoutForgetterInput {\n  create: FindPassWordCreateWithoutForgetterInput\n  connect: FindPassWordWhereUniqueInput\n}\n\ninput FindPassWordCreateOneWithoutRemmemberInput {\n  create: FindPassWordCreateWithoutRemmemberInput\n  connect: FindPassWordWhereUniqueInput\n}\n\ninput FindPassWordCreateWithoutForgetterInput {\n  times: Int\n  remmember: UserCreateManyWithoutRemmemberPasswordInput\n}\n\ninput FindPassWordCreateWithoutRemmemberInput {\n  times: Int\n  forgetter: UserCreateOneWithoutForgetPasswordInput\n}\n\ntype FindPassWordEdge {\n  node: FindPassWord!\n  cursor: String!\n}\n\nenum FindPassWordOrderByInput {\n  id_ASC\n  id_DESC\n  times_ASC\n  times_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype FindPassWordPreviousValues {\n  id: ID!\n  times: Int\n}\n\ntype FindPassWordSubscriptionPayload {\n  mutation: MutationType!\n  node: FindPassWord\n  updatedFields: [String!]\n  previousValues: FindPassWordPreviousValues\n}\n\ninput FindPassWordSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: FindPassWordWhereInput\n  AND: [FindPassWordSubscriptionWhereInput!]\n  OR: [FindPassWordSubscriptionWhereInput!]\n  NOT: [FindPassWordSubscriptionWhereInput!]\n}\n\ninput FindPassWordUpdateInput {\n  times: Int\n  forgetter: UserUpdateOneWithoutForgetPasswordInput\n  remmember: UserUpdateManyWithoutRemmemberPasswordInput\n}\n\ninput FindPassWordUpdateManyMutationInput {\n  times: Int\n}\n\ninput FindPassWordUpdateOneWithoutForgetterInput {\n  create: FindPassWordCreateWithoutForgetterInput\n  update: FindPassWordUpdateWithoutForgetterDataInput\n  upsert: FindPassWordUpsertWithoutForgetterInput\n  delete: Boolean\n  disconnect: Boolean\n  connect: FindPassWordWhereUniqueInput\n}\n\ninput FindPassWordUpdateOneWithoutRemmemberInput {\n  create: FindPassWordCreateWithoutRemmemberInput\n  update: FindPassWordUpdateWithoutRemmemberDataInput\n  upsert: FindPassWordUpsertWithoutRemmemberInput\n  delete: Boolean\n  disconnect: Boolean\n  connect: FindPassWordWhereUniqueInput\n}\n\ninput FindPassWordUpdateWithoutForgetterDataInput {\n  times: Int\n  remmember: UserUpdateManyWithoutRemmemberPasswordInput\n}\n\ninput FindPassWordUpdateWithoutRemmemberDataInput {\n  times: Int\n  forgetter: UserUpdateOneWithoutForgetPasswordInput\n}\n\ninput FindPassWordUpsertWithoutForgetterInput {\n  update: FindPassWordUpdateWithoutForgetterDataInput!\n  create: FindPassWordCreateWithoutForgetterInput!\n}\n\ninput FindPassWordUpsertWithoutRemmemberInput {\n  update: FindPassWordUpdateWithoutRemmemberDataInput!\n  create: FindPassWordCreateWithoutRemmemberInput!\n}\n\ninput FindPassWordWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  times: Int\n  times_not: Int\n  times_in: [Int!]\n  times_not_in: [Int!]\n  times_lt: Int\n  times_lte: Int\n  times_gt: Int\n  times_gte: Int\n  forgetter: UserWhereInput\n  remmember_every: UserWhereInput\n  remmember_some: UserWhereInput\n  remmember_none: UserWhereInput\n  AND: [FindPassWordWhereInput!]\n  OR: [FindPassWordWhereInput!]\n  NOT: [FindPassWordWhereInput!]\n}\n\ninput FindPassWordWhereUniqueInput {\n  id: ID\n}\n\ntype Group {\n  id: ID!\n  type: GroupKind\n  name: String\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]\n  messages(where: MessageWhereInput, orderBy: MessageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Message!]\n}\n\ntype GroupConnection {\n  pageInfo: PageInfo!\n  edges: [GroupEdge]!\n  aggregate: AggregateGroup!\n}\n\ninput GroupCreateInput {\n  type: GroupKind\n  name: String\n  users: UserCreateManyWithoutGroupsInput\n  messages: MessageCreateManyInput\n}\n\ninput GroupCreateManyWithoutUsersInput {\n  create: [GroupCreateWithoutUsersInput!]\n  connect: [GroupWhereUniqueInput!]\n}\n\ninput GroupCreateWithoutUsersInput {\n  type: GroupKind\n  name: String\n  messages: MessageCreateManyInput\n}\n\ntype GroupEdge {\n  node: Group!\n  cursor: String!\n}\n\nenum GroupKind {\n  Family\n  ClassMate\n  Colleague\n  FellowTownsman\n  SameCity\n  SameOccupation\n  SameDisease\n  RegStatus\n}\n\ntype GroupMessage {\n  id: ID!\n  type: GroupKind\n  to: String!\n  from: User!\n  text: String\n  image: Photo\n  createdAt: DateTime!\n}\n\ntype GroupMessageConnection {\n  pageInfo: PageInfo!\n  edges: [GroupMessageEdge]!\n  aggregate: AggregateGroupMessage!\n}\n\ninput GroupMessageCreateInput {\n  type: GroupKind\n  to: String!\n  from: UserCreateOneWithoutGroupMessagesInput!\n  text: String\n  image: PhotoCreateOneInput\n}\n\ninput GroupMessageCreateManyWithoutFromInput {\n  create: [GroupMessageCreateWithoutFromInput!]\n  connect: [GroupMessageWhereUniqueInput!]\n}\n\ninput GroupMessageCreateWithoutFromInput {\n  type: GroupKind\n  to: String!\n  text: String\n  image: PhotoCreateOneInput\n}\n\ntype GroupMessageEdge {\n  node: GroupMessage!\n  cursor: String!\n}\n\nenum GroupMessageOrderByInput {\n  id_ASC\n  id_DESC\n  type_ASC\n  type_DESC\n  to_ASC\n  to_DESC\n  text_ASC\n  text_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype GroupMessagePreviousValues {\n  id: ID!\n  type: GroupKind\n  to: String!\n  text: String\n  createdAt: DateTime!\n}\n\ninput GroupMessageScalarWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  type: GroupKind\n  type_not: GroupKind\n  type_in: [GroupKind!]\n  type_not_in: [GroupKind!]\n  to: String\n  to_not: String\n  to_in: [String!]\n  to_not_in: [String!]\n  to_lt: String\n  to_lte: String\n  to_gt: String\n  to_gte: String\n  to_contains: String\n  to_not_contains: String\n  to_starts_with: String\n  to_not_starts_with: String\n  to_ends_with: String\n  to_not_ends_with: String\n  text: String\n  text_not: String\n  text_in: [String!]\n  text_not_in: [String!]\n  text_lt: String\n  text_lte: String\n  text_gt: String\n  text_gte: String\n  text_contains: String\n  text_not_contains: String\n  text_starts_with: String\n  text_not_starts_with: String\n  text_ends_with: String\n  text_not_ends_with: String\n  createdAt: DateTime\n  createdAt_not: DateTime\n  createdAt_in: [DateTime!]\n  createdAt_not_in: [DateTime!]\n  createdAt_lt: DateTime\n  createdAt_lte: DateTime\n  createdAt_gt: DateTime\n  createdAt_gte: DateTime\n  AND: [GroupMessageScalarWhereInput!]\n  OR: [GroupMessageScalarWhereInput!]\n  NOT: [GroupMessageScalarWhereInput!]\n}\n\ntype GroupMessageSubscriptionPayload {\n  mutation: MutationType!\n  node: GroupMessage\n  updatedFields: [String!]\n  previousValues: GroupMessagePreviousValues\n}\n\ninput GroupMessageSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: GroupMessageWhereInput\n  AND: [GroupMessageSubscriptionWhereInput!]\n  OR: [GroupMessageSubscriptionWhereInput!]\n  NOT: [GroupMessageSubscriptionWhereInput!]\n}\n\ninput GroupMessageUpdateInput {\n  type: GroupKind\n  to: String\n  from: UserUpdateOneRequiredWithoutGroupMessagesInput\n  text: String\n  image: PhotoUpdateOneInput\n}\n\ninput GroupMessageUpdateManyDataInput {\n  type: GroupKind\n  to: String\n  text: String\n}\n\ninput GroupMessageUpdateManyMutationInput {\n  type: GroupKind\n  to: String\n  text: String\n}\n\ninput GroupMessageUpdateManyWithoutFromInput {\n  create: [GroupMessageCreateWithoutFromInput!]\n  delete: [GroupMessageWhereUniqueInput!]\n  connect: [GroupMessageWhereUniqueInput!]\n  disconnect: [GroupMessageWhereUniqueInput!]\n  update: [GroupMessageUpdateWithWhereUniqueWithoutFromInput!]\n  upsert: [GroupMessageUpsertWithWhereUniqueWithoutFromInput!]\n  deleteMany: [GroupMessageScalarWhereInput!]\n  updateMany: [GroupMessageUpdateManyWithWhereNestedInput!]\n}\n\ninput GroupMessageUpdateManyWithWhereNestedInput {\n  where: GroupMessageScalarWhereInput!\n  data: GroupMessageUpdateManyDataInput!\n}\n\ninput GroupMessageUpdateWithoutFromDataInput {\n  type: GroupKind\n  to: String\n  text: String\n  image: PhotoUpdateOneInput\n}\n\ninput GroupMessageUpdateWithWhereUniqueWithoutFromInput {\n  where: GroupMessageWhereUniqueInput!\n  data: GroupMessageUpdateWithoutFromDataInput!\n}\n\ninput GroupMessageUpsertWithWhereUniqueWithoutFromInput {\n  where: GroupMessageWhereUniqueInput!\n  update: GroupMessageUpdateWithoutFromDataInput!\n  create: GroupMessageCreateWithoutFromInput!\n}\n\ninput GroupMessageWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  type: GroupKind\n  type_not: GroupKind\n  type_in: [GroupKind!]\n  type_not_in: [GroupKind!]\n  to: String\n  to_not: String\n  to_in: [String!]\n  to_not_in: [String!]\n  to_lt: String\n  to_lte: String\n  to_gt: String\n  to_gte: String\n  to_contains: String\n  to_not_contains: String\n  to_starts_with: String\n  to_not_starts_with: String\n  to_ends_with: String\n  to_not_ends_with: String\n  from: UserWhereInput\n  text: String\n  text_not: String\n  text_in: [String!]\n  text_not_in: [String!]\n  text_lt: String\n  text_lte: String\n  text_gt: String\n  text_gte: String\n  text_contains: String\n  text_not_contains: String\n  text_starts_with: String\n  text_not_starts_with: String\n  text_ends_with: String\n  text_not_ends_with: String\n  image: PhotoWhereInput\n  createdAt: DateTime\n  createdAt_not: DateTime\n  createdAt_in: [DateTime!]\n  createdAt_not_in: [DateTime!]\n  createdAt_lt: DateTime\n  createdAt_lte: DateTime\n  createdAt_gt: DateTime\n  createdAt_gte: DateTime\n  AND: [GroupMessageWhereInput!]\n  OR: [GroupMessageWhereInput!]\n  NOT: [GroupMessageWhereInput!]\n}\n\ninput GroupMessageWhereUniqueInput {\n  id: ID\n}\n\nenum GroupOrderByInput {\n  id_ASC\n  id_DESC\n  type_ASC\n  type_DESC\n  name_ASC\n  name_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype GroupPreviousValues {\n  id: ID!\n  type: GroupKind\n  name: String\n}\n\ninput GroupScalarWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  type: GroupKind\n  type_not: GroupKind\n  type_in: [GroupKind!]\n  type_not_in: [GroupKind!]\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  AND: [GroupScalarWhereInput!]\n  OR: [GroupScalarWhereInput!]\n  NOT: [GroupScalarWhereInput!]\n}\n\ntype GroupSubscriptionPayload {\n  mutation: MutationType!\n  node: Group\n  updatedFields: [String!]\n  previousValues: GroupPreviousValues\n}\n\ninput GroupSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: GroupWhereInput\n  AND: [GroupSubscriptionWhereInput!]\n  OR: [GroupSubscriptionWhereInput!]\n  NOT: [GroupSubscriptionWhereInput!]\n}\n\ninput GroupUpdateInput {\n  type: GroupKind\n  name: String\n  users: UserUpdateManyWithoutGroupsInput\n  messages: MessageUpdateManyInput\n}\n\ninput GroupUpdateManyDataInput {\n  type: GroupKind\n  name: String\n}\n\ninput GroupUpdateManyMutationInput {\n  type: GroupKind\n  name: String\n}\n\ninput GroupUpdateManyWithoutUsersInput {\n  create: [GroupCreateWithoutUsersInput!]\n  delete: [GroupWhereUniqueInput!]\n  connect: [GroupWhereUniqueInput!]\n  disconnect: [GroupWhereUniqueInput!]\n  update: [GroupUpdateWithWhereUniqueWithoutUsersInput!]\n  upsert: [GroupUpsertWithWhereUniqueWithoutUsersInput!]\n  deleteMany: [GroupScalarWhereInput!]\n  updateMany: [GroupUpdateManyWithWhereNestedInput!]\n}\n\ninput GroupUpdateManyWithWhereNestedInput {\n  where: GroupScalarWhereInput!\n  data: GroupUpdateManyDataInput!\n}\n\ninput GroupUpdateWithoutUsersDataInput {\n  type: GroupKind\n  name: String\n  messages: MessageUpdateManyInput\n}\n\ninput GroupUpdateWithWhereUniqueWithoutUsersInput {\n  where: GroupWhereUniqueInput!\n  data: GroupUpdateWithoutUsersDataInput!\n}\n\ninput GroupUpsertWithWhereUniqueWithoutUsersInput {\n  where: GroupWhereUniqueInput!\n  update: GroupUpdateWithoutUsersDataInput!\n  create: GroupCreateWithoutUsersInput!\n}\n\ninput GroupWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  type: GroupKind\n  type_not: GroupKind\n  type_in: [GroupKind!]\n  type_not_in: [GroupKind!]\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  users_every: UserWhereInput\n  users_some: UserWhereInput\n  users_none: UserWhereInput\n  messages_every: MessageWhereInput\n  messages_some: MessageWhereInput\n  messages_none: MessageWhereInput\n  AND: [GroupWhereInput!]\n  OR: [GroupWhereInput!]\n  NOT: [GroupWhereInput!]\n}\n\ninput GroupWhereUniqueInput {\n  id: ID\n}\n\ntype Location {\n  id: ID!\n  name: String\n  province: Province\n  city: City\n  area: Area\n  street: Street\n  village: Village\n  schools(where: SchoolWhereInput, orderBy: SchoolOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [School!]\n  companies(where: CompanyWhereInput, orderBy: CompanyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Company!]\n  universities(where: UniversityWhereInput, orderBy: UniversityOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [University!]\n  borns(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]\n  lives(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]\n}\n\ntype LocationConnection {\n  pageInfo: PageInfo!\n  edges: [LocationEdge]!\n  aggregate: AggregateLocation!\n}\n\ninput LocationCreateInput {\n  name: String\n  province: ProvinceCreateOneInput\n  city: CityCreateOneInput\n  area: AreaCreateOneInput\n  street: StreetCreateOneInput\n  village: VillageCreateOneInput\n  schools: SchoolCreateManyWithoutLocationInput\n  companies: CompanyCreateManyWithoutLocationInput\n  universities: UniversityCreateManyInput\n  borns: UserCreateManyWithoutBirthplaceInput\n  lives: UserCreateManyWithoutResidenceInput\n}\n\ninput LocationCreateOneWithoutBornsInput {\n  create: LocationCreateWithoutBornsInput\n  connect: LocationWhereUniqueInput\n}\n\ninput LocationCreateOneWithoutCompaniesInput {\n  create: LocationCreateWithoutCompaniesInput\n  connect: LocationWhereUniqueInput\n}\n\ninput LocationCreateOneWithoutLivesInput {\n  create: LocationCreateWithoutLivesInput\n  connect: LocationWhereUniqueInput\n}\n\ninput LocationCreateOneWithoutSchoolsInput {\n  create: LocationCreateWithoutSchoolsInput\n  connect: LocationWhereUniqueInput\n}\n\ninput LocationCreateWithoutBornsInput {\n  name: String\n  province: ProvinceCreateOneInput\n  city: CityCreateOneInput\n  area: AreaCreateOneInput\n  street: StreetCreateOneInput\n  village: VillageCreateOneInput\n  schools: SchoolCreateManyWithoutLocationInput\n  companies: CompanyCreateManyWithoutLocationInput\n  universities: UniversityCreateManyInput\n  lives: UserCreateManyWithoutResidenceInput\n}\n\ninput LocationCreateWithoutCompaniesInput {\n  name: String\n  province: ProvinceCreateOneInput\n  city: CityCreateOneInput\n  area: AreaCreateOneInput\n  street: StreetCreateOneInput\n  village: VillageCreateOneInput\n  schools: SchoolCreateManyWithoutLocationInput\n  universities: UniversityCreateManyInput\n  borns: UserCreateManyWithoutBirthplaceInput\n  lives: UserCreateManyWithoutResidenceInput\n}\n\ninput LocationCreateWithoutLivesInput {\n  name: String\n  province: ProvinceCreateOneInput\n  city: CityCreateOneInput\n  area: AreaCreateOneInput\n  street: StreetCreateOneInput\n  village: VillageCreateOneInput\n  schools: SchoolCreateManyWithoutLocationInput\n  companies: CompanyCreateManyWithoutLocationInput\n  universities: UniversityCreateManyInput\n  borns: UserCreateManyWithoutBirthplaceInput\n}\n\ninput LocationCreateWithoutSchoolsInput {\n  name: String\n  province: ProvinceCreateOneInput\n  city: CityCreateOneInput\n  area: AreaCreateOneInput\n  street: StreetCreateOneInput\n  village: VillageCreateOneInput\n  companies: CompanyCreateManyWithoutLocationInput\n  universities: UniversityCreateManyInput\n  borns: UserCreateManyWithoutBirthplaceInput\n  lives: UserCreateManyWithoutResidenceInput\n}\n\ntype LocationEdge {\n  node: Location!\n  cursor: String!\n}\n\ntype LocationGroup {\n  id: ID!\n  kind: LocationGroupKind\n  code: String\n  name: String\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]\n}\n\ntype LocationGroupConnection {\n  pageInfo: PageInfo!\n  edges: [LocationGroupEdge]!\n  aggregate: AggregateLocationGroup!\n}\n\ninput LocationGroupCreateInput {\n  kind: LocationGroupKind\n  code: String\n  name: String\n  users: UserCreateManyWithoutLocationGroupsInput\n}\n\ninput LocationGroupCreateManyWithoutUsersInput {\n  create: [LocationGroupCreateWithoutUsersInput!]\n  connect: [LocationGroupWhereUniqueInput!]\n}\n\ninput LocationGroupCreateWithoutUsersInput {\n  kind: LocationGroupKind\n  code: String\n  name: String\n}\n\ntype LocationGroupEdge {\n  node: LocationGroup!\n  cursor: String!\n}\n\nenum LocationGroupKind {\n  HomeVillage\n  ResidenceVillage\n  VillageInResidenceVillage\n  StreetInResidenceVillage\n  AreaInResidenceVillage\n  CityInResidenceVillage\n  ProvinceInResidenceVillage\n  VillageInResidenceStreet\n  StreetInResidenceStreet\n  AreaInResidenceStreet\n  CityInResidenceStreet\n  ProvinceInResidenceStreet\n  VillageInResidenceArea\n  StreetInResidenceArea\n  AreaInResidenceArea\n  CityInResidenceArea\n  ProvinceInResidenceArea\n  VillageInResidenceCity\n  StreetInResidenceCity\n  AreaInResidenceCity\n  CityInResidenceCity\n  ProvinceInResidenceCity\n}\n\nenum LocationGroupOrderByInput {\n  id_ASC\n  id_DESC\n  kind_ASC\n  kind_DESC\n  code_ASC\n  code_DESC\n  name_ASC\n  name_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype LocationGroupPreviousValues {\n  id: ID!\n  kind: LocationGroupKind\n  code: String\n  name: String\n}\n\ninput LocationGroupScalarWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  kind: LocationGroupKind\n  kind_not: LocationGroupKind\n  kind_in: [LocationGroupKind!]\n  kind_not_in: [LocationGroupKind!]\n  code: String\n  code_not: String\n  code_in: [String!]\n  code_not_in: [String!]\n  code_lt: String\n  code_lte: String\n  code_gt: String\n  code_gte: String\n  code_contains: String\n  code_not_contains: String\n  code_starts_with: String\n  code_not_starts_with: String\n  code_ends_with: String\n  code_not_ends_with: String\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  AND: [LocationGroupScalarWhereInput!]\n  OR: [LocationGroupScalarWhereInput!]\n  NOT: [LocationGroupScalarWhereInput!]\n}\n\ntype LocationGroupSubscriptionPayload {\n  mutation: MutationType!\n  node: LocationGroup\n  updatedFields: [String!]\n  previousValues: LocationGroupPreviousValues\n}\n\ninput LocationGroupSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: LocationGroupWhereInput\n  AND: [LocationGroupSubscriptionWhereInput!]\n  OR: [LocationGroupSubscriptionWhereInput!]\n  NOT: [LocationGroupSubscriptionWhereInput!]\n}\n\ninput LocationGroupUpdateInput {\n  kind: LocationGroupKind\n  code: String\n  name: String\n  users: UserUpdateManyWithoutLocationGroupsInput\n}\n\ninput LocationGroupUpdateManyDataInput {\n  kind: LocationGroupKind\n  code: String\n  name: String\n}\n\ninput LocationGroupUpdateManyMutationInput {\n  kind: LocationGroupKind\n  code: String\n  name: String\n}\n\ninput LocationGroupUpdateManyWithoutUsersInput {\n  create: [LocationGroupCreateWithoutUsersInput!]\n  delete: [LocationGroupWhereUniqueInput!]\n  connect: [LocationGroupWhereUniqueInput!]\n  disconnect: [LocationGroupWhereUniqueInput!]\n  update: [LocationGroupUpdateWithWhereUniqueWithoutUsersInput!]\n  upsert: [LocationGroupUpsertWithWhereUniqueWithoutUsersInput!]\n  deleteMany: [LocationGroupScalarWhereInput!]\n  updateMany: [LocationGroupUpdateManyWithWhereNestedInput!]\n}\n\ninput LocationGroupUpdateManyWithWhereNestedInput {\n  where: LocationGroupScalarWhereInput!\n  data: LocationGroupUpdateManyDataInput!\n}\n\ninput LocationGroupUpdateWithoutUsersDataInput {\n  kind: LocationGroupKind\n  code: String\n  name: String\n}\n\ninput LocationGroupUpdateWithWhereUniqueWithoutUsersInput {\n  where: LocationGroupWhereUniqueInput!\n  data: LocationGroupUpdateWithoutUsersDataInput!\n}\n\ninput LocationGroupUpsertWithWhereUniqueWithoutUsersInput {\n  where: LocationGroupWhereUniqueInput!\n  update: LocationGroupUpdateWithoutUsersDataInput!\n  create: LocationGroupCreateWithoutUsersInput!\n}\n\ninput LocationGroupWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  kind: LocationGroupKind\n  kind_not: LocationGroupKind\n  kind_in: [LocationGroupKind!]\n  kind_not_in: [LocationGroupKind!]\n  code: String\n  code_not: String\n  code_in: [String!]\n  code_not_in: [String!]\n  code_lt: String\n  code_lte: String\n  code_gt: String\n  code_gte: String\n  code_contains: String\n  code_not_contains: String\n  code_starts_with: String\n  code_not_starts_with: String\n  code_ends_with: String\n  code_not_ends_with: String\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  users_every: UserWhereInput\n  users_some: UserWhereInput\n  users_none: UserWhereInput\n  AND: [LocationGroupWhereInput!]\n  OR: [LocationGroupWhereInput!]\n  NOT: [LocationGroupWhereInput!]\n}\n\ninput LocationGroupWhereUniqueInput {\n  id: ID\n  code: String\n}\n\nenum LocationOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype LocationPreviousValues {\n  id: ID!\n  name: String\n}\n\ntype LocationSubscriptionPayload {\n  mutation: MutationType!\n  node: Location\n  updatedFields: [String!]\n  previousValues: LocationPreviousValues\n}\n\ninput LocationSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: LocationWhereInput\n  AND: [LocationSubscriptionWhereInput!]\n  OR: [LocationSubscriptionWhereInput!]\n  NOT: [LocationSubscriptionWhereInput!]\n}\n\ninput LocationUpdateInput {\n  name: String\n  province: ProvinceUpdateOneInput\n  city: CityUpdateOneInput\n  area: AreaUpdateOneInput\n  street: StreetUpdateOneInput\n  village: VillageUpdateOneInput\n  schools: SchoolUpdateManyWithoutLocationInput\n  companies: CompanyUpdateManyWithoutLocationInput\n  universities: UniversityUpdateManyInput\n  borns: UserUpdateManyWithoutBirthplaceInput\n  lives: UserUpdateManyWithoutResidenceInput\n}\n\ninput LocationUpdateManyMutationInput {\n  name: String\n}\n\ninput LocationUpdateOneWithoutBornsInput {\n  create: LocationCreateWithoutBornsInput\n  update: LocationUpdateWithoutBornsDataInput\n  upsert: LocationUpsertWithoutBornsInput\n  delete: Boolean\n  disconnect: Boolean\n  connect: LocationWhereUniqueInput\n}\n\ninput LocationUpdateOneWithoutCompaniesInput {\n  create: LocationCreateWithoutCompaniesInput\n  update: LocationUpdateWithoutCompaniesDataInput\n  upsert: LocationUpsertWithoutCompaniesInput\n  delete: Boolean\n  disconnect: Boolean\n  connect: LocationWhereUniqueInput\n}\n\ninput LocationUpdateOneWithoutLivesInput {\n  create: LocationCreateWithoutLivesInput\n  update: LocationUpdateWithoutLivesDataInput\n  upsert: LocationUpsertWithoutLivesInput\n  delete: Boolean\n  disconnect: Boolean\n  connect: LocationWhereUniqueInput\n}\n\ninput LocationUpdateOneWithoutSchoolsInput {\n  create: LocationCreateWithoutSchoolsInput\n  update: LocationUpdateWithoutSchoolsDataInput\n  upsert: LocationUpsertWithoutSchoolsInput\n  delete: Boolean\n  disconnect: Boolean\n  connect: LocationWhereUniqueInput\n}\n\ninput LocationUpdateWithoutBornsDataInput {\n  name: String\n  province: ProvinceUpdateOneInput\n  city: CityUpdateOneInput\n  area: AreaUpdateOneInput\n  street: StreetUpdateOneInput\n  village: VillageUpdateOneInput\n  schools: SchoolUpdateManyWithoutLocationInput\n  companies: CompanyUpdateManyWithoutLocationInput\n  universities: UniversityUpdateManyInput\n  lives: UserUpdateManyWithoutResidenceInput\n}\n\ninput LocationUpdateWithoutCompaniesDataInput {\n  name: String\n  province: ProvinceUpdateOneInput\n  city: CityUpdateOneInput\n  area: AreaUpdateOneInput\n  street: StreetUpdateOneInput\n  village: VillageUpdateOneInput\n  schools: SchoolUpdateManyWithoutLocationInput\n  universities: UniversityUpdateManyInput\n  borns: UserUpdateManyWithoutBirthplaceInput\n  lives: UserUpdateManyWithoutResidenceInput\n}\n\ninput LocationUpdateWithoutLivesDataInput {\n  name: String\n  province: ProvinceUpdateOneInput\n  city: CityUpdateOneInput\n  area: AreaUpdateOneInput\n  street: StreetUpdateOneInput\n  village: VillageUpdateOneInput\n  schools: SchoolUpdateManyWithoutLocationInput\n  companies: CompanyUpdateManyWithoutLocationInput\n  universities: UniversityUpdateManyInput\n  borns: UserUpdateManyWithoutBirthplaceInput\n}\n\ninput LocationUpdateWithoutSchoolsDataInput {\n  name: String\n  province: ProvinceUpdateOneInput\n  city: CityUpdateOneInput\n  area: AreaUpdateOneInput\n  street: StreetUpdateOneInput\n  village: VillageUpdateOneInput\n  companies: CompanyUpdateManyWithoutLocationInput\n  universities: UniversityUpdateManyInput\n  borns: UserUpdateManyWithoutBirthplaceInput\n  lives: UserUpdateManyWithoutResidenceInput\n}\n\ninput LocationUpsertWithoutBornsInput {\n  update: LocationUpdateWithoutBornsDataInput!\n  create: LocationCreateWithoutBornsInput!\n}\n\ninput LocationUpsertWithoutCompaniesInput {\n  update: LocationUpdateWithoutCompaniesDataInput!\n  create: LocationCreateWithoutCompaniesInput!\n}\n\ninput LocationUpsertWithoutLivesInput {\n  update: LocationUpdateWithoutLivesDataInput!\n  create: LocationCreateWithoutLivesInput!\n}\n\ninput LocationUpsertWithoutSchoolsInput {\n  update: LocationUpdateWithoutSchoolsDataInput!\n  create: LocationCreateWithoutSchoolsInput!\n}\n\ninput LocationWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  province: ProvinceWhereInput\n  city: CityWhereInput\n  area: AreaWhereInput\n  street: StreetWhereInput\n  village: VillageWhereInput\n  schools_every: SchoolWhereInput\n  schools_some: SchoolWhereInput\n  schools_none: SchoolWhereInput\n  companies_every: CompanyWhereInput\n  companies_some: CompanyWhereInput\n  companies_none: CompanyWhereInput\n  universities_every: UniversityWhereInput\n  universities_some: UniversityWhereInput\n  universities_none: UniversityWhereInput\n  borns_every: UserWhereInput\n  borns_some: UserWhereInput\n  borns_none: UserWhereInput\n  lives_every: UserWhereInput\n  lives_some: UserWhereInput\n  lives_none: UserWhereInput\n  AND: [LocationWhereInput!]\n  OR: [LocationWhereInput!]\n  NOT: [LocationWhereInput!]\n}\n\ninput LocationWhereUniqueInput {\n  id: ID\n  name: String\n}\n\ntype Logs {\n  user: User\n  createFamilyGroupTime: DateTime\n}\n\ntype LogsConnection {\n  pageInfo: PageInfo!\n  edges: [LogsEdge]!\n  aggregate: AggregateLogs!\n}\n\ninput LogsCreateInput {\n  user: UserCreateOneInput\n  createFamilyGroupTime: DateTime\n}\n\ntype LogsEdge {\n  node: Logs!\n  cursor: String!\n}\n\nenum LogsOrderByInput {\n  createFamilyGroupTime_ASC\n  createFamilyGroupTime_DESC\n  id_ASC\n  id_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype LogsPreviousValues {\n  createFamilyGroupTime: DateTime\n}\n\ntype LogsSubscriptionPayload {\n  mutation: MutationType!\n  node: Logs\n  updatedFields: [String!]\n  previousValues: LogsPreviousValues\n}\n\ninput LogsSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: LogsWhereInput\n  AND: [LogsSubscriptionWhereInput!]\n  OR: [LogsSubscriptionWhereInput!]\n  NOT: [LogsSubscriptionWhereInput!]\n}\n\ninput LogsUpdateManyMutationInput {\n  createFamilyGroupTime: DateTime\n}\n\ninput LogsWhereInput {\n  user: UserWhereInput\n  createFamilyGroupTime: DateTime\n  createFamilyGroupTime_not: DateTime\n  createFamilyGroupTime_in: [DateTime!]\n  createFamilyGroupTime_not_in: [DateTime!]\n  createFamilyGroupTime_lt: DateTime\n  createFamilyGroupTime_lte: DateTime\n  createFamilyGroupTime_gt: DateTime\n  createFamilyGroupTime_gte: DateTime\n  AND: [LogsWhereInput!]\n  OR: [LogsWhereInput!]\n  NOT: [LogsWhereInput!]\n}\n\nscalar Long\n\ntype Major {\n  id: ID!\n  name: String!\n  category: String!\n  education: Educationkind!\n}\n\ntype MajorConnection {\n  pageInfo: PageInfo!\n  edges: [MajorEdge]!\n  aggregate: AggregateMajor!\n}\n\ninput MajorCreateInput {\n  name: String!\n  category: String!\n  education: Educationkind!\n}\n\ninput MajorCreateOneInput {\n  create: MajorCreateInput\n  connect: MajorWhereUniqueInput\n}\n\ntype MajorEdge {\n  node: Major!\n  cursor: String!\n}\n\nenum MajorOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  category_ASC\n  category_DESC\n  education_ASC\n  education_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype MajorPreviousValues {\n  id: ID!\n  name: String!\n  category: String!\n  education: Educationkind!\n}\n\ntype MajorSubscriptionPayload {\n  mutation: MutationType!\n  node: Major\n  updatedFields: [String!]\n  previousValues: MajorPreviousValues\n}\n\ninput MajorSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: MajorWhereInput\n  AND: [MajorSubscriptionWhereInput!]\n  OR: [MajorSubscriptionWhereInput!]\n  NOT: [MajorSubscriptionWhereInput!]\n}\n\ninput MajorUpdateDataInput {\n  name: String\n  category: String\n  education: Educationkind\n}\n\ninput MajorUpdateInput {\n  name: String\n  category: String\n  education: Educationkind\n}\n\ninput MajorUpdateManyMutationInput {\n  name: String\n  category: String\n  education: Educationkind\n}\n\ninput MajorUpdateOneInput {\n  create: MajorCreateInput\n  update: MajorUpdateDataInput\n  upsert: MajorUpsertNestedInput\n  delete: Boolean\n  disconnect: Boolean\n  connect: MajorWhereUniqueInput\n}\n\ninput MajorUpdateOneRequiredInput {\n  create: MajorCreateInput\n  update: MajorUpdateDataInput\n  upsert: MajorUpsertNestedInput\n  connect: MajorWhereUniqueInput\n}\n\ninput MajorUpsertNestedInput {\n  update: MajorUpdateDataInput!\n  create: MajorCreateInput!\n}\n\ninput MajorWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  category: String\n  category_not: String\n  category_in: [String!]\n  category_not_in: [String!]\n  category_lt: String\n  category_lte: String\n  category_gt: String\n  category_gte: String\n  category_contains: String\n  category_not_contains: String\n  category_starts_with: String\n  category_not_starts_with: String\n  category_ends_with: String\n  category_not_ends_with: String\n  education: Educationkind\n  education_not: Educationkind\n  education_in: [Educationkind!]\n  education_not_in: [Educationkind!]\n  AND: [MajorWhereInput!]\n  OR: [MajorWhereInput!]\n  NOT: [MajorWhereInput!]\n}\n\ninput MajorWhereUniqueInput {\n  id: ID\n}\n\ntype Message {\n  id: ID!\n  to: User!\n  from: User!\n  text: String\n  image: Photo\n  createdAt: DateTime!\n}\n\ntype MessageConnection {\n  pageInfo: PageInfo!\n  edges: [MessageEdge]!\n  aggregate: AggregateMessage!\n}\n\ninput MessageCreateInput {\n  to: UserCreateOneWithoutReceiveMessagesInput!\n  from: UserCreateOneWithoutSentMessagesInput!\n  text: String\n  image: PhotoCreateOneInput\n}\n\ninput MessageCreateManyInput {\n  create: [MessageCreateInput!]\n  connect: [MessageWhereUniqueInput!]\n}\n\ninput MessageCreateManyWithoutFromInput {\n  create: [MessageCreateWithoutFromInput!]\n  connect: [MessageWhereUniqueInput!]\n}\n\ninput MessageCreateManyWithoutToInput {\n  create: [MessageCreateWithoutToInput!]\n  connect: [MessageWhereUniqueInput!]\n}\n\ninput MessageCreateWithoutFromInput {\n  to: UserCreateOneWithoutReceiveMessagesInput!\n  text: String\n  image: PhotoCreateOneInput\n}\n\ninput MessageCreateWithoutToInput {\n  from: UserCreateOneWithoutSentMessagesInput!\n  text: String\n  image: PhotoCreateOneInput\n}\n\ntype MessageEdge {\n  node: Message!\n  cursor: String!\n}\n\nenum MessageOrderByInput {\n  id_ASC\n  id_DESC\n  text_ASC\n  text_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype MessagePreviousValues {\n  id: ID!\n  text: String\n  createdAt: DateTime!\n}\n\ninput MessageScalarWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  text: String\n  text_not: String\n  text_in: [String!]\n  text_not_in: [String!]\n  text_lt: String\n  text_lte: String\n  text_gt: String\n  text_gte: String\n  text_contains: String\n  text_not_contains: String\n  text_starts_with: String\n  text_not_starts_with: String\n  text_ends_with: String\n  text_not_ends_with: String\n  createdAt: DateTime\n  createdAt_not: DateTime\n  createdAt_in: [DateTime!]\n  createdAt_not_in: [DateTime!]\n  createdAt_lt: DateTime\n  createdAt_lte: DateTime\n  createdAt_gt: DateTime\n  createdAt_gte: DateTime\n  AND: [MessageScalarWhereInput!]\n  OR: [MessageScalarWhereInput!]\n  NOT: [MessageScalarWhereInput!]\n}\n\ntype MessageSubscriptionPayload {\n  mutation: MutationType!\n  node: Message\n  updatedFields: [String!]\n  previousValues: MessagePreviousValues\n}\n\ninput MessageSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: MessageWhereInput\n  AND: [MessageSubscriptionWhereInput!]\n  OR: [MessageSubscriptionWhereInput!]\n  NOT: [MessageSubscriptionWhereInput!]\n}\n\ninput MessageUpdateDataInput {\n  to: UserUpdateOneRequiredWithoutReceiveMessagesInput\n  from: UserUpdateOneRequiredWithoutSentMessagesInput\n  text: String\n  image: PhotoUpdateOneInput\n}\n\ninput MessageUpdateInput {\n  to: UserUpdateOneRequiredWithoutReceiveMessagesInput\n  from: UserUpdateOneRequiredWithoutSentMessagesInput\n  text: String\n  image: PhotoUpdateOneInput\n}\n\ninput MessageUpdateManyDataInput {\n  text: String\n}\n\ninput MessageUpdateManyInput {\n  create: [MessageCreateInput!]\n  update: [MessageUpdateWithWhereUniqueNestedInput!]\n  upsert: [MessageUpsertWithWhereUniqueNestedInput!]\n  delete: [MessageWhereUniqueInput!]\n  connect: [MessageWhereUniqueInput!]\n  disconnect: [MessageWhereUniqueInput!]\n  deleteMany: [MessageScalarWhereInput!]\n  updateMany: [MessageUpdateManyWithWhereNestedInput!]\n}\n\ninput MessageUpdateManyMutationInput {\n  text: String\n}\n\ninput MessageUpdateManyWithoutFromInput {\n  create: [MessageCreateWithoutFromInput!]\n  delete: [MessageWhereUniqueInput!]\n  connect: [MessageWhereUniqueInput!]\n  disconnect: [MessageWhereUniqueInput!]\n  update: [MessageUpdateWithWhereUniqueWithoutFromInput!]\n  upsert: [MessageUpsertWithWhereUniqueWithoutFromInput!]\n  deleteMany: [MessageScalarWhereInput!]\n  updateMany: [MessageUpdateManyWithWhereNestedInput!]\n}\n\ninput MessageUpdateManyWithoutToInput {\n  create: [MessageCreateWithoutToInput!]\n  delete: [MessageWhereUniqueInput!]\n  connect: [MessageWhereUniqueInput!]\n  disconnect: [MessageWhereUniqueInput!]\n  update: [MessageUpdateWithWhereUniqueWithoutToInput!]\n  upsert: [MessageUpsertWithWhereUniqueWithoutToInput!]\n  deleteMany: [MessageScalarWhereInput!]\n  updateMany: [MessageUpdateManyWithWhereNestedInput!]\n}\n\ninput MessageUpdateManyWithWhereNestedInput {\n  where: MessageScalarWhereInput!\n  data: MessageUpdateManyDataInput!\n}\n\ninput MessageUpdateWithoutFromDataInput {\n  to: UserUpdateOneRequiredWithoutReceiveMessagesInput\n  text: String\n  image: PhotoUpdateOneInput\n}\n\ninput MessageUpdateWithoutToDataInput {\n  from: UserUpdateOneRequiredWithoutSentMessagesInput\n  text: String\n  image: PhotoUpdateOneInput\n}\n\ninput MessageUpdateWithWhereUniqueNestedInput {\n  where: MessageWhereUniqueInput!\n  data: MessageUpdateDataInput!\n}\n\ninput MessageUpdateWithWhereUniqueWithoutFromInput {\n  where: MessageWhereUniqueInput!\n  data: MessageUpdateWithoutFromDataInput!\n}\n\ninput MessageUpdateWithWhereUniqueWithoutToInput {\n  where: MessageWhereUniqueInput!\n  data: MessageUpdateWithoutToDataInput!\n}\n\ninput MessageUpsertWithWhereUniqueNestedInput {\n  where: MessageWhereUniqueInput!\n  update: MessageUpdateDataInput!\n  create: MessageCreateInput!\n}\n\ninput MessageUpsertWithWhereUniqueWithoutFromInput {\n  where: MessageWhereUniqueInput!\n  update: MessageUpdateWithoutFromDataInput!\n  create: MessageCreateWithoutFromInput!\n}\n\ninput MessageUpsertWithWhereUniqueWithoutToInput {\n  where: MessageWhereUniqueInput!\n  update: MessageUpdateWithoutToDataInput!\n  create: MessageCreateWithoutToInput!\n}\n\ninput MessageWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  to: UserWhereInput\n  from: UserWhereInput\n  text: String\n  text_not: String\n  text_in: [String!]\n  text_not_in: [String!]\n  text_lt: String\n  text_lte: String\n  text_gt: String\n  text_gte: String\n  text_contains: String\n  text_not_contains: String\n  text_starts_with: String\n  text_not_starts_with: String\n  text_ends_with: String\n  text_not_ends_with: String\n  image: PhotoWhereInput\n  createdAt: DateTime\n  createdAt_not: DateTime\n  createdAt_in: [DateTime!]\n  createdAt_not_in: [DateTime!]\n  createdAt_lt: DateTime\n  createdAt_lte: DateTime\n  createdAt_gt: DateTime\n  createdAt_gte: DateTime\n  AND: [MessageWhereInput!]\n  OR: [MessageWhereInput!]\n  NOT: [MessageWhereInput!]\n}\n\ninput MessageWhereUniqueInput {\n  id: ID\n}\n\ntype Mutation {\n  createAdvertisement(data: AdvertisementCreateInput!): Advertisement!\n  updateAdvertisement(data: AdvertisementUpdateInput!, where: AdvertisementWhereUniqueInput!): Advertisement\n  updateManyAdvertisements(data: AdvertisementUpdateManyMutationInput!, where: AdvertisementWhereInput): BatchPayload!\n  upsertAdvertisement(where: AdvertisementWhereUniqueInput!, create: AdvertisementCreateInput!, update: AdvertisementUpdateInput!): Advertisement!\n  deleteAdvertisement(where: AdvertisementWhereUniqueInput!): Advertisement\n  deleteManyAdvertisements(where: AdvertisementWhereInput): BatchPayload!\n  createArea(data: AreaCreateInput!): Area!\n  updateArea(data: AreaUpdateInput!, where: AreaWhereUniqueInput!): Area\n  updateManyAreas(data: AreaUpdateManyMutationInput!, where: AreaWhereInput): BatchPayload!\n  upsertArea(where: AreaWhereUniqueInput!, create: AreaCreateInput!, update: AreaUpdateInput!): Area!\n  deleteArea(where: AreaWhereUniqueInput!): Area\n  deleteManyAreas(where: AreaWhereInput): BatchPayload!\n  createBootCount(data: BootCountCreateInput!): BootCount!\n  updateBootCount(data: BootCountUpdateInput!, where: BootCountWhereUniqueInput!): BootCount\n  upsertBootCount(where: BootCountWhereUniqueInput!, create: BootCountCreateInput!, update: BootCountUpdateInput!): BootCount!\n  deleteBootCount(where: BootCountWhereUniqueInput!): BootCount\n  deleteManyBootCounts(where: BootCountWhereInput): BatchPayload!\n  createCity(data: CityCreateInput!): City!\n  updateCity(data: CityUpdateInput!, where: CityWhereUniqueInput!): City\n  updateManyCities(data: CityUpdateManyMutationInput!, where: CityWhereInput): BatchPayload!\n  upsertCity(where: CityWhereUniqueInput!, create: CityCreateInput!, update: CityUpdateInput!): City!\n  deleteCity(where: CityWhereUniqueInput!): City\n  deleteManyCities(where: CityWhereInput): BatchPayload!\n  createClassGroup(data: ClassGroupCreateInput!): ClassGroup!\n  updateClassGroup(data: ClassGroupUpdateInput!, where: ClassGroupWhereUniqueInput!): ClassGroup\n  updateManyClassGroups(data: ClassGroupUpdateManyMutationInput!, where: ClassGroupWhereInput): BatchPayload!\n  upsertClassGroup(where: ClassGroupWhereUniqueInput!, create: ClassGroupCreateInput!, update: ClassGroupUpdateInput!): ClassGroup!\n  deleteClassGroup(where: ClassGroupWhereUniqueInput!): ClassGroup\n  deleteManyClassGroups(where: ClassGroupWhereInput): BatchPayload!\n  createClassMate(data: ClassMateCreateInput!): ClassMate!\n  updateClassMate(data: ClassMateUpdateInput!, where: ClassMateWhereUniqueInput!): ClassMate\n  updateManyClassMates(data: ClassMateUpdateManyMutationInput!, where: ClassMateWhereInput): BatchPayload!\n  upsertClassMate(where: ClassMateWhereUniqueInput!, create: ClassMateCreateInput!, update: ClassMateUpdateInput!): ClassMate!\n  deleteClassMate(where: ClassMateWhereUniqueInput!): ClassMate\n  deleteManyClassMates(where: ClassMateWhereInput): BatchPayload!\n  createColleague(data: ColleagueCreateInput!): Colleague!\n  updateColleague(data: ColleagueUpdateInput!, where: ColleagueWhereUniqueInput!): Colleague\n  updateManyColleagues(data: ColleagueUpdateManyMutationInput!, where: ColleagueWhereInput): BatchPayload!\n  upsertColleague(where: ColleagueWhereUniqueInput!, create: ColleagueCreateInput!, update: ColleagueUpdateInput!): Colleague!\n  deleteColleague(where: ColleagueWhereUniqueInput!): Colleague\n  deleteManyColleagues(where: ColleagueWhereInput): BatchPayload!\n  createCollegeEntranceExam(data: CollegeEntranceExamCreateInput!): CollegeEntranceExam!\n  updateCollegeEntranceExam(data: CollegeEntranceExamUpdateInput!, where: CollegeEntranceExamWhereUniqueInput!): CollegeEntranceExam\n  updateManyCollegeEntranceExams(data: CollegeEntranceExamUpdateManyMutationInput!, where: CollegeEntranceExamWhereInput): BatchPayload!\n  upsertCollegeEntranceExam(where: CollegeEntranceExamWhereUniqueInput!, create: CollegeEntranceExamCreateInput!, update: CollegeEntranceExamUpdateInput!): CollegeEntranceExam!\n  deleteCollegeEntranceExam(where: CollegeEntranceExamWhereUniqueInput!): CollegeEntranceExam\n  deleteManyCollegeEntranceExams(where: CollegeEntranceExamWhereInput): BatchPayload!\n  createCompany(data: CompanyCreateInput!): Company!\n  updateCompany(data: CompanyUpdateInput!, where: CompanyWhereUniqueInput!): Company\n  updateManyCompanies(data: CompanyUpdateManyMutationInput!, where: CompanyWhereInput): BatchPayload!\n  upsertCompany(where: CompanyWhereUniqueInput!, create: CompanyCreateInput!, update: CompanyUpdateInput!): Company!\n  deleteCompany(where: CompanyWhereUniqueInput!): Company\n  deleteManyCompanies(where: CompanyWhereInput): BatchPayload!\n  createFamily(data: FamilyCreateInput!): Family!\n  updateFamily(data: FamilyUpdateInput!, where: FamilyWhereUniqueInput!): Family\n  updateManyFamilies(data: FamilyUpdateManyMutationInput!, where: FamilyWhereInput): BatchPayload!\n  upsertFamily(where: FamilyWhereUniqueInput!, create: FamilyCreateInput!, update: FamilyUpdateInput!): Family!\n  deleteFamily(where: FamilyWhereUniqueInput!): Family\n  deleteManyFamilies(where: FamilyWhereInput): BatchPayload!\n  createFamilyGroup(data: FamilyGroupCreateInput!): FamilyGroup!\n  updateFamilyGroup(data: FamilyGroupUpdateInput!, where: FamilyGroupWhereUniqueInput!): FamilyGroup\n  updateManyFamilyGroups(data: FamilyGroupUpdateManyMutationInput!, where: FamilyGroupWhereInput): BatchPayload!\n  upsertFamilyGroup(where: FamilyGroupWhereUniqueInput!, create: FamilyGroupCreateInput!, update: FamilyGroupUpdateInput!): FamilyGroup!\n  deleteFamilyGroup(where: FamilyGroupWhereUniqueInput!): FamilyGroup\n  deleteManyFamilyGroups(where: FamilyGroupWhereInput): BatchPayload!\n  createFindPassWord(data: FindPassWordCreateInput!): FindPassWord!\n  updateFindPassWord(data: FindPassWordUpdateInput!, where: FindPassWordWhereUniqueInput!): FindPassWord\n  updateManyFindPassWords(data: FindPassWordUpdateManyMutationInput!, where: FindPassWordWhereInput): BatchPayload!\n  upsertFindPassWord(where: FindPassWordWhereUniqueInput!, create: FindPassWordCreateInput!, update: FindPassWordUpdateInput!): FindPassWord!\n  deleteFindPassWord(where: FindPassWordWhereUniqueInput!): FindPassWord\n  deleteManyFindPassWords(where: FindPassWordWhereInput): BatchPayload!\n  createGroup(data: GroupCreateInput!): Group!\n  updateGroup(data: GroupUpdateInput!, where: GroupWhereUniqueInput!): Group\n  updateManyGroups(data: GroupUpdateManyMutationInput!, where: GroupWhereInput): BatchPayload!\n  upsertGroup(where: GroupWhereUniqueInput!, create: GroupCreateInput!, update: GroupUpdateInput!): Group!\n  deleteGroup(where: GroupWhereUniqueInput!): Group\n  deleteManyGroups(where: GroupWhereInput): BatchPayload!\n  createGroupMessage(data: GroupMessageCreateInput!): GroupMessage!\n  updateGroupMessage(data: GroupMessageUpdateInput!, where: GroupMessageWhereUniqueInput!): GroupMessage\n  updateManyGroupMessages(data: GroupMessageUpdateManyMutationInput!, where: GroupMessageWhereInput): BatchPayload!\n  upsertGroupMessage(where: GroupMessageWhereUniqueInput!, create: GroupMessageCreateInput!, update: GroupMessageUpdateInput!): GroupMessage!\n  deleteGroupMessage(where: GroupMessageWhereUniqueInput!): GroupMessage\n  deleteManyGroupMessages(where: GroupMessageWhereInput): BatchPayload!\n  createLocation(data: LocationCreateInput!): Location!\n  updateLocation(data: LocationUpdateInput!, where: LocationWhereUniqueInput!): Location\n  updateManyLocations(data: LocationUpdateManyMutationInput!, where: LocationWhereInput): BatchPayload!\n  upsertLocation(where: LocationWhereUniqueInput!, create: LocationCreateInput!, update: LocationUpdateInput!): Location!\n  deleteLocation(where: LocationWhereUniqueInput!): Location\n  deleteManyLocations(where: LocationWhereInput): BatchPayload!\n  createLocationGroup(data: LocationGroupCreateInput!): LocationGroup!\n  updateLocationGroup(data: LocationGroupUpdateInput!, where: LocationGroupWhereUniqueInput!): LocationGroup\n  updateManyLocationGroups(data: LocationGroupUpdateManyMutationInput!, where: LocationGroupWhereInput): BatchPayload!\n  upsertLocationGroup(where: LocationGroupWhereUniqueInput!, create: LocationGroupCreateInput!, update: LocationGroupUpdateInput!): LocationGroup!\n  deleteLocationGroup(where: LocationGroupWhereUniqueInput!): LocationGroup\n  deleteManyLocationGroups(where: LocationGroupWhereInput): BatchPayload!\n  createLogs(data: LogsCreateInput!): Logs!\n  updateManyLogses(data: LogsUpdateManyMutationInput!, where: LogsWhereInput): BatchPayload!\n  deleteManyLogses(where: LogsWhereInput): BatchPayload!\n  createMajor(data: MajorCreateInput!): Major!\n  updateMajor(data: MajorUpdateInput!, where: MajorWhereUniqueInput!): Major\n  updateManyMajors(data: MajorUpdateManyMutationInput!, where: MajorWhereInput): BatchPayload!\n  upsertMajor(where: MajorWhereUniqueInput!, create: MajorCreateInput!, update: MajorUpdateInput!): Major!\n  deleteMajor(where: MajorWhereUniqueInput!): Major\n  deleteManyMajors(where: MajorWhereInput): BatchPayload!\n  createMessage(data: MessageCreateInput!): Message!\n  updateMessage(data: MessageUpdateInput!, where: MessageWhereUniqueInput!): Message\n  updateManyMessages(data: MessageUpdateManyMutationInput!, where: MessageWhereInput): BatchPayload!\n  upsertMessage(where: MessageWhereUniqueInput!, create: MessageCreateInput!, update: MessageUpdateInput!): Message!\n  deleteMessage(where: MessageWhereUniqueInput!): Message\n  deleteManyMessages(where: MessageWhereInput): BatchPayload!\n  createOldColleague(data: OldColleagueCreateInput!): OldColleague!\n  updateOldColleague(data: OldColleagueUpdateInput!, where: OldColleagueWhereUniqueInput!): OldColleague\n  updateManyOldColleagues(data: OldColleagueUpdateManyMutationInput!, where: OldColleagueWhereInput): BatchPayload!\n  upsertOldColleague(where: OldColleagueWhereUniqueInput!, create: OldColleagueCreateInput!, update: OldColleagueUpdateInput!): OldColleague!\n  deleteOldColleague(where: OldColleagueWhereUniqueInput!): OldColleague\n  deleteManyOldColleagues(where: OldColleagueWhereInput): BatchPayload!\n  createPerson(data: PersonCreateInput!): Person!\n  updatePerson(data: PersonUpdateInput!, where: PersonWhereUniqueInput!): Person\n  updateManyPersons(data: PersonUpdateManyMutationInput!, where: PersonWhereInput): BatchPayload!\n  upsertPerson(where: PersonWhereUniqueInput!, create: PersonCreateInput!, update: PersonUpdateInput!): Person!\n  deletePerson(where: PersonWhereUniqueInput!): Person\n  deleteManyPersons(where: PersonWhereInput): BatchPayload!\n  createPhoto(data: PhotoCreateInput!): Photo!\n  updatePhoto(data: PhotoUpdateInput!, where: PhotoWhereUniqueInput!): Photo\n  updateManyPhotos(data: PhotoUpdateManyMutationInput!, where: PhotoWhereInput): BatchPayload!\n  upsertPhoto(where: PhotoWhereUniqueInput!, create: PhotoCreateInput!, update: PhotoUpdateInput!): Photo!\n  deletePhoto(where: PhotoWhereUniqueInput!): Photo\n  deleteManyPhotos(where: PhotoWhereInput): BatchPayload!\n  createPost(data: PostCreateInput!): Post!\n  updatePost(data: PostUpdateInput!, where: PostWhereUniqueInput!): Post\n  updateManyPosts(data: PostUpdateManyMutationInput!, where: PostWhereInput): BatchPayload!\n  upsertPost(where: PostWhereUniqueInput!, create: PostCreateInput!, update: PostUpdateInput!): Post!\n  deletePost(where: PostWhereUniqueInput!): Post\n  deleteManyPosts(where: PostWhereInput): BatchPayload!\n  createProvince(data: ProvinceCreateInput!): Province!\n  updateProvince(data: ProvinceUpdateInput!, where: ProvinceWhereUniqueInput!): Province\n  updateManyProvinces(data: ProvinceUpdateManyMutationInput!, where: ProvinceWhereInput): BatchPayload!\n  upsertProvince(where: ProvinceWhereUniqueInput!, create: ProvinceCreateInput!, update: ProvinceUpdateInput!): Province!\n  deleteProvince(where: ProvinceWhereUniqueInput!): Province\n  deleteManyProvinces(where: ProvinceWhereInput): BatchPayload!\n  createRegStatus(data: RegStatusCreateInput!): RegStatus!\n  updateRegStatus(data: RegStatusUpdateInput!, where: RegStatusWhereUniqueInput!): RegStatus\n  updateManyRegStatuses(data: RegStatusUpdateManyMutationInput!, where: RegStatusWhereInput): BatchPayload!\n  upsertRegStatus(where: RegStatusWhereUniqueInput!, create: RegStatusCreateInput!, update: RegStatusUpdateInput!): RegStatus!\n  deleteRegStatus(where: RegStatusWhereUniqueInput!): RegStatus\n  deleteManyRegStatuses(where: RegStatusWhereInput): BatchPayload!\n  createRegisterCount(data: RegisterCountCreateInput!): RegisterCount!\n  updateRegisterCount(data: RegisterCountUpdateInput!, where: RegisterCountWhereUniqueInput!): RegisterCount\n  updateManyRegisterCounts(data: RegisterCountUpdateManyMutationInput!, where: RegisterCountWhereInput): BatchPayload!\n  upsertRegisterCount(where: RegisterCountWhereUniqueInput!, create: RegisterCountCreateInput!, update: RegisterCountUpdateInput!): RegisterCount!\n  deleteRegisterCount(where: RegisterCountWhereUniqueInput!): RegisterCount\n  deleteManyRegisterCounts(where: RegisterCountWhereInput): BatchPayload!\n  createSchool(data: SchoolCreateInput!): School!\n  updateSchool(data: SchoolUpdateInput!, where: SchoolWhereUniqueInput!): School\n  updateManySchools(data: SchoolUpdateManyMutationInput!, where: SchoolWhereInput): BatchPayload!\n  upsertSchool(where: SchoolWhereUniqueInput!, create: SchoolCreateInput!, update: SchoolUpdateInput!): School!\n  deleteSchool(where: SchoolWhereUniqueInput!): School\n  deleteManySchools(where: SchoolWhereInput): BatchPayload!\n  createSchoolEdu(data: SchoolEduCreateInput!): SchoolEdu!\n  updateSchoolEdu(data: SchoolEduUpdateInput!, where: SchoolEduWhereUniqueInput!): SchoolEdu\n  updateManySchoolEdus(data: SchoolEduUpdateManyMutationInput!, where: SchoolEduWhereInput): BatchPayload!\n  upsertSchoolEdu(where: SchoolEduWhereUniqueInput!, create: SchoolEduCreateInput!, update: SchoolEduUpdateInput!): SchoolEdu!\n  deleteSchoolEdu(where: SchoolEduWhereUniqueInput!): SchoolEdu\n  deleteManySchoolEdus(where: SchoolEduWhereInput): BatchPayload!\n  createStation(data: StationCreateInput!): Station!\n  updateStation(data: StationUpdateInput!, where: StationWhereUniqueInput!): Station\n  updateManyStations(data: StationUpdateManyMutationInput!, where: StationWhereInput): BatchPayload!\n  upsertStation(where: StationWhereUniqueInput!, create: StationCreateInput!, update: StationUpdateInput!): Station!\n  deleteStation(where: StationWhereUniqueInput!): Station\n  deleteManyStations(where: StationWhereInput): BatchPayload!\n  createStreet(data: StreetCreateInput!): Street!\n  updateStreet(data: StreetUpdateInput!, where: StreetWhereUniqueInput!): Street\n  updateManyStreets(data: StreetUpdateManyMutationInput!, where: StreetWhereInput): BatchPayload!\n  upsertStreet(where: StreetWhereUniqueInput!, create: StreetCreateInput!, update: StreetUpdateInput!): Street!\n  deleteStreet(where: StreetWhereUniqueInput!): Street\n  deleteManyStreets(where: StreetWhereInput): BatchPayload!\n  createUniversity(data: UniversityCreateInput!): University!\n  updateUniversity(data: UniversityUpdateInput!, where: UniversityWhereUniqueInput!): University\n  updateManyUniversities(data: UniversityUpdateManyMutationInput!, where: UniversityWhereInput): BatchPayload!\n  upsertUniversity(where: UniversityWhereUniqueInput!, create: UniversityCreateInput!, update: UniversityUpdateInput!): University!\n  deleteUniversity(where: UniversityWhereUniqueInput!): University\n  deleteManyUniversities(where: UniversityWhereInput): BatchPayload!\n  createUser(data: UserCreateInput!): User!\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  deleteUser(where: UserWhereUniqueInput!): User\n  deleteManyUsers(where: UserWhereInput): BatchPayload!\n  createVillage(data: VillageCreateInput!): Village!\n  updateVillage(data: VillageUpdateInput!, where: VillageWhereUniqueInput!): Village\n  updateManyVillages(data: VillageUpdateManyMutationInput!, where: VillageWhereInput): BatchPayload!\n  upsertVillage(where: VillageWhereUniqueInput!, create: VillageCreateInput!, update: VillageUpdateInput!): Village!\n  deleteVillage(where: VillageWhereUniqueInput!): Village\n  deleteManyVillages(where: VillageWhereInput): BatchPayload!\n  createWork(data: WorkCreateInput!): Work!\n  updateWork(data: WorkUpdateInput!, where: WorkWhereUniqueInput!): Work\n  updateManyWorks(data: WorkUpdateManyMutationInput!, where: WorkWhereInput): BatchPayload!\n  upsertWork(where: WorkWhereUniqueInput!, create: WorkCreateInput!, update: WorkUpdateInput!): Work!\n  deleteWork(where: WorkWhereUniqueInput!): Work\n  deleteManyWorks(where: WorkWhereInput): BatchPayload!\n  createWorkGroup(data: WorkGroupCreateInput!): WorkGroup!\n  updateWorkGroup(data: WorkGroupUpdateInput!, where: WorkGroupWhereUniqueInput!): WorkGroup\n  upsertWorkGroup(where: WorkGroupWhereUniqueInput!, create: WorkGroupCreateInput!, update: WorkGroupUpdateInput!): WorkGroup!\n  deleteWorkGroup(where: WorkGroupWhereUniqueInput!): WorkGroup\n  deleteManyWorkGroups(where: WorkGroupWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\ninterface Node {\n  id: ID!\n}\n\ntype OldColleague {\n  id: ID!\n  from: User\n  to: User\n  company: Company\n  status: String!\n}\n\ntype OldColleagueConnection {\n  pageInfo: PageInfo!\n  edges: [OldColleagueEdge]!\n  aggregate: AggregateOldColleague!\n}\n\ninput OldColleagueCreateInput {\n  from: UserCreateOneWithoutFromOldColleaguesInput\n  to: UserCreateOneWithoutToOldColleaguesInput\n  company: CompanyCreateOneInput\n  status: String!\n}\n\ninput OldColleagueCreateManyWithoutFromInput {\n  create: [OldColleagueCreateWithoutFromInput!]\n  connect: [OldColleagueWhereUniqueInput!]\n}\n\ninput OldColleagueCreateManyWithoutToInput {\n  create: [OldColleagueCreateWithoutToInput!]\n  connect: [OldColleagueWhereUniqueInput!]\n}\n\ninput OldColleagueCreateWithoutFromInput {\n  to: UserCreateOneWithoutToOldColleaguesInput\n  company: CompanyCreateOneInput\n  status: String!\n}\n\ninput OldColleagueCreateWithoutToInput {\n  from: UserCreateOneWithoutFromOldColleaguesInput\n  company: CompanyCreateOneInput\n  status: String!\n}\n\ntype OldColleagueEdge {\n  node: OldColleague!\n  cursor: String!\n}\n\nenum OldColleagueOrderByInput {\n  id_ASC\n  id_DESC\n  status_ASC\n  status_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype OldColleaguePreviousValues {\n  id: ID!\n  status: String!\n}\n\ninput OldColleagueScalarWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  status: String\n  status_not: String\n  status_in: [String!]\n  status_not_in: [String!]\n  status_lt: String\n  status_lte: String\n  status_gt: String\n  status_gte: String\n  status_contains: String\n  status_not_contains: String\n  status_starts_with: String\n  status_not_starts_with: String\n  status_ends_with: String\n  status_not_ends_with: String\n  AND: [OldColleagueScalarWhereInput!]\n  OR: [OldColleagueScalarWhereInput!]\n  NOT: [OldColleagueScalarWhereInput!]\n}\n\ntype OldColleagueSubscriptionPayload {\n  mutation: MutationType!\n  node: OldColleague\n  updatedFields: [String!]\n  previousValues: OldColleaguePreviousValues\n}\n\ninput OldColleagueSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: OldColleagueWhereInput\n  AND: [OldColleagueSubscriptionWhereInput!]\n  OR: [OldColleagueSubscriptionWhereInput!]\n  NOT: [OldColleagueSubscriptionWhereInput!]\n}\n\ninput OldColleagueUpdateInput {\n  from: UserUpdateOneWithoutFromOldColleaguesInput\n  to: UserUpdateOneWithoutToOldColleaguesInput\n  company: CompanyUpdateOneInput\n  status: String\n}\n\ninput OldColleagueUpdateManyDataInput {\n  status: String\n}\n\ninput OldColleagueUpdateManyMutationInput {\n  status: String\n}\n\ninput OldColleagueUpdateManyWithoutFromInput {\n  create: [OldColleagueCreateWithoutFromInput!]\n  delete: [OldColleagueWhereUniqueInput!]\n  connect: [OldColleagueWhereUniqueInput!]\n  disconnect: [OldColleagueWhereUniqueInput!]\n  update: [OldColleagueUpdateWithWhereUniqueWithoutFromInput!]\n  upsert: [OldColleagueUpsertWithWhereUniqueWithoutFromInput!]\n  deleteMany: [OldColleagueScalarWhereInput!]\n  updateMany: [OldColleagueUpdateManyWithWhereNestedInput!]\n}\n\ninput OldColleagueUpdateManyWithoutToInput {\n  create: [OldColleagueCreateWithoutToInput!]\n  delete: [OldColleagueWhereUniqueInput!]\n  connect: [OldColleagueWhereUniqueInput!]\n  disconnect: [OldColleagueWhereUniqueInput!]\n  update: [OldColleagueUpdateWithWhereUniqueWithoutToInput!]\n  upsert: [OldColleagueUpsertWithWhereUniqueWithoutToInput!]\n  deleteMany: [OldColleagueScalarWhereInput!]\n  updateMany: [OldColleagueUpdateManyWithWhereNestedInput!]\n}\n\ninput OldColleagueUpdateManyWithWhereNestedInput {\n  where: OldColleagueScalarWhereInput!\n  data: OldColleagueUpdateManyDataInput!\n}\n\ninput OldColleagueUpdateWithoutFromDataInput {\n  to: UserUpdateOneWithoutToOldColleaguesInput\n  company: CompanyUpdateOneInput\n  status: String\n}\n\ninput OldColleagueUpdateWithoutToDataInput {\n  from: UserUpdateOneWithoutFromOldColleaguesInput\n  company: CompanyUpdateOneInput\n  status: String\n}\n\ninput OldColleagueUpdateWithWhereUniqueWithoutFromInput {\n  where: OldColleagueWhereUniqueInput!\n  data: OldColleagueUpdateWithoutFromDataInput!\n}\n\ninput OldColleagueUpdateWithWhereUniqueWithoutToInput {\n  where: OldColleagueWhereUniqueInput!\n  data: OldColleagueUpdateWithoutToDataInput!\n}\n\ninput OldColleagueUpsertWithWhereUniqueWithoutFromInput {\n  where: OldColleagueWhereUniqueInput!\n  update: OldColleagueUpdateWithoutFromDataInput!\n  create: OldColleagueCreateWithoutFromInput!\n}\n\ninput OldColleagueUpsertWithWhereUniqueWithoutToInput {\n  where: OldColleagueWhereUniqueInput!\n  update: OldColleagueUpdateWithoutToDataInput!\n  create: OldColleagueCreateWithoutToInput!\n}\n\ninput OldColleagueWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  from: UserWhereInput\n  to: UserWhereInput\n  company: CompanyWhereInput\n  status: String\n  status_not: String\n  status_in: [String!]\n  status_not_in: [String!]\n  status_lt: String\n  status_lte: String\n  status_gt: String\n  status_gte: String\n  status_contains: String\n  status_not_contains: String\n  status_starts_with: String\n  status_not_starts_with: String\n  status_ends_with: String\n  status_not_ends_with: String\n  AND: [OldColleagueWhereInput!]\n  OR: [OldColleagueWhereInput!]\n  NOT: [OldColleagueWhereInput!]\n}\n\ninput OldColleagueWhereUniqueInput {\n  id: ID\n}\n\ntype PageInfo {\n  hasNextPage: Boolean!\n  hasPreviousPage: Boolean!\n  startCursor: String\n  endCursor: String\n}\n\ntype Person {\n  id: ID!\n  name: String!\n  user: User\n  families(where: FamilyWhereInput, orderBy: FamilyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Family!]\n  asFather(where: FamilyGroupWhereInput, orderBy: FamilyGroupOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [FamilyGroup!]\n  asMother(where: FamilyGroupWhereInput, orderBy: FamilyGroupOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [FamilyGroup!]\n}\n\ntype PersonConnection {\n  pageInfo: PageInfo!\n  edges: [PersonEdge]!\n  aggregate: AggregatePerson!\n}\n\ninput PersonCreateInput {\n  name: String!\n  user: UserCreateOneInput\n  families: FamilyCreateManyWithoutToInput\n  asFather: FamilyGroupCreateManyWithoutFatherInput\n  asMother: FamilyGroupCreateManyWithoutMotherInput\n}\n\ninput PersonCreateOneWithoutAsFatherInput {\n  create: PersonCreateWithoutAsFatherInput\n  connect: PersonWhereUniqueInput\n}\n\ninput PersonCreateOneWithoutAsMotherInput {\n  create: PersonCreateWithoutAsMotherInput\n  connect: PersonWhereUniqueInput\n}\n\ninput PersonCreateOneWithoutFamiliesInput {\n  create: PersonCreateWithoutFamiliesInput\n  connect: PersonWhereUniqueInput\n}\n\ninput PersonCreateWithoutAsFatherInput {\n  name: String!\n  user: UserCreateOneInput\n  families: FamilyCreateManyWithoutToInput\n  asMother: FamilyGroupCreateManyWithoutMotherInput\n}\n\ninput PersonCreateWithoutAsMotherInput {\n  name: String!\n  user: UserCreateOneInput\n  families: FamilyCreateManyWithoutToInput\n  asFather: FamilyGroupCreateManyWithoutFatherInput\n}\n\ninput PersonCreateWithoutFamiliesInput {\n  name: String!\n  user: UserCreateOneInput\n  asFather: FamilyGroupCreateManyWithoutFatherInput\n  asMother: FamilyGroupCreateManyWithoutMotherInput\n}\n\ntype PersonEdge {\n  node: Person!\n  cursor: String!\n}\n\nenum PersonOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype PersonPreviousValues {\n  id: ID!\n  name: String!\n}\n\ntype PersonSubscriptionPayload {\n  mutation: MutationType!\n  node: Person\n  updatedFields: [String!]\n  previousValues: PersonPreviousValues\n}\n\ninput PersonSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: PersonWhereInput\n  AND: [PersonSubscriptionWhereInput!]\n  OR: [PersonSubscriptionWhereInput!]\n  NOT: [PersonSubscriptionWhereInput!]\n}\n\ninput PersonUpdateInput {\n  name: String\n  user: UserUpdateOneInput\n  families: FamilyUpdateManyWithoutToInput\n  asFather: FamilyGroupUpdateManyWithoutFatherInput\n  asMother: FamilyGroupUpdateManyWithoutMotherInput\n}\n\ninput PersonUpdateManyMutationInput {\n  name: String\n}\n\ninput PersonUpdateOneRequiredWithoutFamiliesInput {\n  create: PersonCreateWithoutFamiliesInput\n  update: PersonUpdateWithoutFamiliesDataInput\n  upsert: PersonUpsertWithoutFamiliesInput\n  connect: PersonWhereUniqueInput\n}\n\ninput PersonUpdateOneWithoutAsFatherInput {\n  create: PersonCreateWithoutAsFatherInput\n  update: PersonUpdateWithoutAsFatherDataInput\n  upsert: PersonUpsertWithoutAsFatherInput\n  delete: Boolean\n  disconnect: Boolean\n  connect: PersonWhereUniqueInput\n}\n\ninput PersonUpdateOneWithoutAsMotherInput {\n  create: PersonCreateWithoutAsMotherInput\n  update: PersonUpdateWithoutAsMotherDataInput\n  upsert: PersonUpsertWithoutAsMotherInput\n  delete: Boolean\n  disconnect: Boolean\n  connect: PersonWhereUniqueInput\n}\n\ninput PersonUpdateWithoutAsFatherDataInput {\n  name: String\n  user: UserUpdateOneInput\n  families: FamilyUpdateManyWithoutToInput\n  asMother: FamilyGroupUpdateManyWithoutMotherInput\n}\n\ninput PersonUpdateWithoutAsMotherDataInput {\n  name: String\n  user: UserUpdateOneInput\n  families: FamilyUpdateManyWithoutToInput\n  asFather: FamilyGroupUpdateManyWithoutFatherInput\n}\n\ninput PersonUpdateWithoutFamiliesDataInput {\n  name: String\n  user: UserUpdateOneInput\n  asFather: FamilyGroupUpdateManyWithoutFatherInput\n  asMother: FamilyGroupUpdateManyWithoutMotherInput\n}\n\ninput PersonUpsertWithoutAsFatherInput {\n  update: PersonUpdateWithoutAsFatherDataInput!\n  create: PersonCreateWithoutAsFatherInput!\n}\n\ninput PersonUpsertWithoutAsMotherInput {\n  update: PersonUpdateWithoutAsMotherDataInput!\n  create: PersonCreateWithoutAsMotherInput!\n}\n\ninput PersonUpsertWithoutFamiliesInput {\n  update: PersonUpdateWithoutFamiliesDataInput!\n  create: PersonCreateWithoutFamiliesInput!\n}\n\ninput PersonWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  user: UserWhereInput\n  families_every: FamilyWhereInput\n  families_some: FamilyWhereInput\n  families_none: FamilyWhereInput\n  asFather_every: FamilyGroupWhereInput\n  asFather_some: FamilyGroupWhereInput\n  asFather_none: FamilyGroupWhereInput\n  asMother_every: FamilyGroupWhereInput\n  asMother_some: FamilyGroupWhereInput\n  asMother_none: FamilyGroupWhereInput\n  AND: [PersonWhereInput!]\n  OR: [PersonWhereInput!]\n  NOT: [PersonWhereInput!]\n}\n\ninput PersonWhereUniqueInput {\n  id: ID\n}\n\ntype Photo {\n  id: ID!\n  name: String\n  url: String\n  user: User\n}\n\ntype PhotoConnection {\n  pageInfo: PageInfo!\n  edges: [PhotoEdge]!\n  aggregate: AggregatePhoto!\n}\n\ninput PhotoCreateInput {\n  name: String\n  url: String\n  user: UserCreateOneWithoutAvatarInput\n}\n\ninput PhotoCreateOneInput {\n  create: PhotoCreateInput\n  connect: PhotoWhereUniqueInput\n}\n\ninput PhotoCreateOneWithoutUserInput {\n  create: PhotoCreateWithoutUserInput\n  connect: PhotoWhereUniqueInput\n}\n\ninput PhotoCreateWithoutUserInput {\n  name: String\n  url: String\n}\n\ntype PhotoEdge {\n  node: Photo!\n  cursor: String!\n}\n\nenum PhotoOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  url_ASC\n  url_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype PhotoPreviousValues {\n  id: ID!\n  name: String\n  url: String\n}\n\ntype PhotoSubscriptionPayload {\n  mutation: MutationType!\n  node: Photo\n  updatedFields: [String!]\n  previousValues: PhotoPreviousValues\n}\n\ninput PhotoSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: PhotoWhereInput\n  AND: [PhotoSubscriptionWhereInput!]\n  OR: [PhotoSubscriptionWhereInput!]\n  NOT: [PhotoSubscriptionWhereInput!]\n}\n\ninput PhotoUpdateDataInput {\n  name: String\n  url: String\n  user: UserUpdateOneWithoutAvatarInput\n}\n\ninput PhotoUpdateInput {\n  name: String\n  url: String\n  user: UserUpdateOneWithoutAvatarInput\n}\n\ninput PhotoUpdateManyMutationInput {\n  name: String\n  url: String\n}\n\ninput PhotoUpdateOneInput {\n  create: PhotoCreateInput\n  update: PhotoUpdateDataInput\n  upsert: PhotoUpsertNestedInput\n  delete: Boolean\n  disconnect: Boolean\n  connect: PhotoWhereUniqueInput\n}\n\ninput PhotoUpdateOneWithoutUserInput {\n  create: PhotoCreateWithoutUserInput\n  update: PhotoUpdateWithoutUserDataInput\n  upsert: PhotoUpsertWithoutUserInput\n  delete: Boolean\n  disconnect: Boolean\n  connect: PhotoWhereUniqueInput\n}\n\ninput PhotoUpdateWithoutUserDataInput {\n  name: String\n  url: String\n}\n\ninput PhotoUpsertNestedInput {\n  update: PhotoUpdateDataInput!\n  create: PhotoCreateInput!\n}\n\ninput PhotoUpsertWithoutUserInput {\n  update: PhotoUpdateWithoutUserDataInput!\n  create: PhotoCreateWithoutUserInput!\n}\n\ninput PhotoWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  url: String\n  url_not: String\n  url_in: [String!]\n  url_not_in: [String!]\n  url_lt: String\n  url_lte: String\n  url_gt: String\n  url_gte: String\n  url_contains: String\n  url_not_contains: String\n  url_starts_with: String\n  url_not_starts_with: String\n  url_ends_with: String\n  url_not_ends_with: String\n  user: UserWhereInput\n  AND: [PhotoWhereInput!]\n  OR: [PhotoWhereInput!]\n  NOT: [PhotoWhereInput!]\n}\n\ninput PhotoWhereUniqueInput {\n  id: ID\n  name: String\n}\n\ntype Post {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  isPublished: Boolean!\n  title: String!\n  content: String!\n  author: User!\n}\n\ntype PostConnection {\n  pageInfo: PageInfo!\n  edges: [PostEdge]!\n  aggregate: AggregatePost!\n}\n\ninput PostCreateInput {\n  isPublished: Boolean\n  title: String!\n  content: String!\n  author: UserCreateOneWithoutPostsInput!\n}\n\ninput PostCreateManyWithoutAuthorInput {\n  create: [PostCreateWithoutAuthorInput!]\n  connect: [PostWhereUniqueInput!]\n}\n\ninput PostCreateWithoutAuthorInput {\n  isPublished: Boolean\n  title: String!\n  content: String!\n}\n\ntype PostEdge {\n  node: Post!\n  cursor: String!\n}\n\nenum PostOrderByInput {\n  id_ASC\n  id_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  isPublished_ASC\n  isPublished_DESC\n  title_ASC\n  title_DESC\n  content_ASC\n  content_DESC\n}\n\ntype PostPreviousValues {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  isPublished: Boolean!\n  title: String!\n  content: String!\n}\n\ninput PostScalarWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  createdAt: DateTime\n  createdAt_not: DateTime\n  createdAt_in: [DateTime!]\n  createdAt_not_in: [DateTime!]\n  createdAt_lt: DateTime\n  createdAt_lte: DateTime\n  createdAt_gt: DateTime\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n  updatedAt_not: DateTime\n  updatedAt_in: [DateTime!]\n  updatedAt_not_in: [DateTime!]\n  updatedAt_lt: DateTime\n  updatedAt_lte: DateTime\n  updatedAt_gt: DateTime\n  updatedAt_gte: DateTime\n  isPublished: Boolean\n  isPublished_not: Boolean\n  title: String\n  title_not: String\n  title_in: [String!]\n  title_not_in: [String!]\n  title_lt: String\n  title_lte: String\n  title_gt: String\n  title_gte: String\n  title_contains: String\n  title_not_contains: String\n  title_starts_with: String\n  title_not_starts_with: String\n  title_ends_with: String\n  title_not_ends_with: String\n  content: String\n  content_not: String\n  content_in: [String!]\n  content_not_in: [String!]\n  content_lt: String\n  content_lte: String\n  content_gt: String\n  content_gte: String\n  content_contains: String\n  content_not_contains: String\n  content_starts_with: String\n  content_not_starts_with: String\n  content_ends_with: String\n  content_not_ends_with: String\n  AND: [PostScalarWhereInput!]\n  OR: [PostScalarWhereInput!]\n  NOT: [PostScalarWhereInput!]\n}\n\ntype PostSubscriptionPayload {\n  mutation: MutationType!\n  node: Post\n  updatedFields: [String!]\n  previousValues: PostPreviousValues\n}\n\ninput PostSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: PostWhereInput\n  AND: [PostSubscriptionWhereInput!]\n  OR: [PostSubscriptionWhereInput!]\n  NOT: [PostSubscriptionWhereInput!]\n}\n\ninput PostUpdateInput {\n  isPublished: Boolean\n  title: String\n  content: String\n  author: UserUpdateOneRequiredWithoutPostsInput\n}\n\ninput PostUpdateManyDataInput {\n  isPublished: Boolean\n  title: String\n  content: String\n}\n\ninput PostUpdateManyMutationInput {\n  isPublished: Boolean\n  title: String\n  content: String\n}\n\ninput PostUpdateManyWithoutAuthorInput {\n  create: [PostCreateWithoutAuthorInput!]\n  delete: [PostWhereUniqueInput!]\n  connect: [PostWhereUniqueInput!]\n  disconnect: [PostWhereUniqueInput!]\n  update: [PostUpdateWithWhereUniqueWithoutAuthorInput!]\n  upsert: [PostUpsertWithWhereUniqueWithoutAuthorInput!]\n  deleteMany: [PostScalarWhereInput!]\n  updateMany: [PostUpdateManyWithWhereNestedInput!]\n}\n\ninput PostUpdateManyWithWhereNestedInput {\n  where: PostScalarWhereInput!\n  data: PostUpdateManyDataInput!\n}\n\ninput PostUpdateWithoutAuthorDataInput {\n  isPublished: Boolean\n  title: String\n  content: String\n}\n\ninput PostUpdateWithWhereUniqueWithoutAuthorInput {\n  where: PostWhereUniqueInput!\n  data: PostUpdateWithoutAuthorDataInput!\n}\n\ninput PostUpsertWithWhereUniqueWithoutAuthorInput {\n  where: PostWhereUniqueInput!\n  update: PostUpdateWithoutAuthorDataInput!\n  create: PostCreateWithoutAuthorInput!\n}\n\ninput PostWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  createdAt: DateTime\n  createdAt_not: DateTime\n  createdAt_in: [DateTime!]\n  createdAt_not_in: [DateTime!]\n  createdAt_lt: DateTime\n  createdAt_lte: DateTime\n  createdAt_gt: DateTime\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n  updatedAt_not: DateTime\n  updatedAt_in: [DateTime!]\n  updatedAt_not_in: [DateTime!]\n  updatedAt_lt: DateTime\n  updatedAt_lte: DateTime\n  updatedAt_gt: DateTime\n  updatedAt_gte: DateTime\n  isPublished: Boolean\n  isPublished_not: Boolean\n  title: String\n  title_not: String\n  title_in: [String!]\n  title_not_in: [String!]\n  title_lt: String\n  title_lte: String\n  title_gt: String\n  title_gte: String\n  title_contains: String\n  title_not_contains: String\n  title_starts_with: String\n  title_not_starts_with: String\n  title_ends_with: String\n  title_not_ends_with: String\n  content: String\n  content_not: String\n  content_in: [String!]\n  content_not_in: [String!]\n  content_lt: String\n  content_lte: String\n  content_gt: String\n  content_gte: String\n  content_contains: String\n  content_not_contains: String\n  content_starts_with: String\n  content_not_starts_with: String\n  content_ends_with: String\n  content_not_ends_with: String\n  author: UserWhereInput\n  AND: [PostWhereInput!]\n  OR: [PostWhereInput!]\n  NOT: [PostWhereInput!]\n}\n\ninput PostWhereUniqueInput {\n  id: ID\n}\n\ntype Province {\n  id: ID!\n  code: String!\n  name: String!\n  cities(where: CityWhereInput, orderBy: CityOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [City!]\n}\n\ntype ProvinceConnection {\n  pageInfo: PageInfo!\n  edges: [ProvinceEdge]!\n  aggregate: AggregateProvince!\n}\n\ninput ProvinceCreateInput {\n  code: String!\n  name: String!\n  cities: CityCreateManyWithoutProvinceInput\n}\n\ninput ProvinceCreateOneInput {\n  create: ProvinceCreateInput\n  connect: ProvinceWhereUniqueInput\n}\n\ninput ProvinceCreateOneWithoutCitiesInput {\n  create: ProvinceCreateWithoutCitiesInput\n  connect: ProvinceWhereUniqueInput\n}\n\ninput ProvinceCreateWithoutCitiesInput {\n  code: String!\n  name: String!\n}\n\ntype ProvinceEdge {\n  node: Province!\n  cursor: String!\n}\n\nenum ProvinceOrderByInput {\n  id_ASC\n  id_DESC\n  code_ASC\n  code_DESC\n  name_ASC\n  name_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype ProvincePreviousValues {\n  id: ID!\n  code: String!\n  name: String!\n}\n\ntype ProvinceSubscriptionPayload {\n  mutation: MutationType!\n  node: Province\n  updatedFields: [String!]\n  previousValues: ProvincePreviousValues\n}\n\ninput ProvinceSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: ProvinceWhereInput\n  AND: [ProvinceSubscriptionWhereInput!]\n  OR: [ProvinceSubscriptionWhereInput!]\n  NOT: [ProvinceSubscriptionWhereInput!]\n}\n\ninput ProvinceUpdateDataInput {\n  code: String\n  name: String\n  cities: CityUpdateManyWithoutProvinceInput\n}\n\ninput ProvinceUpdateInput {\n  code: String\n  name: String\n  cities: CityUpdateManyWithoutProvinceInput\n}\n\ninput ProvinceUpdateManyMutationInput {\n  code: String\n  name: String\n}\n\ninput ProvinceUpdateOneInput {\n  create: ProvinceCreateInput\n  update: ProvinceUpdateDataInput\n  upsert: ProvinceUpsertNestedInput\n  delete: Boolean\n  disconnect: Boolean\n  connect: ProvinceWhereUniqueInput\n}\n\ninput ProvinceUpdateOneRequiredInput {\n  create: ProvinceCreateInput\n  update: ProvinceUpdateDataInput\n  upsert: ProvinceUpsertNestedInput\n  connect: ProvinceWhereUniqueInput\n}\n\ninput ProvinceUpdateOneRequiredWithoutCitiesInput {\n  create: ProvinceCreateWithoutCitiesInput\n  update: ProvinceUpdateWithoutCitiesDataInput\n  upsert: ProvinceUpsertWithoutCitiesInput\n  connect: ProvinceWhereUniqueInput\n}\n\ninput ProvinceUpdateWithoutCitiesDataInput {\n  code: String\n  name: String\n}\n\ninput ProvinceUpsertNestedInput {\n  update: ProvinceUpdateDataInput!\n  create: ProvinceCreateInput!\n}\n\ninput ProvinceUpsertWithoutCitiesInput {\n  update: ProvinceUpdateWithoutCitiesDataInput!\n  create: ProvinceCreateWithoutCitiesInput!\n}\n\ninput ProvinceWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  code: String\n  code_not: String\n  code_in: [String!]\n  code_not_in: [String!]\n  code_lt: String\n  code_lte: String\n  code_gt: String\n  code_gte: String\n  code_contains: String\n  code_not_contains: String\n  code_starts_with: String\n  code_not_starts_with: String\n  code_ends_with: String\n  code_not_ends_with: String\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  cities_every: CityWhereInput\n  cities_some: CityWhereInput\n  cities_none: CityWhereInput\n  AND: [ProvinceWhereInput!]\n  OR: [ProvinceWhereInput!]\n  NOT: [ProvinceWhereInput!]\n}\n\ninput ProvinceWhereUniqueInput {\n  id: ID\n  code: String\n  name: String\n}\n\ntype Query {\n  advertisement(where: AdvertisementWhereUniqueInput!): Advertisement\n  advertisements(where: AdvertisementWhereInput, orderBy: AdvertisementOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Advertisement]!\n  advertisementsConnection(where: AdvertisementWhereInput, orderBy: AdvertisementOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AdvertisementConnection!\n  area(where: AreaWhereUniqueInput!): Area\n  areas(where: AreaWhereInput, orderBy: AreaOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Area]!\n  areasConnection(where: AreaWhereInput, orderBy: AreaOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AreaConnection!\n  bootCount(where: BootCountWhereUniqueInput!): BootCount\n  bootCounts(where: BootCountWhereInput, orderBy: BootCountOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [BootCount]!\n  bootCountsConnection(where: BootCountWhereInput, orderBy: BootCountOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BootCountConnection!\n  city(where: CityWhereUniqueInput!): City\n  cities(where: CityWhereInput, orderBy: CityOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [City]!\n  citiesConnection(where: CityWhereInput, orderBy: CityOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CityConnection!\n  classGroup(where: ClassGroupWhereUniqueInput!): ClassGroup\n  classGroups(where: ClassGroupWhereInput, orderBy: ClassGroupOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ClassGroup]!\n  classGroupsConnection(where: ClassGroupWhereInput, orderBy: ClassGroupOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ClassGroupConnection!\n  classMate(where: ClassMateWhereUniqueInput!): ClassMate\n  classMates(where: ClassMateWhereInput, orderBy: ClassMateOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ClassMate]!\n  classMatesConnection(where: ClassMateWhereInput, orderBy: ClassMateOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ClassMateConnection!\n  colleague(where: ColleagueWhereUniqueInput!): Colleague\n  colleagues(where: ColleagueWhereInput, orderBy: ColleagueOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Colleague]!\n  colleaguesConnection(where: ColleagueWhereInput, orderBy: ColleagueOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ColleagueConnection!\n  collegeEntranceExam(where: CollegeEntranceExamWhereUniqueInput!): CollegeEntranceExam\n  collegeEntranceExams(where: CollegeEntranceExamWhereInput, orderBy: CollegeEntranceExamOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CollegeEntranceExam]!\n  collegeEntranceExamsConnection(where: CollegeEntranceExamWhereInput, orderBy: CollegeEntranceExamOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CollegeEntranceExamConnection!\n  company(where: CompanyWhereUniqueInput!): Company\n  companies(where: CompanyWhereInput, orderBy: CompanyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Company]!\n  companiesConnection(where: CompanyWhereInput, orderBy: CompanyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CompanyConnection!\n  family(where: FamilyWhereUniqueInput!): Family\n  families(where: FamilyWhereInput, orderBy: FamilyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Family]!\n  familiesConnection(where: FamilyWhereInput, orderBy: FamilyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): FamilyConnection!\n  familyGroup(where: FamilyGroupWhereUniqueInput!): FamilyGroup\n  familyGroups(where: FamilyGroupWhereInput, orderBy: FamilyGroupOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [FamilyGroup]!\n  familyGroupsConnection(where: FamilyGroupWhereInput, orderBy: FamilyGroupOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): FamilyGroupConnection!\n  findPassWord(where: FindPassWordWhereUniqueInput!): FindPassWord\n  findPassWords(where: FindPassWordWhereInput, orderBy: FindPassWordOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [FindPassWord]!\n  findPassWordsConnection(where: FindPassWordWhereInput, orderBy: FindPassWordOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): FindPassWordConnection!\n  group(where: GroupWhereUniqueInput!): Group\n  groups(where: GroupWhereInput, orderBy: GroupOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Group]!\n  groupsConnection(where: GroupWhereInput, orderBy: GroupOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): GroupConnection!\n  groupMessage(where: GroupMessageWhereUniqueInput!): GroupMessage\n  groupMessages(where: GroupMessageWhereInput, orderBy: GroupMessageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [GroupMessage]!\n  groupMessagesConnection(where: GroupMessageWhereInput, orderBy: GroupMessageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): GroupMessageConnection!\n  location(where: LocationWhereUniqueInput!): Location\n  locations(where: LocationWhereInput, orderBy: LocationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Location]!\n  locationsConnection(where: LocationWhereInput, orderBy: LocationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): LocationConnection!\n  locationGroup(where: LocationGroupWhereUniqueInput!): LocationGroup\n  locationGroups(where: LocationGroupWhereInput, orderBy: LocationGroupOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [LocationGroup]!\n  locationGroupsConnection(where: LocationGroupWhereInput, orderBy: LocationGroupOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): LocationGroupConnection!\n  logses(where: LogsWhereInput, orderBy: LogsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Logs]!\n  logsesConnection(where: LogsWhereInput, orderBy: LogsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): LogsConnection!\n  major(where: MajorWhereUniqueInput!): Major\n  majors(where: MajorWhereInput, orderBy: MajorOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Major]!\n  majorsConnection(where: MajorWhereInput, orderBy: MajorOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): MajorConnection!\n  message(where: MessageWhereUniqueInput!): Message\n  messages(where: MessageWhereInput, orderBy: MessageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Message]!\n  messagesConnection(where: MessageWhereInput, orderBy: MessageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): MessageConnection!\n  oldColleague(where: OldColleagueWhereUniqueInput!): OldColleague\n  oldColleagues(where: OldColleagueWhereInput, orderBy: OldColleagueOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [OldColleague]!\n  oldColleaguesConnection(where: OldColleagueWhereInput, orderBy: OldColleagueOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): OldColleagueConnection!\n  person(where: PersonWhereUniqueInput!): Person\n  persons(where: PersonWhereInput, orderBy: PersonOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Person]!\n  personsConnection(where: PersonWhereInput, orderBy: PersonOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PersonConnection!\n  photo(where: PhotoWhereUniqueInput!): Photo\n  photos(where: PhotoWhereInput, orderBy: PhotoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Photo]!\n  photosConnection(where: PhotoWhereInput, orderBy: PhotoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PhotoConnection!\n  post(where: PostWhereUniqueInput!): Post\n  posts(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Post]!\n  postsConnection(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PostConnection!\n  province(where: ProvinceWhereUniqueInput!): Province\n  provinces(where: ProvinceWhereInput, orderBy: ProvinceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Province]!\n  provincesConnection(where: ProvinceWhereInput, orderBy: ProvinceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ProvinceConnection!\n  regStatus(where: RegStatusWhereUniqueInput!): RegStatus\n  regStatuses(where: RegStatusWhereInput, orderBy: RegStatusOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [RegStatus]!\n  regStatusesConnection(where: RegStatusWhereInput, orderBy: RegStatusOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): RegStatusConnection!\n  registerCount(where: RegisterCountWhereUniqueInput!): RegisterCount\n  registerCounts(where: RegisterCountWhereInput, orderBy: RegisterCountOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [RegisterCount]!\n  registerCountsConnection(where: RegisterCountWhereInput, orderBy: RegisterCountOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): RegisterCountConnection!\n  school(where: SchoolWhereUniqueInput!): School\n  schools(where: SchoolWhereInput, orderBy: SchoolOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [School]!\n  schoolsConnection(where: SchoolWhereInput, orderBy: SchoolOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SchoolConnection!\n  schoolEdu(where: SchoolEduWhereUniqueInput!): SchoolEdu\n  schoolEdus(where: SchoolEduWhereInput, orderBy: SchoolEduOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SchoolEdu]!\n  schoolEdusConnection(where: SchoolEduWhereInput, orderBy: SchoolEduOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SchoolEduConnection!\n  station(where: StationWhereUniqueInput!): Station\n  stations(where: StationWhereInput, orderBy: StationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Station]!\n  stationsConnection(where: StationWhereInput, orderBy: StationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): StationConnection!\n  street(where: StreetWhereUniqueInput!): Street\n  streets(where: StreetWhereInput, orderBy: StreetOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Street]!\n  streetsConnection(where: StreetWhereInput, orderBy: StreetOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): StreetConnection!\n  university(where: UniversityWhereUniqueInput!): University\n  universities(where: UniversityWhereInput, orderBy: UniversityOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [University]!\n  universitiesConnection(where: UniversityWhereInput, orderBy: UniversityOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UniversityConnection!\n  user(where: UserWhereUniqueInput!): User\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n  village(where: VillageWhereUniqueInput!): Village\n  villages(where: VillageWhereInput, orderBy: VillageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Village]!\n  villagesConnection(where: VillageWhereInput, orderBy: VillageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): VillageConnection!\n  work(where: WorkWhereUniqueInput!): Work\n  works(where: WorkWhereInput, orderBy: WorkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Work]!\n  worksConnection(where: WorkWhereInput, orderBy: WorkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): WorkConnection!\n  workGroup(where: WorkGroupWhereUniqueInput!): WorkGroup\n  workGroups(where: WorkGroupWhereInput, orderBy: WorkGroupOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [WorkGroup]!\n  workGroupsConnection(where: WorkGroupWhereInput, orderBy: WorkGroupOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): WorkGroupConnection!\n  node(id: ID!): Node\n}\n\ntype RegisterCount {\n  id: ID!\n  addUser: User\n  deviceId: String\n  createdAt: DateTime!\n}\n\ntype RegisterCountConnection {\n  pageInfo: PageInfo!\n  edges: [RegisterCountEdge]!\n  aggregate: AggregateRegisterCount!\n}\n\ninput RegisterCountCreateInput {\n  addUser: UserCreateOneInput\n  deviceId: String\n}\n\ntype RegisterCountEdge {\n  node: RegisterCount!\n  cursor: String!\n}\n\nenum RegisterCountOrderByInput {\n  id_ASC\n  id_DESC\n  deviceId_ASC\n  deviceId_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype RegisterCountPreviousValues {\n  id: ID!\n  deviceId: String\n  createdAt: DateTime!\n}\n\ntype RegisterCountSubscriptionPayload {\n  mutation: MutationType!\n  node: RegisterCount\n  updatedFields: [String!]\n  previousValues: RegisterCountPreviousValues\n}\n\ninput RegisterCountSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: RegisterCountWhereInput\n  AND: [RegisterCountSubscriptionWhereInput!]\n  OR: [RegisterCountSubscriptionWhereInput!]\n  NOT: [RegisterCountSubscriptionWhereInput!]\n}\n\ninput RegisterCountUpdateInput {\n  addUser: UserUpdateOneInput\n  deviceId: String\n}\n\ninput RegisterCountUpdateManyMutationInput {\n  deviceId: String\n}\n\ninput RegisterCountWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  addUser: UserWhereInput\n  deviceId: String\n  deviceId_not: String\n  deviceId_in: [String!]\n  deviceId_not_in: [String!]\n  deviceId_lt: String\n  deviceId_lte: String\n  deviceId_gt: String\n  deviceId_gte: String\n  deviceId_contains: String\n  deviceId_not_contains: String\n  deviceId_starts_with: String\n  deviceId_not_starts_with: String\n  deviceId_ends_with: String\n  deviceId_not_ends_with: String\n  createdAt: DateTime\n  createdAt_not: DateTime\n  createdAt_in: [DateTime!]\n  createdAt_not_in: [DateTime!]\n  createdAt_lt: DateTime\n  createdAt_lte: DateTime\n  createdAt_gt: DateTime\n  createdAt_gte: DateTime\n  AND: [RegisterCountWhereInput!]\n  OR: [RegisterCountWhereInput!]\n  NOT: [RegisterCountWhereInput!]\n}\n\ninput RegisterCountWhereUniqueInput {\n  id: ID\n}\n\ntype RegStatus {\n  id: ID!\n  education: Educationkind!\n  university: University\n  major: Major!\n  applicants(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]\n}\n\ntype RegStatusConnection {\n  pageInfo: PageInfo!\n  edges: [RegStatusEdge]!\n  aggregate: AggregateRegStatus!\n}\n\ninput RegStatusCreateInput {\n  education: Educationkind!\n  university: UniversityCreateOneInput\n  major: MajorCreateOneInput!\n  applicants: UserCreateManyWithoutRegStatusInput\n}\n\ninput RegStatusCreateOneWithoutApplicantsInput {\n  create: RegStatusCreateWithoutApplicantsInput\n  connect: RegStatusWhereUniqueInput\n}\n\ninput RegStatusCreateWithoutApplicantsInput {\n  education: Educationkind!\n  university: UniversityCreateOneInput\n  major: MajorCreateOneInput!\n}\n\ntype RegStatusEdge {\n  node: RegStatus!\n  cursor: String!\n}\n\nenum RegStatusOrderByInput {\n  id_ASC\n  id_DESC\n  education_ASC\n  education_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype RegStatusPreviousValues {\n  id: ID!\n  education: Educationkind!\n}\n\ntype RegStatusSubscriptionPayload {\n  mutation: MutationType!\n  node: RegStatus\n  updatedFields: [String!]\n  previousValues: RegStatusPreviousValues\n}\n\ninput RegStatusSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: RegStatusWhereInput\n  AND: [RegStatusSubscriptionWhereInput!]\n  OR: [RegStatusSubscriptionWhereInput!]\n  NOT: [RegStatusSubscriptionWhereInput!]\n}\n\ninput RegStatusUpdateInput {\n  education: Educationkind\n  university: UniversityUpdateOneInput\n  major: MajorUpdateOneRequiredInput\n  applicants: UserUpdateManyWithoutRegStatusInput\n}\n\ninput RegStatusUpdateManyMutationInput {\n  education: Educationkind\n}\n\ninput RegStatusUpdateOneWithoutApplicantsInput {\n  create: RegStatusCreateWithoutApplicantsInput\n  update: RegStatusUpdateWithoutApplicantsDataInput\n  upsert: RegStatusUpsertWithoutApplicantsInput\n  delete: Boolean\n  disconnect: Boolean\n  connect: RegStatusWhereUniqueInput\n}\n\ninput RegStatusUpdateWithoutApplicantsDataInput {\n  education: Educationkind\n  university: UniversityUpdateOneInput\n  major: MajorUpdateOneRequiredInput\n}\n\ninput RegStatusUpsertWithoutApplicantsInput {\n  update: RegStatusUpdateWithoutApplicantsDataInput!\n  create: RegStatusCreateWithoutApplicantsInput!\n}\n\ninput RegStatusWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  education: Educationkind\n  education_not: Educationkind\n  education_in: [Educationkind!]\n  education_not_in: [Educationkind!]\n  university: UniversityWhereInput\n  major: MajorWhereInput\n  applicants_every: UserWhereInput\n  applicants_some: UserWhereInput\n  applicants_none: UserWhereInput\n  AND: [RegStatusWhereInput!]\n  OR: [RegStatusWhereInput!]\n  NOT: [RegStatusWhereInput!]\n}\n\ninput RegStatusWhereUniqueInput {\n  id: ID\n}\n\ntype School {\n  id: ID!\n  name: String\n  kind: Educationkind\n  location: Location\n}\n\ntype SchoolConnection {\n  pageInfo: PageInfo!\n  edges: [SchoolEdge]!\n  aggregate: AggregateSchool!\n}\n\ninput SchoolCreateInput {\n  name: String\n  kind: Educationkind\n  location: LocationCreateOneWithoutSchoolsInput\n}\n\ninput SchoolCreateManyWithoutLocationInput {\n  create: [SchoolCreateWithoutLocationInput!]\n  connect: [SchoolWhereUniqueInput!]\n}\n\ninput SchoolCreateOneInput {\n  create: SchoolCreateInput\n  connect: SchoolWhereUniqueInput\n}\n\ninput SchoolCreateWithoutLocationInput {\n  name: String\n  kind: Educationkind\n}\n\ntype SchoolEdge {\n  node: School!\n  cursor: String!\n}\n\ntype SchoolEdu {\n  id: ID!\n  school: School\n  startTime: DateTime\n  major: Major\n  grade: Int\n  className: String\n  students(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]\n}\n\ntype SchoolEduConnection {\n  pageInfo: PageInfo!\n  edges: [SchoolEduEdge]!\n  aggregate: AggregateSchoolEdu!\n}\n\ninput SchoolEduCreateInput {\n  school: SchoolCreateOneInput\n  startTime: DateTime\n  major: MajorCreateOneInput\n  grade: Int\n  className: String\n  students: UserCreateManyWithoutStudiesInput\n}\n\ninput SchoolEduCreateManyWithoutStudentsInput {\n  create: [SchoolEduCreateWithoutStudentsInput!]\n  connect: [SchoolEduWhereUniqueInput!]\n}\n\ninput SchoolEduCreateOneInput {\n  create: SchoolEduCreateInput\n  connect: SchoolEduWhereUniqueInput\n}\n\ninput SchoolEduCreateWithoutStudentsInput {\n  school: SchoolCreateOneInput\n  startTime: DateTime\n  major: MajorCreateOneInput\n  grade: Int\n  className: String\n}\n\ntype SchoolEduEdge {\n  node: SchoolEdu!\n  cursor: String!\n}\n\nenum SchoolEduOrderByInput {\n  id_ASC\n  id_DESC\n  startTime_ASC\n  startTime_DESC\n  grade_ASC\n  grade_DESC\n  className_ASC\n  className_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype SchoolEduPreviousValues {\n  id: ID!\n  startTime: DateTime\n  grade: Int\n  className: String\n}\n\ninput SchoolEduScalarWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  startTime: DateTime\n  startTime_not: DateTime\n  startTime_in: [DateTime!]\n  startTime_not_in: [DateTime!]\n  startTime_lt: DateTime\n  startTime_lte: DateTime\n  startTime_gt: DateTime\n  startTime_gte: DateTime\n  grade: Int\n  grade_not: Int\n  grade_in: [Int!]\n  grade_not_in: [Int!]\n  grade_lt: Int\n  grade_lte: Int\n  grade_gt: Int\n  grade_gte: Int\n  className: String\n  className_not: String\n  className_in: [String!]\n  className_not_in: [String!]\n  className_lt: String\n  className_lte: String\n  className_gt: String\n  className_gte: String\n  className_contains: String\n  className_not_contains: String\n  className_starts_with: String\n  className_not_starts_with: String\n  className_ends_with: String\n  className_not_ends_with: String\n  AND: [SchoolEduScalarWhereInput!]\n  OR: [SchoolEduScalarWhereInput!]\n  NOT: [SchoolEduScalarWhereInput!]\n}\n\ntype SchoolEduSubscriptionPayload {\n  mutation: MutationType!\n  node: SchoolEdu\n  updatedFields: [String!]\n  previousValues: SchoolEduPreviousValues\n}\n\ninput SchoolEduSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: SchoolEduWhereInput\n  AND: [SchoolEduSubscriptionWhereInput!]\n  OR: [SchoolEduSubscriptionWhereInput!]\n  NOT: [SchoolEduSubscriptionWhereInput!]\n}\n\ninput SchoolEduUpdateDataInput {\n  school: SchoolUpdateOneInput\n  startTime: DateTime\n  major: MajorUpdateOneInput\n  grade: Int\n  className: String\n  students: UserUpdateManyWithoutStudiesInput\n}\n\ninput SchoolEduUpdateInput {\n  school: SchoolUpdateOneInput\n  startTime: DateTime\n  major: MajorUpdateOneInput\n  grade: Int\n  className: String\n  students: UserUpdateManyWithoutStudiesInput\n}\n\ninput SchoolEduUpdateManyDataInput {\n  startTime: DateTime\n  grade: Int\n  className: String\n}\n\ninput SchoolEduUpdateManyMutationInput {\n  startTime: DateTime\n  grade: Int\n  className: String\n}\n\ninput SchoolEduUpdateManyWithoutStudentsInput {\n  create: [SchoolEduCreateWithoutStudentsInput!]\n  delete: [SchoolEduWhereUniqueInput!]\n  connect: [SchoolEduWhereUniqueInput!]\n  disconnect: [SchoolEduWhereUniqueInput!]\n  update: [SchoolEduUpdateWithWhereUniqueWithoutStudentsInput!]\n  upsert: [SchoolEduUpsertWithWhereUniqueWithoutStudentsInput!]\n  deleteMany: [SchoolEduScalarWhereInput!]\n  updateMany: [SchoolEduUpdateManyWithWhereNestedInput!]\n}\n\ninput SchoolEduUpdateManyWithWhereNestedInput {\n  where: SchoolEduScalarWhereInput!\n  data: SchoolEduUpdateManyDataInput!\n}\n\ninput SchoolEduUpdateOneInput {\n  create: SchoolEduCreateInput\n  update: SchoolEduUpdateDataInput\n  upsert: SchoolEduUpsertNestedInput\n  delete: Boolean\n  disconnect: Boolean\n  connect: SchoolEduWhereUniqueInput\n}\n\ninput SchoolEduUpdateWithoutStudentsDataInput {\n  school: SchoolUpdateOneInput\n  startTime: DateTime\n  major: MajorUpdateOneInput\n  grade: Int\n  className: String\n}\n\ninput SchoolEduUpdateWithWhereUniqueWithoutStudentsInput {\n  where: SchoolEduWhereUniqueInput!\n  data: SchoolEduUpdateWithoutStudentsDataInput!\n}\n\ninput SchoolEduUpsertNestedInput {\n  update: SchoolEduUpdateDataInput!\n  create: SchoolEduCreateInput!\n}\n\ninput SchoolEduUpsertWithWhereUniqueWithoutStudentsInput {\n  where: SchoolEduWhereUniqueInput!\n  update: SchoolEduUpdateWithoutStudentsDataInput!\n  create: SchoolEduCreateWithoutStudentsInput!\n}\n\ninput SchoolEduWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  school: SchoolWhereInput\n  startTime: DateTime\n  startTime_not: DateTime\n  startTime_in: [DateTime!]\n  startTime_not_in: [DateTime!]\n  startTime_lt: DateTime\n  startTime_lte: DateTime\n  startTime_gt: DateTime\n  startTime_gte: DateTime\n  major: MajorWhereInput\n  grade: Int\n  grade_not: Int\n  grade_in: [Int!]\n  grade_not_in: [Int!]\n  grade_lt: Int\n  grade_lte: Int\n  grade_gt: Int\n  grade_gte: Int\n  className: String\n  className_not: String\n  className_in: [String!]\n  className_not_in: [String!]\n  className_lt: String\n  className_lte: String\n  className_gt: String\n  className_gte: String\n  className_contains: String\n  className_not_contains: String\n  className_starts_with: String\n  className_not_starts_with: String\n  className_ends_with: String\n  className_not_ends_with: String\n  students_every: UserWhereInput\n  students_some: UserWhereInput\n  students_none: UserWhereInput\n  AND: [SchoolEduWhereInput!]\n  OR: [SchoolEduWhereInput!]\n  NOT: [SchoolEduWhereInput!]\n}\n\ninput SchoolEduWhereUniqueInput {\n  id: ID\n}\n\nenum SchoolOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  kind_ASC\n  kind_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype SchoolPreviousValues {\n  id: ID!\n  name: String\n  kind: Educationkind\n}\n\ninput SchoolScalarWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  kind: Educationkind\n  kind_not: Educationkind\n  kind_in: [Educationkind!]\n  kind_not_in: [Educationkind!]\n  AND: [SchoolScalarWhereInput!]\n  OR: [SchoolScalarWhereInput!]\n  NOT: [SchoolScalarWhereInput!]\n}\n\ntype SchoolSubscriptionPayload {\n  mutation: MutationType!\n  node: School\n  updatedFields: [String!]\n  previousValues: SchoolPreviousValues\n}\n\ninput SchoolSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: SchoolWhereInput\n  AND: [SchoolSubscriptionWhereInput!]\n  OR: [SchoolSubscriptionWhereInput!]\n  NOT: [SchoolSubscriptionWhereInput!]\n}\n\ninput SchoolUpdateDataInput {\n  name: String\n  kind: Educationkind\n  location: LocationUpdateOneWithoutSchoolsInput\n}\n\ninput SchoolUpdateInput {\n  name: String\n  kind: Educationkind\n  location: LocationUpdateOneWithoutSchoolsInput\n}\n\ninput SchoolUpdateManyDataInput {\n  name: String\n  kind: Educationkind\n}\n\ninput SchoolUpdateManyMutationInput {\n  name: String\n  kind: Educationkind\n}\n\ninput SchoolUpdateManyWithoutLocationInput {\n  create: [SchoolCreateWithoutLocationInput!]\n  delete: [SchoolWhereUniqueInput!]\n  connect: [SchoolWhereUniqueInput!]\n  disconnect: [SchoolWhereUniqueInput!]\n  update: [SchoolUpdateWithWhereUniqueWithoutLocationInput!]\n  upsert: [SchoolUpsertWithWhereUniqueWithoutLocationInput!]\n  deleteMany: [SchoolScalarWhereInput!]\n  updateMany: [SchoolUpdateManyWithWhereNestedInput!]\n}\n\ninput SchoolUpdateManyWithWhereNestedInput {\n  where: SchoolScalarWhereInput!\n  data: SchoolUpdateManyDataInput!\n}\n\ninput SchoolUpdateOneInput {\n  create: SchoolCreateInput\n  update: SchoolUpdateDataInput\n  upsert: SchoolUpsertNestedInput\n  delete: Boolean\n  disconnect: Boolean\n  connect: SchoolWhereUniqueInput\n}\n\ninput SchoolUpdateWithoutLocationDataInput {\n  name: String\n  kind: Educationkind\n}\n\ninput SchoolUpdateWithWhereUniqueWithoutLocationInput {\n  where: SchoolWhereUniqueInput!\n  data: SchoolUpdateWithoutLocationDataInput!\n}\n\ninput SchoolUpsertNestedInput {\n  update: SchoolUpdateDataInput!\n  create: SchoolCreateInput!\n}\n\ninput SchoolUpsertWithWhereUniqueWithoutLocationInput {\n  where: SchoolWhereUniqueInput!\n  update: SchoolUpdateWithoutLocationDataInput!\n  create: SchoolCreateWithoutLocationInput!\n}\n\ninput SchoolWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  kind: Educationkind\n  kind_not: Educationkind\n  kind_in: [Educationkind!]\n  kind_not_in: [Educationkind!]\n  location: LocationWhereInput\n  AND: [SchoolWhereInput!]\n  OR: [SchoolWhereInput!]\n  NOT: [SchoolWhereInput!]\n}\n\ninput SchoolWhereUniqueInput {\n  id: ID\n}\n\ntype Station {\n  id: ID!\n  code: String\n  name: String\n}\n\ntype StationConnection {\n  pageInfo: PageInfo!\n  edges: [StationEdge]!\n  aggregate: AggregateStation!\n}\n\ninput StationCreateInput {\n  code: String\n  name: String\n}\n\ninput StationCreateOneInput {\n  create: StationCreateInput\n  connect: StationWhereUniqueInput\n}\n\ntype StationEdge {\n  node: Station!\n  cursor: String!\n}\n\nenum StationOrderByInput {\n  id_ASC\n  id_DESC\n  code_ASC\n  code_DESC\n  name_ASC\n  name_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype StationPreviousValues {\n  id: ID!\n  code: String\n  name: String\n}\n\ntype StationSubscriptionPayload {\n  mutation: MutationType!\n  node: Station\n  updatedFields: [String!]\n  previousValues: StationPreviousValues\n}\n\ninput StationSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: StationWhereInput\n  AND: [StationSubscriptionWhereInput!]\n  OR: [StationSubscriptionWhereInput!]\n  NOT: [StationSubscriptionWhereInput!]\n}\n\ninput StationUpdateDataInput {\n  code: String\n  name: String\n}\n\ninput StationUpdateInput {\n  code: String\n  name: String\n}\n\ninput StationUpdateManyMutationInput {\n  code: String\n  name: String\n}\n\ninput StationUpdateOneInput {\n  create: StationCreateInput\n  update: StationUpdateDataInput\n  upsert: StationUpsertNestedInput\n  delete: Boolean\n  disconnect: Boolean\n  connect: StationWhereUniqueInput\n}\n\ninput StationUpsertNestedInput {\n  update: StationUpdateDataInput!\n  create: StationCreateInput!\n}\n\ninput StationWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  code: String\n  code_not: String\n  code_in: [String!]\n  code_not_in: [String!]\n  code_lt: String\n  code_lte: String\n  code_gt: String\n  code_gte: String\n  code_contains: String\n  code_not_contains: String\n  code_starts_with: String\n  code_not_starts_with: String\n  code_ends_with: String\n  code_not_ends_with: String\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  AND: [StationWhereInput!]\n  OR: [StationWhereInput!]\n  NOT: [StationWhereInput!]\n}\n\ninput StationWhereUniqueInput {\n  id: ID\n  code: String\n  name: String\n}\n\ntype Street {\n  id: ID!\n  code: String!\n  name: String!\n  Area: Area!\n  villages(where: VillageWhereInput, orderBy: VillageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Village!]\n}\n\ntype StreetConnection {\n  pageInfo: PageInfo!\n  edges: [StreetEdge]!\n  aggregate: AggregateStreet!\n}\n\ninput StreetCreateInput {\n  code: String!\n  name: String!\n  Area: AreaCreateOneWithoutTownsInput!\n  villages: VillageCreateManyWithoutStreetInput\n}\n\ninput StreetCreateManyWithoutAreaInput {\n  create: [StreetCreateWithoutAreaInput!]\n  connect: [StreetWhereUniqueInput!]\n}\n\ninput StreetCreateOneInput {\n  create: StreetCreateInput\n  connect: StreetWhereUniqueInput\n}\n\ninput StreetCreateOneWithoutVillagesInput {\n  create: StreetCreateWithoutVillagesInput\n  connect: StreetWhereUniqueInput\n}\n\ninput StreetCreateWithoutAreaInput {\n  code: String!\n  name: String!\n  villages: VillageCreateManyWithoutStreetInput\n}\n\ninput StreetCreateWithoutVillagesInput {\n  code: String!\n  name: String!\n  Area: AreaCreateOneWithoutTownsInput!\n}\n\ntype StreetEdge {\n  node: Street!\n  cursor: String!\n}\n\nenum StreetOrderByInput {\n  id_ASC\n  id_DESC\n  code_ASC\n  code_DESC\n  name_ASC\n  name_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype StreetPreviousValues {\n  id: ID!\n  code: String!\n  name: String!\n}\n\ninput StreetScalarWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  code: String\n  code_not: String\n  code_in: [String!]\n  code_not_in: [String!]\n  code_lt: String\n  code_lte: String\n  code_gt: String\n  code_gte: String\n  code_contains: String\n  code_not_contains: String\n  code_starts_with: String\n  code_not_starts_with: String\n  code_ends_with: String\n  code_not_ends_with: String\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  AND: [StreetScalarWhereInput!]\n  OR: [StreetScalarWhereInput!]\n  NOT: [StreetScalarWhereInput!]\n}\n\ntype StreetSubscriptionPayload {\n  mutation: MutationType!\n  node: Street\n  updatedFields: [String!]\n  previousValues: StreetPreviousValues\n}\n\ninput StreetSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: StreetWhereInput\n  AND: [StreetSubscriptionWhereInput!]\n  OR: [StreetSubscriptionWhereInput!]\n  NOT: [StreetSubscriptionWhereInput!]\n}\n\ninput StreetUpdateDataInput {\n  code: String\n  name: String\n  Area: AreaUpdateOneRequiredWithoutTownsInput\n  villages: VillageUpdateManyWithoutStreetInput\n}\n\ninput StreetUpdateInput {\n  code: String\n  name: String\n  Area: AreaUpdateOneRequiredWithoutTownsInput\n  villages: VillageUpdateManyWithoutStreetInput\n}\n\ninput StreetUpdateManyDataInput {\n  code: String\n  name: String\n}\n\ninput StreetUpdateManyMutationInput {\n  code: String\n  name: String\n}\n\ninput StreetUpdateManyWithoutAreaInput {\n  create: [StreetCreateWithoutAreaInput!]\n  delete: [StreetWhereUniqueInput!]\n  connect: [StreetWhereUniqueInput!]\n  disconnect: [StreetWhereUniqueInput!]\n  update: [StreetUpdateWithWhereUniqueWithoutAreaInput!]\n  upsert: [StreetUpsertWithWhereUniqueWithoutAreaInput!]\n  deleteMany: [StreetScalarWhereInput!]\n  updateMany: [StreetUpdateManyWithWhereNestedInput!]\n}\n\ninput StreetUpdateManyWithWhereNestedInput {\n  where: StreetScalarWhereInput!\n  data: StreetUpdateManyDataInput!\n}\n\ninput StreetUpdateOneInput {\n  create: StreetCreateInput\n  update: StreetUpdateDataInput\n  upsert: StreetUpsertNestedInput\n  delete: Boolean\n  disconnect: Boolean\n  connect: StreetWhereUniqueInput\n}\n\ninput StreetUpdateOneRequiredWithoutVillagesInput {\n  create: StreetCreateWithoutVillagesInput\n  update: StreetUpdateWithoutVillagesDataInput\n  upsert: StreetUpsertWithoutVillagesInput\n  connect: StreetWhereUniqueInput\n}\n\ninput StreetUpdateWithoutAreaDataInput {\n  code: String\n  name: String\n  villages: VillageUpdateManyWithoutStreetInput\n}\n\ninput StreetUpdateWithoutVillagesDataInput {\n  code: String\n  name: String\n  Area: AreaUpdateOneRequiredWithoutTownsInput\n}\n\ninput StreetUpdateWithWhereUniqueWithoutAreaInput {\n  where: StreetWhereUniqueInput!\n  data: StreetUpdateWithoutAreaDataInput!\n}\n\ninput StreetUpsertNestedInput {\n  update: StreetUpdateDataInput!\n  create: StreetCreateInput!\n}\n\ninput StreetUpsertWithoutVillagesInput {\n  update: StreetUpdateWithoutVillagesDataInput!\n  create: StreetCreateWithoutVillagesInput!\n}\n\ninput StreetUpsertWithWhereUniqueWithoutAreaInput {\n  where: StreetWhereUniqueInput!\n  update: StreetUpdateWithoutAreaDataInput!\n  create: StreetCreateWithoutAreaInput!\n}\n\ninput StreetWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  code: String\n  code_not: String\n  code_in: [String!]\n  code_not_in: [String!]\n  code_lt: String\n  code_lte: String\n  code_gt: String\n  code_gte: String\n  code_contains: String\n  code_not_contains: String\n  code_starts_with: String\n  code_not_starts_with: String\n  code_ends_with: String\n  code_not_ends_with: String\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  Area: AreaWhereInput\n  villages_every: VillageWhereInput\n  villages_some: VillageWhereInput\n  villages_none: VillageWhereInput\n  AND: [StreetWhereInput!]\n  OR: [StreetWhereInput!]\n  NOT: [StreetWhereInput!]\n}\n\ninput StreetWhereUniqueInput {\n  id: ID\n  code: String\n}\n\ntype Subscription {\n  advertisement(where: AdvertisementSubscriptionWhereInput): AdvertisementSubscriptionPayload\n  area(where: AreaSubscriptionWhereInput): AreaSubscriptionPayload\n  bootCount(where: BootCountSubscriptionWhereInput): BootCountSubscriptionPayload\n  city(where: CitySubscriptionWhereInput): CitySubscriptionPayload\n  classGroup(where: ClassGroupSubscriptionWhereInput): ClassGroupSubscriptionPayload\n  classMate(where: ClassMateSubscriptionWhereInput): ClassMateSubscriptionPayload\n  colleague(where: ColleagueSubscriptionWhereInput): ColleagueSubscriptionPayload\n  collegeEntranceExam(where: CollegeEntranceExamSubscriptionWhereInput): CollegeEntranceExamSubscriptionPayload\n  company(where: CompanySubscriptionWhereInput): CompanySubscriptionPayload\n  family(where: FamilySubscriptionWhereInput): FamilySubscriptionPayload\n  familyGroup(where: FamilyGroupSubscriptionWhereInput): FamilyGroupSubscriptionPayload\n  findPassWord(where: FindPassWordSubscriptionWhereInput): FindPassWordSubscriptionPayload\n  group(where: GroupSubscriptionWhereInput): GroupSubscriptionPayload\n  groupMessage(where: GroupMessageSubscriptionWhereInput): GroupMessageSubscriptionPayload\n  location(where: LocationSubscriptionWhereInput): LocationSubscriptionPayload\n  locationGroup(where: LocationGroupSubscriptionWhereInput): LocationGroupSubscriptionPayload\n  logs(where: LogsSubscriptionWhereInput): LogsSubscriptionPayload\n  major(where: MajorSubscriptionWhereInput): MajorSubscriptionPayload\n  message(where: MessageSubscriptionWhereInput): MessageSubscriptionPayload\n  oldColleague(where: OldColleagueSubscriptionWhereInput): OldColleagueSubscriptionPayload\n  person(where: PersonSubscriptionWhereInput): PersonSubscriptionPayload\n  photo(where: PhotoSubscriptionWhereInput): PhotoSubscriptionPayload\n  post(where: PostSubscriptionWhereInput): PostSubscriptionPayload\n  province(where: ProvinceSubscriptionWhereInput): ProvinceSubscriptionPayload\n  regStatus(where: RegStatusSubscriptionWhereInput): RegStatusSubscriptionPayload\n  registerCount(where: RegisterCountSubscriptionWhereInput): RegisterCountSubscriptionPayload\n  school(where: SchoolSubscriptionWhereInput): SchoolSubscriptionPayload\n  schoolEdu(where: SchoolEduSubscriptionWhereInput): SchoolEduSubscriptionPayload\n  station(where: StationSubscriptionWhereInput): StationSubscriptionPayload\n  street(where: StreetSubscriptionWhereInput): StreetSubscriptionPayload\n  university(where: UniversitySubscriptionWhereInput): UniversitySubscriptionPayload\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n  village(where: VillageSubscriptionWhereInput): VillageSubscriptionPayload\n  work(where: WorkSubscriptionWhereInput): WorkSubscriptionPayload\n  workGroup(where: WorkGroupSubscriptionWhereInput): WorkGroupSubscriptionPayload\n}\n\ntype University {\n  id: ID!\n  name: String!\n  education: Educationkind!\n  department: String\n  location: String\n  desc: String\n}\n\ntype UniversityConnection {\n  pageInfo: PageInfo!\n  edges: [UniversityEdge]!\n  aggregate: AggregateUniversity!\n}\n\ninput UniversityCreateInput {\n  name: String!\n  education: Educationkind!\n  department: String\n  location: String\n  desc: String\n}\n\ninput UniversityCreateManyInput {\n  create: [UniversityCreateInput!]\n  connect: [UniversityWhereUniqueInput!]\n}\n\ninput UniversityCreateOneInput {\n  create: UniversityCreateInput\n  connect: UniversityWhereUniqueInput\n}\n\ntype UniversityEdge {\n  node: University!\n  cursor: String!\n}\n\nenum UniversityOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  education_ASC\n  education_DESC\n  department_ASC\n  department_DESC\n  location_ASC\n  location_DESC\n  desc_ASC\n  desc_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype UniversityPreviousValues {\n  id: ID!\n  name: String!\n  education: Educationkind!\n  department: String\n  location: String\n  desc: String\n}\n\ninput UniversityScalarWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  education: Educationkind\n  education_not: Educationkind\n  education_in: [Educationkind!]\n  education_not_in: [Educationkind!]\n  department: String\n  department_not: String\n  department_in: [String!]\n  department_not_in: [String!]\n  department_lt: String\n  department_lte: String\n  department_gt: String\n  department_gte: String\n  department_contains: String\n  department_not_contains: String\n  department_starts_with: String\n  department_not_starts_with: String\n  department_ends_with: String\n  department_not_ends_with: String\n  location: String\n  location_not: String\n  location_in: [String!]\n  location_not_in: [String!]\n  location_lt: String\n  location_lte: String\n  location_gt: String\n  location_gte: String\n  location_contains: String\n  location_not_contains: String\n  location_starts_with: String\n  location_not_starts_with: String\n  location_ends_with: String\n  location_not_ends_with: String\n  desc: String\n  desc_not: String\n  desc_in: [String!]\n  desc_not_in: [String!]\n  desc_lt: String\n  desc_lte: String\n  desc_gt: String\n  desc_gte: String\n  desc_contains: String\n  desc_not_contains: String\n  desc_starts_with: String\n  desc_not_starts_with: String\n  desc_ends_with: String\n  desc_not_ends_with: String\n  AND: [UniversityScalarWhereInput!]\n  OR: [UniversityScalarWhereInput!]\n  NOT: [UniversityScalarWhereInput!]\n}\n\ntype UniversitySubscriptionPayload {\n  mutation: MutationType!\n  node: University\n  updatedFields: [String!]\n  previousValues: UniversityPreviousValues\n}\n\ninput UniversitySubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: UniversityWhereInput\n  AND: [UniversitySubscriptionWhereInput!]\n  OR: [UniversitySubscriptionWhereInput!]\n  NOT: [UniversitySubscriptionWhereInput!]\n}\n\ninput UniversityUpdateDataInput {\n  name: String\n  education: Educationkind\n  department: String\n  location: String\n  desc: String\n}\n\ninput UniversityUpdateInput {\n  name: String\n  education: Educationkind\n  department: String\n  location: String\n  desc: String\n}\n\ninput UniversityUpdateManyDataInput {\n  name: String\n  education: Educationkind\n  department: String\n  location: String\n  desc: String\n}\n\ninput UniversityUpdateManyInput {\n  create: [UniversityCreateInput!]\n  update: [UniversityUpdateWithWhereUniqueNestedInput!]\n  upsert: [UniversityUpsertWithWhereUniqueNestedInput!]\n  delete: [UniversityWhereUniqueInput!]\n  connect: [UniversityWhereUniqueInput!]\n  disconnect: [UniversityWhereUniqueInput!]\n  deleteMany: [UniversityScalarWhereInput!]\n  updateMany: [UniversityUpdateManyWithWhereNestedInput!]\n}\n\ninput UniversityUpdateManyMutationInput {\n  name: String\n  education: Educationkind\n  department: String\n  location: String\n  desc: String\n}\n\ninput UniversityUpdateManyWithWhereNestedInput {\n  where: UniversityScalarWhereInput!\n  data: UniversityUpdateManyDataInput!\n}\n\ninput UniversityUpdateOneInput {\n  create: UniversityCreateInput\n  update: UniversityUpdateDataInput\n  upsert: UniversityUpsertNestedInput\n  delete: Boolean\n  disconnect: Boolean\n  connect: UniversityWhereUniqueInput\n}\n\ninput UniversityUpdateWithWhereUniqueNestedInput {\n  where: UniversityWhereUniqueInput!\n  data: UniversityUpdateDataInput!\n}\n\ninput UniversityUpsertNestedInput {\n  update: UniversityUpdateDataInput!\n  create: UniversityCreateInput!\n}\n\ninput UniversityUpsertWithWhereUniqueNestedInput {\n  where: UniversityWhereUniqueInput!\n  update: UniversityUpdateDataInput!\n  create: UniversityCreateInput!\n}\n\ninput UniversityWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  education: Educationkind\n  education_not: Educationkind\n  education_in: [Educationkind!]\n  education_not_in: [Educationkind!]\n  department: String\n  department_not: String\n  department_in: [String!]\n  department_not_in: [String!]\n  department_lt: String\n  department_lte: String\n  department_gt: String\n  department_gte: String\n  department_contains: String\n  department_not_contains: String\n  department_starts_with: String\n  department_not_starts_with: String\n  department_ends_with: String\n  department_not_ends_with: String\n  location: String\n  location_not: String\n  location_in: [String!]\n  location_not_in: [String!]\n  location_lt: String\n  location_lte: String\n  location_gt: String\n  location_gte: String\n  location_contains: String\n  location_not_contains: String\n  location_starts_with: String\n  location_not_starts_with: String\n  location_ends_with: String\n  location_not_ends_with: String\n  desc: String\n  desc_not: String\n  desc_in: [String!]\n  desc_not_in: [String!]\n  desc_lt: String\n  desc_lte: String\n  desc_gt: String\n  desc_gte: String\n  desc_contains: String\n  desc_not_contains: String\n  desc_starts_with: String\n  desc_not_starts_with: String\n  desc_ends_with: String\n  desc_not_ends_with: String\n  AND: [UniversityWhereInput!]\n  OR: [UniversityWhereInput!]\n  NOT: [UniversityWhereInput!]\n}\n\ninput UniversityWhereUniqueInput {\n  id: ID\n  name: String\n}\n\ntype User {\n  id: ID!\n  username: String!\n  password: String!\n  name: String\n  gender: String\n  avatar: Photo\n  birthdaycalendar: String\n  birthday: DateTime\n  birthplace: Location\n  residence: Location\n  uid: String!\n  token: String!\n  posts(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Post!]\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  regStatus: RegStatus\n  regTimes: Int\n  maxRegTimes: Int\n  families(where: FamilyWhereInput, orderBy: FamilyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Family!]\n  studies(where: SchoolEduWhereInput, orderBy: SchoolEduOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SchoolEdu!]\n  works(where: WorkWhereInput, orderBy: WorkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Work!]\n  exam: CollegeEntranceExam\n  sentMessages(where: MessageWhereInput, orderBy: MessageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Message!]\n  receiveMessages(where: MessageWhereInput, orderBy: MessageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Message!]\n  groupMessages(where: GroupMessageWhereInput, orderBy: GroupMessageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [GroupMessage!]\n  groups(where: GroupWhereInput, orderBy: GroupOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Group!]\n  friends(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]\n  familyGroup: FamilyGroup\n  creater: FamilyGroup\n  classMate(where: ClassMateWhereInput, orderBy: ClassMateOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ClassMate!]\n  workGroup: WorkGroup\n  colleagues(where: ColleagueWhereInput, orderBy: ColleagueOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Colleague!]\n  fromOldColleagues(where: OldColleagueWhereInput, orderBy: OldColleagueOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [OldColleague!]\n  toOldColleagues(where: OldColleagueWhereInput, orderBy: OldColleagueOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [OldColleague!]\n  locationGroups(where: LocationGroupWhereInput, orderBy: LocationGroupOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [LocationGroup!]\n  forgetPassword: FindPassWord\n  remmemberPassword: FindPassWord\n}\n\ntype UserConnection {\n  pageInfo: PageInfo!\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  username: String!\n  password: String!\n  name: String\n  gender: String\n  avatar: PhotoCreateOneWithoutUserInput\n  birthdaycalendar: String\n  birthday: DateTime\n  birthplace: LocationCreateOneWithoutBornsInput\n  residence: LocationCreateOneWithoutLivesInput\n  uid: String!\n  token: String!\n  posts: PostCreateManyWithoutAuthorInput\n  regStatus: RegStatusCreateOneWithoutApplicantsInput\n  regTimes: Int\n  maxRegTimes: Int\n  families: FamilyCreateManyWithoutFromInput\n  studies: SchoolEduCreateManyWithoutStudentsInput\n  works: WorkCreateManyWithoutWorkerInput\n  exam: CollegeEntranceExamCreateOneWithoutStudentInput\n  sentMessages: MessageCreateManyWithoutFromInput\n  receiveMessages: MessageCreateManyWithoutToInput\n  groupMessages: GroupMessageCreateManyWithoutFromInput\n  groups: GroupCreateManyWithoutUsersInput\n  friends: UserCreateManyInput\n  familyGroup: FamilyGroupCreateOneWithoutUsersInput\n  creater: FamilyGroupCreateOneWithoutCreaterInput\n  classMate: ClassMateCreateManyWithoutStudentInput\n  workGroup: WorkGroupCreateOneInput\n  colleagues: ColleagueCreateManyWithoutWorkerInput\n  fromOldColleagues: OldColleagueCreateManyWithoutFromInput\n  toOldColleagues: OldColleagueCreateManyWithoutToInput\n  locationGroups: LocationGroupCreateManyWithoutUsersInput\n  forgetPassword: FindPassWordCreateOneWithoutForgetterInput\n  remmemberPassword: FindPassWordCreateOneWithoutRemmemberInput\n}\n\ninput UserCreateManyInput {\n  create: [UserCreateInput!]\n  connect: [UserWhereUniqueInput!]\n}\n\ninput UserCreateManyWithoutBirthplaceInput {\n  create: [UserCreateWithoutBirthplaceInput!]\n  connect: [UserWhereUniqueInput!]\n}\n\ninput UserCreateManyWithoutFamilyGroupInput {\n  create: [UserCreateWithoutFamilyGroupInput!]\n  connect: [UserWhereUniqueInput!]\n}\n\ninput UserCreateManyWithoutGroupsInput {\n  create: [UserCreateWithoutGroupsInput!]\n  connect: [UserWhereUniqueInput!]\n}\n\ninput UserCreateManyWithoutLocationGroupsInput {\n  create: [UserCreateWithoutLocationGroupsInput!]\n  connect: [UserWhereUniqueInput!]\n}\n\ninput UserCreateManyWithoutRegStatusInput {\n  create: [UserCreateWithoutRegStatusInput!]\n  connect: [UserWhereUniqueInput!]\n}\n\ninput UserCreateManyWithoutRemmemberPasswordInput {\n  create: [UserCreateWithoutRemmemberPasswordInput!]\n  connect: [UserWhereUniqueInput!]\n}\n\ninput UserCreateManyWithoutResidenceInput {\n  create: [UserCreateWithoutResidenceInput!]\n  connect: [UserWhereUniqueInput!]\n}\n\ninput UserCreateManyWithoutStudiesInput {\n  create: [UserCreateWithoutStudiesInput!]\n  connect: [UserWhereUniqueInput!]\n}\n\ninput UserCreateOneInput {\n  create: UserCreateInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateOneWithoutAvatarInput {\n  create: UserCreateWithoutAvatarInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateOneWithoutClassMateInput {\n  create: UserCreateWithoutClassMateInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateOneWithoutColleaguesInput {\n  create: UserCreateWithoutColleaguesInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateOneWithoutCreaterInput {\n  create: UserCreateWithoutCreaterInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateOneWithoutExamInput {\n  create: UserCreateWithoutExamInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateOneWithoutFamiliesInput {\n  create: UserCreateWithoutFamiliesInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateOneWithoutForgetPasswordInput {\n  create: UserCreateWithoutForgetPasswordInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateOneWithoutFromOldColleaguesInput {\n  create: UserCreateWithoutFromOldColleaguesInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateOneWithoutGroupMessagesInput {\n  create: UserCreateWithoutGroupMessagesInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateOneWithoutPostsInput {\n  create: UserCreateWithoutPostsInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateOneWithoutReceiveMessagesInput {\n  create: UserCreateWithoutReceiveMessagesInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateOneWithoutSentMessagesInput {\n  create: UserCreateWithoutSentMessagesInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateOneWithoutToOldColleaguesInput {\n  create: UserCreateWithoutToOldColleaguesInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateOneWithoutWorksInput {\n  create: UserCreateWithoutWorksInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateWithoutAvatarInput {\n  username: String!\n  password: String!\n  name: String\n  gender: String\n  birthdaycalendar: String\n  birthday: DateTime\n  birthplace: LocationCreateOneWithoutBornsInput\n  residence: LocationCreateOneWithoutLivesInput\n  uid: String!\n  token: String!\n  posts: PostCreateManyWithoutAuthorInput\n  regStatus: RegStatusCreateOneWithoutApplicantsInput\n  regTimes: Int\n  maxRegTimes: Int\n  families: FamilyCreateManyWithoutFromInput\n  studies: SchoolEduCreateManyWithoutStudentsInput\n  works: WorkCreateManyWithoutWorkerInput\n  exam: CollegeEntranceExamCreateOneWithoutStudentInput\n  sentMessages: MessageCreateManyWithoutFromInput\n  receiveMessages: MessageCreateManyWithoutToInput\n  groupMessages: GroupMessageCreateManyWithoutFromInput\n  groups: GroupCreateManyWithoutUsersInput\n  friends: UserCreateManyInput\n  familyGroup: FamilyGroupCreateOneWithoutUsersInput\n  creater: FamilyGroupCreateOneWithoutCreaterInput\n  classMate: ClassMateCreateManyWithoutStudentInput\n  workGroup: WorkGroupCreateOneInput\n  colleagues: ColleagueCreateManyWithoutWorkerInput\n  fromOldColleagues: OldColleagueCreateManyWithoutFromInput\n  toOldColleagues: OldColleagueCreateManyWithoutToInput\n  locationGroups: LocationGroupCreateManyWithoutUsersInput\n  forgetPassword: FindPassWordCreateOneWithoutForgetterInput\n  remmemberPassword: FindPassWordCreateOneWithoutRemmemberInput\n}\n\ninput UserCreateWithoutBirthplaceInput {\n  username: String!\n  password: String!\n  name: String\n  gender: String\n  avatar: PhotoCreateOneWithoutUserInput\n  birthdaycalendar: String\n  birthday: DateTime\n  residence: LocationCreateOneWithoutLivesInput\n  uid: String!\n  token: String!\n  posts: PostCreateManyWithoutAuthorInput\n  regStatus: RegStatusCreateOneWithoutApplicantsInput\n  regTimes: Int\n  maxRegTimes: Int\n  families: FamilyCreateManyWithoutFromInput\n  studies: SchoolEduCreateManyWithoutStudentsInput\n  works: WorkCreateManyWithoutWorkerInput\n  exam: CollegeEntranceExamCreateOneWithoutStudentInput\n  sentMessages: MessageCreateManyWithoutFromInput\n  receiveMessages: MessageCreateManyWithoutToInput\n  groupMessages: GroupMessageCreateManyWithoutFromInput\n  groups: GroupCreateManyWithoutUsersInput\n  friends: UserCreateManyInput\n  familyGroup: FamilyGroupCreateOneWithoutUsersInput\n  creater: FamilyGroupCreateOneWithoutCreaterInput\n  classMate: ClassMateCreateManyWithoutStudentInput\n  workGroup: WorkGroupCreateOneInput\n  colleagues: ColleagueCreateManyWithoutWorkerInput\n  fromOldColleagues: OldColleagueCreateManyWithoutFromInput\n  toOldColleagues: OldColleagueCreateManyWithoutToInput\n  locationGroups: LocationGroupCreateManyWithoutUsersInput\n  forgetPassword: FindPassWordCreateOneWithoutForgetterInput\n  remmemberPassword: FindPassWordCreateOneWithoutRemmemberInput\n}\n\ninput UserCreateWithoutClassMateInput {\n  username: String!\n  password: String!\n  name: String\n  gender: String\n  avatar: PhotoCreateOneWithoutUserInput\n  birthdaycalendar: String\n  birthday: DateTime\n  birthplace: LocationCreateOneWithoutBornsInput\n  residence: LocationCreateOneWithoutLivesInput\n  uid: String!\n  token: String!\n  posts: PostCreateManyWithoutAuthorInput\n  regStatus: RegStatusCreateOneWithoutApplicantsInput\n  regTimes: Int\n  maxRegTimes: Int\n  families: FamilyCreateManyWithoutFromInput\n  studies: SchoolEduCreateManyWithoutStudentsInput\n  works: WorkCreateManyWithoutWorkerInput\n  exam: CollegeEntranceExamCreateOneWithoutStudentInput\n  sentMessages: MessageCreateManyWithoutFromInput\n  receiveMessages: MessageCreateManyWithoutToInput\n  groupMessages: GroupMessageCreateManyWithoutFromInput\n  groups: GroupCreateManyWithoutUsersInput\n  friends: UserCreateManyInput\n  familyGroup: FamilyGroupCreateOneWithoutUsersInput\n  creater: FamilyGroupCreateOneWithoutCreaterInput\n  workGroup: WorkGroupCreateOneInput\n  colleagues: ColleagueCreateManyWithoutWorkerInput\n  fromOldColleagues: OldColleagueCreateManyWithoutFromInput\n  toOldColleagues: OldColleagueCreateManyWithoutToInput\n  locationGroups: LocationGroupCreateManyWithoutUsersInput\n  forgetPassword: FindPassWordCreateOneWithoutForgetterInput\n  remmemberPassword: FindPassWordCreateOneWithoutRemmemberInput\n}\n\ninput UserCreateWithoutColleaguesInput {\n  username: String!\n  password: String!\n  name: String\n  gender: String\n  avatar: PhotoCreateOneWithoutUserInput\n  birthdaycalendar: String\n  birthday: DateTime\n  birthplace: LocationCreateOneWithoutBornsInput\n  residence: LocationCreateOneWithoutLivesInput\n  uid: String!\n  token: String!\n  posts: PostCreateManyWithoutAuthorInput\n  regStatus: RegStatusCreateOneWithoutApplicantsInput\n  regTimes: Int\n  maxRegTimes: Int\n  families: FamilyCreateManyWithoutFromInput\n  studies: SchoolEduCreateManyWithoutStudentsInput\n  works: WorkCreateManyWithoutWorkerInput\n  exam: CollegeEntranceExamCreateOneWithoutStudentInput\n  sentMessages: MessageCreateManyWithoutFromInput\n  receiveMessages: MessageCreateManyWithoutToInput\n  groupMessages: GroupMessageCreateManyWithoutFromInput\n  groups: GroupCreateManyWithoutUsersInput\n  friends: UserCreateManyInput\n  familyGroup: FamilyGroupCreateOneWithoutUsersInput\n  creater: FamilyGroupCreateOneWithoutCreaterInput\n  classMate: ClassMateCreateManyWithoutStudentInput\n  workGroup: WorkGroupCreateOneInput\n  fromOldColleagues: OldColleagueCreateManyWithoutFromInput\n  toOldColleagues: OldColleagueCreateManyWithoutToInput\n  locationGroups: LocationGroupCreateManyWithoutUsersInput\n  forgetPassword: FindPassWordCreateOneWithoutForgetterInput\n  remmemberPassword: FindPassWordCreateOneWithoutRemmemberInput\n}\n\ninput UserCreateWithoutCreaterInput {\n  username: String!\n  password: String!\n  name: String\n  gender: String\n  avatar: PhotoCreateOneWithoutUserInput\n  birthdaycalendar: String\n  birthday: DateTime\n  birthplace: LocationCreateOneWithoutBornsInput\n  residence: LocationCreateOneWithoutLivesInput\n  uid: String!\n  token: String!\n  posts: PostCreateManyWithoutAuthorInput\n  regStatus: RegStatusCreateOneWithoutApplicantsInput\n  regTimes: Int\n  maxRegTimes: Int\n  families: FamilyCreateManyWithoutFromInput\n  studies: SchoolEduCreateManyWithoutStudentsInput\n  works: WorkCreateManyWithoutWorkerInput\n  exam: CollegeEntranceExamCreateOneWithoutStudentInput\n  sentMessages: MessageCreateManyWithoutFromInput\n  receiveMessages: MessageCreateManyWithoutToInput\n  groupMessages: GroupMessageCreateManyWithoutFromInput\n  groups: GroupCreateManyWithoutUsersInput\n  friends: UserCreateManyInput\n  familyGroup: FamilyGroupCreateOneWithoutUsersInput\n  classMate: ClassMateCreateManyWithoutStudentInput\n  workGroup: WorkGroupCreateOneInput\n  colleagues: ColleagueCreateManyWithoutWorkerInput\n  fromOldColleagues: OldColleagueCreateManyWithoutFromInput\n  toOldColleagues: OldColleagueCreateManyWithoutToInput\n  locationGroups: LocationGroupCreateManyWithoutUsersInput\n  forgetPassword: FindPassWordCreateOneWithoutForgetterInput\n  remmemberPassword: FindPassWordCreateOneWithoutRemmemberInput\n}\n\ninput UserCreateWithoutExamInput {\n  username: String!\n  password: String!\n  name: String\n  gender: String\n  avatar: PhotoCreateOneWithoutUserInput\n  birthdaycalendar: String\n  birthday: DateTime\n  birthplace: LocationCreateOneWithoutBornsInput\n  residence: LocationCreateOneWithoutLivesInput\n  uid: String!\n  token: String!\n  posts: PostCreateManyWithoutAuthorInput\n  regStatus: RegStatusCreateOneWithoutApplicantsInput\n  regTimes: Int\n  maxRegTimes: Int\n  families: FamilyCreateManyWithoutFromInput\n  studies: SchoolEduCreateManyWithoutStudentsInput\n  works: WorkCreateManyWithoutWorkerInput\n  sentMessages: MessageCreateManyWithoutFromInput\n  receiveMessages: MessageCreateManyWithoutToInput\n  groupMessages: GroupMessageCreateManyWithoutFromInput\n  groups: GroupCreateManyWithoutUsersInput\n  friends: UserCreateManyInput\n  familyGroup: FamilyGroupCreateOneWithoutUsersInput\n  creater: FamilyGroupCreateOneWithoutCreaterInput\n  classMate: ClassMateCreateManyWithoutStudentInput\n  workGroup: WorkGroupCreateOneInput\n  colleagues: ColleagueCreateManyWithoutWorkerInput\n  fromOldColleagues: OldColleagueCreateManyWithoutFromInput\n  toOldColleagues: OldColleagueCreateManyWithoutToInput\n  locationGroups: LocationGroupCreateManyWithoutUsersInput\n  forgetPassword: FindPassWordCreateOneWithoutForgetterInput\n  remmemberPassword: FindPassWordCreateOneWithoutRemmemberInput\n}\n\ninput UserCreateWithoutFamiliesInput {\n  username: String!\n  password: String!\n  name: String\n  gender: String\n  avatar: PhotoCreateOneWithoutUserInput\n  birthdaycalendar: String\n  birthday: DateTime\n  birthplace: LocationCreateOneWithoutBornsInput\n  residence: LocationCreateOneWithoutLivesInput\n  uid: String!\n  token: String!\n  posts: PostCreateManyWithoutAuthorInput\n  regStatus: RegStatusCreateOneWithoutApplicantsInput\n  regTimes: Int\n  maxRegTimes: Int\n  studies: SchoolEduCreateManyWithoutStudentsInput\n  works: WorkCreateManyWithoutWorkerInput\n  exam: CollegeEntranceExamCreateOneWithoutStudentInput\n  sentMessages: MessageCreateManyWithoutFromInput\n  receiveMessages: MessageCreateManyWithoutToInput\n  groupMessages: GroupMessageCreateManyWithoutFromInput\n  groups: GroupCreateManyWithoutUsersInput\n  friends: UserCreateManyInput\n  familyGroup: FamilyGroupCreateOneWithoutUsersInput\n  creater: FamilyGroupCreateOneWithoutCreaterInput\n  classMate: ClassMateCreateManyWithoutStudentInput\n  workGroup: WorkGroupCreateOneInput\n  colleagues: ColleagueCreateManyWithoutWorkerInput\n  fromOldColleagues: OldColleagueCreateManyWithoutFromInput\n  toOldColleagues: OldColleagueCreateManyWithoutToInput\n  locationGroups: LocationGroupCreateManyWithoutUsersInput\n  forgetPassword: FindPassWordCreateOneWithoutForgetterInput\n  remmemberPassword: FindPassWordCreateOneWithoutRemmemberInput\n}\n\ninput UserCreateWithoutFamilyGroupInput {\n  username: String!\n  password: String!\n  name: String\n  gender: String\n  avatar: PhotoCreateOneWithoutUserInput\n  birthdaycalendar: String\n  birthday: DateTime\n  birthplace: LocationCreateOneWithoutBornsInput\n  residence: LocationCreateOneWithoutLivesInput\n  uid: String!\n  token: String!\n  posts: PostCreateManyWithoutAuthorInput\n  regStatus: RegStatusCreateOneWithoutApplicantsInput\n  regTimes: Int\n  maxRegTimes: Int\n  families: FamilyCreateManyWithoutFromInput\n  studies: SchoolEduCreateManyWithoutStudentsInput\n  works: WorkCreateManyWithoutWorkerInput\n  exam: CollegeEntranceExamCreateOneWithoutStudentInput\n  sentMessages: MessageCreateManyWithoutFromInput\n  receiveMessages: MessageCreateManyWithoutToInput\n  groupMessages: GroupMessageCreateManyWithoutFromInput\n  groups: GroupCreateManyWithoutUsersInput\n  friends: UserCreateManyInput\n  creater: FamilyGroupCreateOneWithoutCreaterInput\n  classMate: ClassMateCreateManyWithoutStudentInput\n  workGroup: WorkGroupCreateOneInput\n  colleagues: ColleagueCreateManyWithoutWorkerInput\n  fromOldColleagues: OldColleagueCreateManyWithoutFromInput\n  toOldColleagues: OldColleagueCreateManyWithoutToInput\n  locationGroups: LocationGroupCreateManyWithoutUsersInput\n  forgetPassword: FindPassWordCreateOneWithoutForgetterInput\n  remmemberPassword: FindPassWordCreateOneWithoutRemmemberInput\n}\n\ninput UserCreateWithoutForgetPasswordInput {\n  username: String!\n  password: String!\n  name: String\n  gender: String\n  avatar: PhotoCreateOneWithoutUserInput\n  birthdaycalendar: String\n  birthday: DateTime\n  birthplace: LocationCreateOneWithoutBornsInput\n  residence: LocationCreateOneWithoutLivesInput\n  uid: String!\n  token: String!\n  posts: PostCreateManyWithoutAuthorInput\n  regStatus: RegStatusCreateOneWithoutApplicantsInput\n  regTimes: Int\n  maxRegTimes: Int\n  families: FamilyCreateManyWithoutFromInput\n  studies: SchoolEduCreateManyWithoutStudentsInput\n  works: WorkCreateManyWithoutWorkerInput\n  exam: CollegeEntranceExamCreateOneWithoutStudentInput\n  sentMessages: MessageCreateManyWithoutFromInput\n  receiveMessages: MessageCreateManyWithoutToInput\n  groupMessages: GroupMessageCreateManyWithoutFromInput\n  groups: GroupCreateManyWithoutUsersInput\n  friends: UserCreateManyInput\n  familyGroup: FamilyGroupCreateOneWithoutUsersInput\n  creater: FamilyGroupCreateOneWithoutCreaterInput\n  classMate: ClassMateCreateManyWithoutStudentInput\n  workGroup: WorkGroupCreateOneInput\n  colleagues: ColleagueCreateManyWithoutWorkerInput\n  fromOldColleagues: OldColleagueCreateManyWithoutFromInput\n  toOldColleagues: OldColleagueCreateManyWithoutToInput\n  locationGroups: LocationGroupCreateManyWithoutUsersInput\n  remmemberPassword: FindPassWordCreateOneWithoutRemmemberInput\n}\n\ninput UserCreateWithoutFromOldColleaguesInput {\n  username: String!\n  password: String!\n  name: String\n  gender: String\n  avatar: PhotoCreateOneWithoutUserInput\n  birthdaycalendar: String\n  birthday: DateTime\n  birthplace: LocationCreateOneWithoutBornsInput\n  residence: LocationCreateOneWithoutLivesInput\n  uid: String!\n  token: String!\n  posts: PostCreateManyWithoutAuthorInput\n  regStatus: RegStatusCreateOneWithoutApplicantsInput\n  regTimes: Int\n  maxRegTimes: Int\n  families: FamilyCreateManyWithoutFromInput\n  studies: SchoolEduCreateManyWithoutStudentsInput\n  works: WorkCreateManyWithoutWorkerInput\n  exam: CollegeEntranceExamCreateOneWithoutStudentInput\n  sentMessages: MessageCreateManyWithoutFromInput\n  receiveMessages: MessageCreateManyWithoutToInput\n  groupMessages: GroupMessageCreateManyWithoutFromInput\n  groups: GroupCreateManyWithoutUsersInput\n  friends: UserCreateManyInput\n  familyGroup: FamilyGroupCreateOneWithoutUsersInput\n  creater: FamilyGroupCreateOneWithoutCreaterInput\n  classMate: ClassMateCreateManyWithoutStudentInput\n  workGroup: WorkGroupCreateOneInput\n  colleagues: ColleagueCreateManyWithoutWorkerInput\n  toOldColleagues: OldColleagueCreateManyWithoutToInput\n  locationGroups: LocationGroupCreateManyWithoutUsersInput\n  forgetPassword: FindPassWordCreateOneWithoutForgetterInput\n  remmemberPassword: FindPassWordCreateOneWithoutRemmemberInput\n}\n\ninput UserCreateWithoutGroupMessagesInput {\n  username: String!\n  password: String!\n  name: String\n  gender: String\n  avatar: PhotoCreateOneWithoutUserInput\n  birthdaycalendar: String\n  birthday: DateTime\n  birthplace: LocationCreateOneWithoutBornsInput\n  residence: LocationCreateOneWithoutLivesInput\n  uid: String!\n  token: String!\n  posts: PostCreateManyWithoutAuthorInput\n  regStatus: RegStatusCreateOneWithoutApplicantsInput\n  regTimes: Int\n  maxRegTimes: Int\n  families: FamilyCreateManyWithoutFromInput\n  studies: SchoolEduCreateManyWithoutStudentsInput\n  works: WorkCreateManyWithoutWorkerInput\n  exam: CollegeEntranceExamCreateOneWithoutStudentInput\n  sentMessages: MessageCreateManyWithoutFromInput\n  receiveMessages: MessageCreateManyWithoutToInput\n  groups: GroupCreateManyWithoutUsersInput\n  friends: UserCreateManyInput\n  familyGroup: FamilyGroupCreateOneWithoutUsersInput\n  creater: FamilyGroupCreateOneWithoutCreaterInput\n  classMate: ClassMateCreateManyWithoutStudentInput\n  workGroup: WorkGroupCreateOneInput\n  colleagues: ColleagueCreateManyWithoutWorkerInput\n  fromOldColleagues: OldColleagueCreateManyWithoutFromInput\n  toOldColleagues: OldColleagueCreateManyWithoutToInput\n  locationGroups: LocationGroupCreateManyWithoutUsersInput\n  forgetPassword: FindPassWordCreateOneWithoutForgetterInput\n  remmemberPassword: FindPassWordCreateOneWithoutRemmemberInput\n}\n\ninput UserCreateWithoutGroupsInput {\n  username: String!\n  password: String!\n  name: String\n  gender: String\n  avatar: PhotoCreateOneWithoutUserInput\n  birthdaycalendar: String\n  birthday: DateTime\n  birthplace: LocationCreateOneWithoutBornsInput\n  residence: LocationCreateOneWithoutLivesInput\n  uid: String!\n  token: String!\n  posts: PostCreateManyWithoutAuthorInput\n  regStatus: RegStatusCreateOneWithoutApplicantsInput\n  regTimes: Int\n  maxRegTimes: Int\n  families: FamilyCreateManyWithoutFromInput\n  studies: SchoolEduCreateManyWithoutStudentsInput\n  works: WorkCreateManyWithoutWorkerInput\n  exam: CollegeEntranceExamCreateOneWithoutStudentInput\n  sentMessages: MessageCreateManyWithoutFromInput\n  receiveMessages: MessageCreateManyWithoutToInput\n  groupMessages: GroupMessageCreateManyWithoutFromInput\n  friends: UserCreateManyInput\n  familyGroup: FamilyGroupCreateOneWithoutUsersInput\n  creater: FamilyGroupCreateOneWithoutCreaterInput\n  classMate: ClassMateCreateManyWithoutStudentInput\n  workGroup: WorkGroupCreateOneInput\n  colleagues: ColleagueCreateManyWithoutWorkerInput\n  fromOldColleagues: OldColleagueCreateManyWithoutFromInput\n  toOldColleagues: OldColleagueCreateManyWithoutToInput\n  locationGroups: LocationGroupCreateManyWithoutUsersInput\n  forgetPassword: FindPassWordCreateOneWithoutForgetterInput\n  remmemberPassword: FindPassWordCreateOneWithoutRemmemberInput\n}\n\ninput UserCreateWithoutLocationGroupsInput {\n  username: String!\n  password: String!\n  name: String\n  gender: String\n  avatar: PhotoCreateOneWithoutUserInput\n  birthdaycalendar: String\n  birthday: DateTime\n  birthplace: LocationCreateOneWithoutBornsInput\n  residence: LocationCreateOneWithoutLivesInput\n  uid: String!\n  token: String!\n  posts: PostCreateManyWithoutAuthorInput\n  regStatus: RegStatusCreateOneWithoutApplicantsInput\n  regTimes: Int\n  maxRegTimes: Int\n  families: FamilyCreateManyWithoutFromInput\n  studies: SchoolEduCreateManyWithoutStudentsInput\n  works: WorkCreateManyWithoutWorkerInput\n  exam: CollegeEntranceExamCreateOneWithoutStudentInput\n  sentMessages: MessageCreateManyWithoutFromInput\n  receiveMessages: MessageCreateManyWithoutToInput\n  groupMessages: GroupMessageCreateManyWithoutFromInput\n  groups: GroupCreateManyWithoutUsersInput\n  friends: UserCreateManyInput\n  familyGroup: FamilyGroupCreateOneWithoutUsersInput\n  creater: FamilyGroupCreateOneWithoutCreaterInput\n  classMate: ClassMateCreateManyWithoutStudentInput\n  workGroup: WorkGroupCreateOneInput\n  colleagues: ColleagueCreateManyWithoutWorkerInput\n  fromOldColleagues: OldColleagueCreateManyWithoutFromInput\n  toOldColleagues: OldColleagueCreateManyWithoutToInput\n  forgetPassword: FindPassWordCreateOneWithoutForgetterInput\n  remmemberPassword: FindPassWordCreateOneWithoutRemmemberInput\n}\n\ninput UserCreateWithoutPostsInput {\n  username: String!\n  password: String!\n  name: String\n  gender: String\n  avatar: PhotoCreateOneWithoutUserInput\n  birthdaycalendar: String\n  birthday: DateTime\n  birthplace: LocationCreateOneWithoutBornsInput\n  residence: LocationCreateOneWithoutLivesInput\n  uid: String!\n  token: String!\n  regStatus: RegStatusCreateOneWithoutApplicantsInput\n  regTimes: Int\n  maxRegTimes: Int\n  families: FamilyCreateManyWithoutFromInput\n  studies: SchoolEduCreateManyWithoutStudentsInput\n  works: WorkCreateManyWithoutWorkerInput\n  exam: CollegeEntranceExamCreateOneWithoutStudentInput\n  sentMessages: MessageCreateManyWithoutFromInput\n  receiveMessages: MessageCreateManyWithoutToInput\n  groupMessages: GroupMessageCreateManyWithoutFromInput\n  groups: GroupCreateManyWithoutUsersInput\n  friends: UserCreateManyInput\n  familyGroup: FamilyGroupCreateOneWithoutUsersInput\n  creater: FamilyGroupCreateOneWithoutCreaterInput\n  classMate: ClassMateCreateManyWithoutStudentInput\n  workGroup: WorkGroupCreateOneInput\n  colleagues: ColleagueCreateManyWithoutWorkerInput\n  fromOldColleagues: OldColleagueCreateManyWithoutFromInput\n  toOldColleagues: OldColleagueCreateManyWithoutToInput\n  locationGroups: LocationGroupCreateManyWithoutUsersInput\n  forgetPassword: FindPassWordCreateOneWithoutForgetterInput\n  remmemberPassword: FindPassWordCreateOneWithoutRemmemberInput\n}\n\ninput UserCreateWithoutReceiveMessagesInput {\n  username: String!\n  password: String!\n  name: String\n  gender: String\n  avatar: PhotoCreateOneWithoutUserInput\n  birthdaycalendar: String\n  birthday: DateTime\n  birthplace: LocationCreateOneWithoutBornsInput\n  residence: LocationCreateOneWithoutLivesInput\n  uid: String!\n  token: String!\n  posts: PostCreateManyWithoutAuthorInput\n  regStatus: RegStatusCreateOneWithoutApplicantsInput\n  regTimes: Int\n  maxRegTimes: Int\n  families: FamilyCreateManyWithoutFromInput\n  studies: SchoolEduCreateManyWithoutStudentsInput\n  works: WorkCreateManyWithoutWorkerInput\n  exam: CollegeEntranceExamCreateOneWithoutStudentInput\n  sentMessages: MessageCreateManyWithoutFromInput\n  groupMessages: GroupMessageCreateManyWithoutFromInput\n  groups: GroupCreateManyWithoutUsersInput\n  friends: UserCreateManyInput\n  familyGroup: FamilyGroupCreateOneWithoutUsersInput\n  creater: FamilyGroupCreateOneWithoutCreaterInput\n  classMate: ClassMateCreateManyWithoutStudentInput\n  workGroup: WorkGroupCreateOneInput\n  colleagues: ColleagueCreateManyWithoutWorkerInput\n  fromOldColleagues: OldColleagueCreateManyWithoutFromInput\n  toOldColleagues: OldColleagueCreateManyWithoutToInput\n  locationGroups: LocationGroupCreateManyWithoutUsersInput\n  forgetPassword: FindPassWordCreateOneWithoutForgetterInput\n  remmemberPassword: FindPassWordCreateOneWithoutRemmemberInput\n}\n\ninput UserCreateWithoutRegStatusInput {\n  username: String!\n  password: String!\n  name: String\n  gender: String\n  avatar: PhotoCreateOneWithoutUserInput\n  birthdaycalendar: String\n  birthday: DateTime\n  birthplace: LocationCreateOneWithoutBornsInput\n  residence: LocationCreateOneWithoutLivesInput\n  uid: String!\n  token: String!\n  posts: PostCreateManyWithoutAuthorInput\n  regTimes: Int\n  maxRegTimes: Int\n  families: FamilyCreateManyWithoutFromInput\n  studies: SchoolEduCreateManyWithoutStudentsInput\n  works: WorkCreateManyWithoutWorkerInput\n  exam: CollegeEntranceExamCreateOneWithoutStudentInput\n  sentMessages: MessageCreateManyWithoutFromInput\n  receiveMessages: MessageCreateManyWithoutToInput\n  groupMessages: GroupMessageCreateManyWithoutFromInput\n  groups: GroupCreateManyWithoutUsersInput\n  friends: UserCreateManyInput\n  familyGroup: FamilyGroupCreateOneWithoutUsersInput\n  creater: FamilyGroupCreateOneWithoutCreaterInput\n  classMate: ClassMateCreateManyWithoutStudentInput\n  workGroup: WorkGroupCreateOneInput\n  colleagues: ColleagueCreateManyWithoutWorkerInput\n  fromOldColleagues: OldColleagueCreateManyWithoutFromInput\n  toOldColleagues: OldColleagueCreateManyWithoutToInput\n  locationGroups: LocationGroupCreateManyWithoutUsersInput\n  forgetPassword: FindPassWordCreateOneWithoutForgetterInput\n  remmemberPassword: FindPassWordCreateOneWithoutRemmemberInput\n}\n\ninput UserCreateWithoutRemmemberPasswordInput {\n  username: String!\n  password: String!\n  name: String\n  gender: String\n  avatar: PhotoCreateOneWithoutUserInput\n  birthdaycalendar: String\n  birthday: DateTime\n  birthplace: LocationCreateOneWithoutBornsInput\n  residence: LocationCreateOneWithoutLivesInput\n  uid: String!\n  token: String!\n  posts: PostCreateManyWithoutAuthorInput\n  regStatus: RegStatusCreateOneWithoutApplicantsInput\n  regTimes: Int\n  maxRegTimes: Int\n  families: FamilyCreateManyWithoutFromInput\n  studies: SchoolEduCreateManyWithoutStudentsInput\n  works: WorkCreateManyWithoutWorkerInput\n  exam: CollegeEntranceExamCreateOneWithoutStudentInput\n  sentMessages: MessageCreateManyWithoutFromInput\n  receiveMessages: MessageCreateManyWithoutToInput\n  groupMessages: GroupMessageCreateManyWithoutFromInput\n  groups: GroupCreateManyWithoutUsersInput\n  friends: UserCreateManyInput\n  familyGroup: FamilyGroupCreateOneWithoutUsersInput\n  creater: FamilyGroupCreateOneWithoutCreaterInput\n  classMate: ClassMateCreateManyWithoutStudentInput\n  workGroup: WorkGroupCreateOneInput\n  colleagues: ColleagueCreateManyWithoutWorkerInput\n  fromOldColleagues: OldColleagueCreateManyWithoutFromInput\n  toOldColleagues: OldColleagueCreateManyWithoutToInput\n  locationGroups: LocationGroupCreateManyWithoutUsersInput\n  forgetPassword: FindPassWordCreateOneWithoutForgetterInput\n}\n\ninput UserCreateWithoutResidenceInput {\n  username: String!\n  password: String!\n  name: String\n  gender: String\n  avatar: PhotoCreateOneWithoutUserInput\n  birthdaycalendar: String\n  birthday: DateTime\n  birthplace: LocationCreateOneWithoutBornsInput\n  uid: String!\n  token: String!\n  posts: PostCreateManyWithoutAuthorInput\n  regStatus: RegStatusCreateOneWithoutApplicantsInput\n  regTimes: Int\n  maxRegTimes: Int\n  families: FamilyCreateManyWithoutFromInput\n  studies: SchoolEduCreateManyWithoutStudentsInput\n  works: WorkCreateManyWithoutWorkerInput\n  exam: CollegeEntranceExamCreateOneWithoutStudentInput\n  sentMessages: MessageCreateManyWithoutFromInput\n  receiveMessages: MessageCreateManyWithoutToInput\n  groupMessages: GroupMessageCreateManyWithoutFromInput\n  groups: GroupCreateManyWithoutUsersInput\n  friends: UserCreateManyInput\n  familyGroup: FamilyGroupCreateOneWithoutUsersInput\n  creater: FamilyGroupCreateOneWithoutCreaterInput\n  classMate: ClassMateCreateManyWithoutStudentInput\n  workGroup: WorkGroupCreateOneInput\n  colleagues: ColleagueCreateManyWithoutWorkerInput\n  fromOldColleagues: OldColleagueCreateManyWithoutFromInput\n  toOldColleagues: OldColleagueCreateManyWithoutToInput\n  locationGroups: LocationGroupCreateManyWithoutUsersInput\n  forgetPassword: FindPassWordCreateOneWithoutForgetterInput\n  remmemberPassword: FindPassWordCreateOneWithoutRemmemberInput\n}\n\ninput UserCreateWithoutSentMessagesInput {\n  username: String!\n  password: String!\n  name: String\n  gender: String\n  avatar: PhotoCreateOneWithoutUserInput\n  birthdaycalendar: String\n  birthday: DateTime\n  birthplace: LocationCreateOneWithoutBornsInput\n  residence: LocationCreateOneWithoutLivesInput\n  uid: String!\n  token: String!\n  posts: PostCreateManyWithoutAuthorInput\n  regStatus: RegStatusCreateOneWithoutApplicantsInput\n  regTimes: Int\n  maxRegTimes: Int\n  families: FamilyCreateManyWithoutFromInput\n  studies: SchoolEduCreateManyWithoutStudentsInput\n  works: WorkCreateManyWithoutWorkerInput\n  exam: CollegeEntranceExamCreateOneWithoutStudentInput\n  receiveMessages: MessageCreateManyWithoutToInput\n  groupMessages: GroupMessageCreateManyWithoutFromInput\n  groups: GroupCreateManyWithoutUsersInput\n  friends: UserCreateManyInput\n  familyGroup: FamilyGroupCreateOneWithoutUsersInput\n  creater: FamilyGroupCreateOneWithoutCreaterInput\n  classMate: ClassMateCreateManyWithoutStudentInput\n  workGroup: WorkGroupCreateOneInput\n  colleagues: ColleagueCreateManyWithoutWorkerInput\n  fromOldColleagues: OldColleagueCreateManyWithoutFromInput\n  toOldColleagues: OldColleagueCreateManyWithoutToInput\n  locationGroups: LocationGroupCreateManyWithoutUsersInput\n  forgetPassword: FindPassWordCreateOneWithoutForgetterInput\n  remmemberPassword: FindPassWordCreateOneWithoutRemmemberInput\n}\n\ninput UserCreateWithoutStudiesInput {\n  username: String!\n  password: String!\n  name: String\n  gender: String\n  avatar: PhotoCreateOneWithoutUserInput\n  birthdaycalendar: String\n  birthday: DateTime\n  birthplace: LocationCreateOneWithoutBornsInput\n  residence: LocationCreateOneWithoutLivesInput\n  uid: String!\n  token: String!\n  posts: PostCreateManyWithoutAuthorInput\n  regStatus: RegStatusCreateOneWithoutApplicantsInput\n  regTimes: Int\n  maxRegTimes: Int\n  families: FamilyCreateManyWithoutFromInput\n  works: WorkCreateManyWithoutWorkerInput\n  exam: CollegeEntranceExamCreateOneWithoutStudentInput\n  sentMessages: MessageCreateManyWithoutFromInput\n  receiveMessages: MessageCreateManyWithoutToInput\n  groupMessages: GroupMessageCreateManyWithoutFromInput\n  groups: GroupCreateManyWithoutUsersInput\n  friends: UserCreateManyInput\n  familyGroup: FamilyGroupCreateOneWithoutUsersInput\n  creater: FamilyGroupCreateOneWithoutCreaterInput\n  classMate: ClassMateCreateManyWithoutStudentInput\n  workGroup: WorkGroupCreateOneInput\n  colleagues: ColleagueCreateManyWithoutWorkerInput\n  fromOldColleagues: OldColleagueCreateManyWithoutFromInput\n  toOldColleagues: OldColleagueCreateManyWithoutToInput\n  locationGroups: LocationGroupCreateManyWithoutUsersInput\n  forgetPassword: FindPassWordCreateOneWithoutForgetterInput\n  remmemberPassword: FindPassWordCreateOneWithoutRemmemberInput\n}\n\ninput UserCreateWithoutToOldColleaguesInput {\n  username: String!\n  password: String!\n  name: String\n  gender: String\n  avatar: PhotoCreateOneWithoutUserInput\n  birthdaycalendar: String\n  birthday: DateTime\n  birthplace: LocationCreateOneWithoutBornsInput\n  residence: LocationCreateOneWithoutLivesInput\n  uid: String!\n  token: String!\n  posts: PostCreateManyWithoutAuthorInput\n  regStatus: RegStatusCreateOneWithoutApplicantsInput\n  regTimes: Int\n  maxRegTimes: Int\n  families: FamilyCreateManyWithoutFromInput\n  studies: SchoolEduCreateManyWithoutStudentsInput\n  works: WorkCreateManyWithoutWorkerInput\n  exam: CollegeEntranceExamCreateOneWithoutStudentInput\n  sentMessages: MessageCreateManyWithoutFromInput\n  receiveMessages: MessageCreateManyWithoutToInput\n  groupMessages: GroupMessageCreateManyWithoutFromInput\n  groups: GroupCreateManyWithoutUsersInput\n  friends: UserCreateManyInput\n  familyGroup: FamilyGroupCreateOneWithoutUsersInput\n  creater: FamilyGroupCreateOneWithoutCreaterInput\n  classMate: ClassMateCreateManyWithoutStudentInput\n  workGroup: WorkGroupCreateOneInput\n  colleagues: ColleagueCreateManyWithoutWorkerInput\n  fromOldColleagues: OldColleagueCreateManyWithoutFromInput\n  locationGroups: LocationGroupCreateManyWithoutUsersInput\n  forgetPassword: FindPassWordCreateOneWithoutForgetterInput\n  remmemberPassword: FindPassWordCreateOneWithoutRemmemberInput\n}\n\ninput UserCreateWithoutWorksInput {\n  username: String!\n  password: String!\n  name: String\n  gender: String\n  avatar: PhotoCreateOneWithoutUserInput\n  birthdaycalendar: String\n  birthday: DateTime\n  birthplace: LocationCreateOneWithoutBornsInput\n  residence: LocationCreateOneWithoutLivesInput\n  uid: String!\n  token: String!\n  posts: PostCreateManyWithoutAuthorInput\n  regStatus: RegStatusCreateOneWithoutApplicantsInput\n  regTimes: Int\n  maxRegTimes: Int\n  families: FamilyCreateManyWithoutFromInput\n  studies: SchoolEduCreateManyWithoutStudentsInput\n  exam: CollegeEntranceExamCreateOneWithoutStudentInput\n  sentMessages: MessageCreateManyWithoutFromInput\n  receiveMessages: MessageCreateManyWithoutToInput\n  groupMessages: GroupMessageCreateManyWithoutFromInput\n  groups: GroupCreateManyWithoutUsersInput\n  friends: UserCreateManyInput\n  familyGroup: FamilyGroupCreateOneWithoutUsersInput\n  creater: FamilyGroupCreateOneWithoutCreaterInput\n  classMate: ClassMateCreateManyWithoutStudentInput\n  workGroup: WorkGroupCreateOneInput\n  colleagues: ColleagueCreateManyWithoutWorkerInput\n  fromOldColleagues: OldColleagueCreateManyWithoutFromInput\n  toOldColleagues: OldColleagueCreateManyWithoutToInput\n  locationGroups: LocationGroupCreateManyWithoutUsersInput\n  forgetPassword: FindPassWordCreateOneWithoutForgetterInput\n  remmemberPassword: FindPassWordCreateOneWithoutRemmemberInput\n}\n\ntype UserEdge {\n  node: User!\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  username_ASC\n  username_DESC\n  password_ASC\n  password_DESC\n  name_ASC\n  name_DESC\n  gender_ASC\n  gender_DESC\n  birthdaycalendar_ASC\n  birthdaycalendar_DESC\n  birthday_ASC\n  birthday_DESC\n  uid_ASC\n  uid_DESC\n  token_ASC\n  token_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  regTimes_ASC\n  regTimes_DESC\n  maxRegTimes_ASC\n  maxRegTimes_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n  username: String!\n  password: String!\n  name: String\n  gender: String\n  birthdaycalendar: String\n  birthday: DateTime\n  uid: String!\n  token: String!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  regTimes: Int\n  maxRegTimes: Int\n}\n\ninput UserScalarWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  username: String\n  username_not: String\n  username_in: [String!]\n  username_not_in: [String!]\n  username_lt: String\n  username_lte: String\n  username_gt: String\n  username_gte: String\n  username_contains: String\n  username_not_contains: String\n  username_starts_with: String\n  username_not_starts_with: String\n  username_ends_with: String\n  username_not_ends_with: String\n  password: String\n  password_not: String\n  password_in: [String!]\n  password_not_in: [String!]\n  password_lt: String\n  password_lte: String\n  password_gt: String\n  password_gte: String\n  password_contains: String\n  password_not_contains: String\n  password_starts_with: String\n  password_not_starts_with: String\n  password_ends_with: String\n  password_not_ends_with: String\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  gender: String\n  gender_not: String\n  gender_in: [String!]\n  gender_not_in: [String!]\n  gender_lt: String\n  gender_lte: String\n  gender_gt: String\n  gender_gte: String\n  gender_contains: String\n  gender_not_contains: String\n  gender_starts_with: String\n  gender_not_starts_with: String\n  gender_ends_with: String\n  gender_not_ends_with: String\n  birthdaycalendar: String\n  birthdaycalendar_not: String\n  birthdaycalendar_in: [String!]\n  birthdaycalendar_not_in: [String!]\n  birthdaycalendar_lt: String\n  birthdaycalendar_lte: String\n  birthdaycalendar_gt: String\n  birthdaycalendar_gte: String\n  birthdaycalendar_contains: String\n  birthdaycalendar_not_contains: String\n  birthdaycalendar_starts_with: String\n  birthdaycalendar_not_starts_with: String\n  birthdaycalendar_ends_with: String\n  birthdaycalendar_not_ends_with: String\n  birthday: DateTime\n  birthday_not: DateTime\n  birthday_in: [DateTime!]\n  birthday_not_in: [DateTime!]\n  birthday_lt: DateTime\n  birthday_lte: DateTime\n  birthday_gt: DateTime\n  birthday_gte: DateTime\n  uid: String\n  uid_not: String\n  uid_in: [String!]\n  uid_not_in: [String!]\n  uid_lt: String\n  uid_lte: String\n  uid_gt: String\n  uid_gte: String\n  uid_contains: String\n  uid_not_contains: String\n  uid_starts_with: String\n  uid_not_starts_with: String\n  uid_ends_with: String\n  uid_not_ends_with: String\n  token: String\n  token_not: String\n  token_in: [String!]\n  token_not_in: [String!]\n  token_lt: String\n  token_lte: String\n  token_gt: String\n  token_gte: String\n  token_contains: String\n  token_not_contains: String\n  token_starts_with: String\n  token_not_starts_with: String\n  token_ends_with: String\n  token_not_ends_with: String\n  createdAt: DateTime\n  createdAt_not: DateTime\n  createdAt_in: [DateTime!]\n  createdAt_not_in: [DateTime!]\n  createdAt_lt: DateTime\n  createdAt_lte: DateTime\n  createdAt_gt: DateTime\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n  updatedAt_not: DateTime\n  updatedAt_in: [DateTime!]\n  updatedAt_not_in: [DateTime!]\n  updatedAt_lt: DateTime\n  updatedAt_lte: DateTime\n  updatedAt_gt: DateTime\n  updatedAt_gte: DateTime\n  regTimes: Int\n  regTimes_not: Int\n  regTimes_in: [Int!]\n  regTimes_not_in: [Int!]\n  regTimes_lt: Int\n  regTimes_lte: Int\n  regTimes_gt: Int\n  regTimes_gte: Int\n  maxRegTimes: Int\n  maxRegTimes_not: Int\n  maxRegTimes_in: [Int!]\n  maxRegTimes_not_in: [Int!]\n  maxRegTimes_lt: Int\n  maxRegTimes_lte: Int\n  maxRegTimes_gt: Int\n  maxRegTimes_gte: Int\n  AND: [UserScalarWhereInput!]\n  OR: [UserScalarWhereInput!]\n  NOT: [UserScalarWhereInput!]\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n  AND: [UserSubscriptionWhereInput!]\n  OR: [UserSubscriptionWhereInput!]\n  NOT: [UserSubscriptionWhereInput!]\n}\n\ninput UserUpdateDataInput {\n  username: String\n  password: String\n  name: String\n  gender: String\n  avatar: PhotoUpdateOneWithoutUserInput\n  birthdaycalendar: String\n  birthday: DateTime\n  birthplace: LocationUpdateOneWithoutBornsInput\n  residence: LocationUpdateOneWithoutLivesInput\n  uid: String\n  token: String\n  posts: PostUpdateManyWithoutAuthorInput\n  regStatus: RegStatusUpdateOneWithoutApplicantsInput\n  regTimes: Int\n  maxRegTimes: Int\n  families: FamilyUpdateManyWithoutFromInput\n  studies: SchoolEduUpdateManyWithoutStudentsInput\n  works: WorkUpdateManyWithoutWorkerInput\n  exam: CollegeEntranceExamUpdateOneWithoutStudentInput\n  sentMessages: MessageUpdateManyWithoutFromInput\n  receiveMessages: MessageUpdateManyWithoutToInput\n  groupMessages: GroupMessageUpdateManyWithoutFromInput\n  groups: GroupUpdateManyWithoutUsersInput\n  friends: UserUpdateManyInput\n  familyGroup: FamilyGroupUpdateOneWithoutUsersInput\n  creater: FamilyGroupUpdateOneWithoutCreaterInput\n  classMate: ClassMateUpdateManyWithoutStudentInput\n  workGroup: WorkGroupUpdateOneInput\n  colleagues: ColleagueUpdateManyWithoutWorkerInput\n  fromOldColleagues: OldColleagueUpdateManyWithoutFromInput\n  toOldColleagues: OldColleagueUpdateManyWithoutToInput\n  locationGroups: LocationGroupUpdateManyWithoutUsersInput\n  forgetPassword: FindPassWordUpdateOneWithoutForgetterInput\n  remmemberPassword: FindPassWordUpdateOneWithoutRemmemberInput\n}\n\ninput UserUpdateInput {\n  username: String\n  password: String\n  name: String\n  gender: String\n  avatar: PhotoUpdateOneWithoutUserInput\n  birthdaycalendar: String\n  birthday: DateTime\n  birthplace: LocationUpdateOneWithoutBornsInput\n  residence: LocationUpdateOneWithoutLivesInput\n  uid: String\n  token: String\n  posts: PostUpdateManyWithoutAuthorInput\n  regStatus: RegStatusUpdateOneWithoutApplicantsInput\n  regTimes: Int\n  maxRegTimes: Int\n  families: FamilyUpdateManyWithoutFromInput\n  studies: SchoolEduUpdateManyWithoutStudentsInput\n  works: WorkUpdateManyWithoutWorkerInput\n  exam: CollegeEntranceExamUpdateOneWithoutStudentInput\n  sentMessages: MessageUpdateManyWithoutFromInput\n  receiveMessages: MessageUpdateManyWithoutToInput\n  groupMessages: GroupMessageUpdateManyWithoutFromInput\n  groups: GroupUpdateManyWithoutUsersInput\n  friends: UserUpdateManyInput\n  familyGroup: FamilyGroupUpdateOneWithoutUsersInput\n  creater: FamilyGroupUpdateOneWithoutCreaterInput\n  classMate: ClassMateUpdateManyWithoutStudentInput\n  workGroup: WorkGroupUpdateOneInput\n  colleagues: ColleagueUpdateManyWithoutWorkerInput\n  fromOldColleagues: OldColleagueUpdateManyWithoutFromInput\n  toOldColleagues: OldColleagueUpdateManyWithoutToInput\n  locationGroups: LocationGroupUpdateManyWithoutUsersInput\n  forgetPassword: FindPassWordUpdateOneWithoutForgetterInput\n  remmemberPassword: FindPassWordUpdateOneWithoutRemmemberInput\n}\n\ninput UserUpdateManyDataInput {\n  username: String\n  password: String\n  name: String\n  gender: String\n  birthdaycalendar: String\n  birthday: DateTime\n  uid: String\n  token: String\n  regTimes: Int\n  maxRegTimes: Int\n}\n\ninput UserUpdateManyInput {\n  create: [UserCreateInput!]\n  update: [UserUpdateWithWhereUniqueNestedInput!]\n  upsert: [UserUpsertWithWhereUniqueNestedInput!]\n  delete: [UserWhereUniqueInput!]\n  connect: [UserWhereUniqueInput!]\n  disconnect: [UserWhereUniqueInput!]\n  deleteMany: [UserScalarWhereInput!]\n  updateMany: [UserUpdateManyWithWhereNestedInput!]\n}\n\ninput UserUpdateManyMutationInput {\n  username: String\n  password: String\n  name: String\n  gender: String\n  birthdaycalendar: String\n  birthday: DateTime\n  uid: String\n  token: String\n  regTimes: Int\n  maxRegTimes: Int\n}\n\ninput UserUpdateManyWithoutBirthplaceInput {\n  create: [UserCreateWithoutBirthplaceInput!]\n  delete: [UserWhereUniqueInput!]\n  connect: [UserWhereUniqueInput!]\n  disconnect: [UserWhereUniqueInput!]\n  update: [UserUpdateWithWhereUniqueWithoutBirthplaceInput!]\n  upsert: [UserUpsertWithWhereUniqueWithoutBirthplaceInput!]\n  deleteMany: [UserScalarWhereInput!]\n  updateMany: [UserUpdateManyWithWhereNestedInput!]\n}\n\ninput UserUpdateManyWithoutFamilyGroupInput {\n  create: [UserCreateWithoutFamilyGroupInput!]\n  delete: [UserWhereUniqueInput!]\n  connect: [UserWhereUniqueInput!]\n  disconnect: [UserWhereUniqueInput!]\n  update: [UserUpdateWithWhereUniqueWithoutFamilyGroupInput!]\n  upsert: [UserUpsertWithWhereUniqueWithoutFamilyGroupInput!]\n  deleteMany: [UserScalarWhereInput!]\n  updateMany: [UserUpdateManyWithWhereNestedInput!]\n}\n\ninput UserUpdateManyWithoutGroupsInput {\n  create: [UserCreateWithoutGroupsInput!]\n  delete: [UserWhereUniqueInput!]\n  connect: [UserWhereUniqueInput!]\n  disconnect: [UserWhereUniqueInput!]\n  update: [UserUpdateWithWhereUniqueWithoutGroupsInput!]\n  upsert: [UserUpsertWithWhereUniqueWithoutGroupsInput!]\n  deleteMany: [UserScalarWhereInput!]\n  updateMany: [UserUpdateManyWithWhereNestedInput!]\n}\n\ninput UserUpdateManyWithoutLocationGroupsInput {\n  create: [UserCreateWithoutLocationGroupsInput!]\n  delete: [UserWhereUniqueInput!]\n  connect: [UserWhereUniqueInput!]\n  disconnect: [UserWhereUniqueInput!]\n  update: [UserUpdateWithWhereUniqueWithoutLocationGroupsInput!]\n  upsert: [UserUpsertWithWhereUniqueWithoutLocationGroupsInput!]\n  deleteMany: [UserScalarWhereInput!]\n  updateMany: [UserUpdateManyWithWhereNestedInput!]\n}\n\ninput UserUpdateManyWithoutRegStatusInput {\n  create: [UserCreateWithoutRegStatusInput!]\n  delete: [UserWhereUniqueInput!]\n  connect: [UserWhereUniqueInput!]\n  disconnect: [UserWhereUniqueInput!]\n  update: [UserUpdateWithWhereUniqueWithoutRegStatusInput!]\n  upsert: [UserUpsertWithWhereUniqueWithoutRegStatusInput!]\n  deleteMany: [UserScalarWhereInput!]\n  updateMany: [UserUpdateManyWithWhereNestedInput!]\n}\n\ninput UserUpdateManyWithoutRemmemberPasswordInput {\n  create: [UserCreateWithoutRemmemberPasswordInput!]\n  delete: [UserWhereUniqueInput!]\n  connect: [UserWhereUniqueInput!]\n  disconnect: [UserWhereUniqueInput!]\n  update: [UserUpdateWithWhereUniqueWithoutRemmemberPasswordInput!]\n  upsert: [UserUpsertWithWhereUniqueWithoutRemmemberPasswordInput!]\n  deleteMany: [UserScalarWhereInput!]\n  updateMany: [UserUpdateManyWithWhereNestedInput!]\n}\n\ninput UserUpdateManyWithoutResidenceInput {\n  create: [UserCreateWithoutResidenceInput!]\n  delete: [UserWhereUniqueInput!]\n  connect: [UserWhereUniqueInput!]\n  disconnect: [UserWhereUniqueInput!]\n  update: [UserUpdateWithWhereUniqueWithoutResidenceInput!]\n  upsert: [UserUpsertWithWhereUniqueWithoutResidenceInput!]\n  deleteMany: [UserScalarWhereInput!]\n  updateMany: [UserUpdateManyWithWhereNestedInput!]\n}\n\ninput UserUpdateManyWithoutStudiesInput {\n  create: [UserCreateWithoutStudiesInput!]\n  delete: [UserWhereUniqueInput!]\n  connect: [UserWhereUniqueInput!]\n  disconnect: [UserWhereUniqueInput!]\n  update: [UserUpdateWithWhereUniqueWithoutStudiesInput!]\n  upsert: [UserUpsertWithWhereUniqueWithoutStudiesInput!]\n  deleteMany: [UserScalarWhereInput!]\n  updateMany: [UserUpdateManyWithWhereNestedInput!]\n}\n\ninput UserUpdateManyWithWhereNestedInput {\n  where: UserScalarWhereInput!\n  data: UserUpdateManyDataInput!\n}\n\ninput UserUpdateOneInput {\n  create: UserCreateInput\n  update: UserUpdateDataInput\n  upsert: UserUpsertNestedInput\n  delete: Boolean\n  disconnect: Boolean\n  connect: UserWhereUniqueInput\n}\n\ninput UserUpdateOneRequiredWithoutExamInput {\n  create: UserCreateWithoutExamInput\n  update: UserUpdateWithoutExamDataInput\n  upsert: UserUpsertWithoutExamInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserUpdateOneRequiredWithoutFamiliesInput {\n  create: UserCreateWithoutFamiliesInput\n  update: UserUpdateWithoutFamiliesDataInput\n  upsert: UserUpsertWithoutFamiliesInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserUpdateOneRequiredWithoutGroupMessagesInput {\n  create: UserCreateWithoutGroupMessagesInput\n  update: UserUpdateWithoutGroupMessagesDataInput\n  upsert: UserUpsertWithoutGroupMessagesInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserUpdateOneRequiredWithoutPostsInput {\n  create: UserCreateWithoutPostsInput\n  update: UserUpdateWithoutPostsDataInput\n  upsert: UserUpsertWithoutPostsInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserUpdateOneRequiredWithoutReceiveMessagesInput {\n  create: UserCreateWithoutReceiveMessagesInput\n  update: UserUpdateWithoutReceiveMessagesDataInput\n  upsert: UserUpsertWithoutReceiveMessagesInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserUpdateOneRequiredWithoutSentMessagesInput {\n  create: UserCreateWithoutSentMessagesInput\n  update: UserUpdateWithoutSentMessagesDataInput\n  upsert: UserUpsertWithoutSentMessagesInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserUpdateOneWithoutAvatarInput {\n  create: UserCreateWithoutAvatarInput\n  update: UserUpdateWithoutAvatarDataInput\n  upsert: UserUpsertWithoutAvatarInput\n  delete: Boolean\n  disconnect: Boolean\n  connect: UserWhereUniqueInput\n}\n\ninput UserUpdateOneWithoutClassMateInput {\n  create: UserCreateWithoutClassMateInput\n  update: UserUpdateWithoutClassMateDataInput\n  upsert: UserUpsertWithoutClassMateInput\n  delete: Boolean\n  disconnect: Boolean\n  connect: UserWhereUniqueInput\n}\n\ninput UserUpdateOneWithoutColleaguesInput {\n  create: UserCreateWithoutColleaguesInput\n  update: UserUpdateWithoutColleaguesDataInput\n  upsert: UserUpsertWithoutColleaguesInput\n  delete: Boolean\n  disconnect: Boolean\n  connect: UserWhereUniqueInput\n}\n\ninput UserUpdateOneWithoutCreaterInput {\n  create: UserCreateWithoutCreaterInput\n  update: UserUpdateWithoutCreaterDataInput\n  upsert: UserUpsertWithoutCreaterInput\n  delete: Boolean\n  disconnect: Boolean\n  connect: UserWhereUniqueInput\n}\n\ninput UserUpdateOneWithoutForgetPasswordInput {\n  create: UserCreateWithoutForgetPasswordInput\n  update: UserUpdateWithoutForgetPasswordDataInput\n  upsert: UserUpsertWithoutForgetPasswordInput\n  delete: Boolean\n  disconnect: Boolean\n  connect: UserWhereUniqueInput\n}\n\ninput UserUpdateOneWithoutFromOldColleaguesInput {\n  create: UserCreateWithoutFromOldColleaguesInput\n  update: UserUpdateWithoutFromOldColleaguesDataInput\n  upsert: UserUpsertWithoutFromOldColleaguesInput\n  delete: Boolean\n  disconnect: Boolean\n  connect: UserWhereUniqueInput\n}\n\ninput UserUpdateOneWithoutToOldColleaguesInput {\n  create: UserCreateWithoutToOldColleaguesInput\n  update: UserUpdateWithoutToOldColleaguesDataInput\n  upsert: UserUpsertWithoutToOldColleaguesInput\n  delete: Boolean\n  disconnect: Boolean\n  connect: UserWhereUniqueInput\n}\n\ninput UserUpdateOneWithoutWorksInput {\n  create: UserCreateWithoutWorksInput\n  update: UserUpdateWithoutWorksDataInput\n  upsert: UserUpsertWithoutWorksInput\n  delete: Boolean\n  disconnect: Boolean\n  connect: UserWhereUniqueInput\n}\n\ninput UserUpdateWithoutAvatarDataInput {\n  username: String\n  password: String\n  name: String\n  gender: String\n  birthdaycalendar: String\n  birthday: DateTime\n  birthplace: LocationUpdateOneWithoutBornsInput\n  residence: LocationUpdateOneWithoutLivesInput\n  uid: String\n  token: String\n  posts: PostUpdateManyWithoutAuthorInput\n  regStatus: RegStatusUpdateOneWithoutApplicantsInput\n  regTimes: Int\n  maxRegTimes: Int\n  families: FamilyUpdateManyWithoutFromInput\n  studies: SchoolEduUpdateManyWithoutStudentsInput\n  works: WorkUpdateManyWithoutWorkerInput\n  exam: CollegeEntranceExamUpdateOneWithoutStudentInput\n  sentMessages: MessageUpdateManyWithoutFromInput\n  receiveMessages: MessageUpdateManyWithoutToInput\n  groupMessages: GroupMessageUpdateManyWithoutFromInput\n  groups: GroupUpdateManyWithoutUsersInput\n  friends: UserUpdateManyInput\n  familyGroup: FamilyGroupUpdateOneWithoutUsersInput\n  creater: FamilyGroupUpdateOneWithoutCreaterInput\n  classMate: ClassMateUpdateManyWithoutStudentInput\n  workGroup: WorkGroupUpdateOneInput\n  colleagues: ColleagueUpdateManyWithoutWorkerInput\n  fromOldColleagues: OldColleagueUpdateManyWithoutFromInput\n  toOldColleagues: OldColleagueUpdateManyWithoutToInput\n  locationGroups: LocationGroupUpdateManyWithoutUsersInput\n  forgetPassword: FindPassWordUpdateOneWithoutForgetterInput\n  remmemberPassword: FindPassWordUpdateOneWithoutRemmemberInput\n}\n\ninput UserUpdateWithoutBirthplaceDataInput {\n  username: String\n  password: String\n  name: String\n  gender: String\n  avatar: PhotoUpdateOneWithoutUserInput\n  birthdaycalendar: String\n  birthday: DateTime\n  residence: LocationUpdateOneWithoutLivesInput\n  uid: String\n  token: String\n  posts: PostUpdateManyWithoutAuthorInput\n  regStatus: RegStatusUpdateOneWithoutApplicantsInput\n  regTimes: Int\n  maxRegTimes: Int\n  families: FamilyUpdateManyWithoutFromInput\n  studies: SchoolEduUpdateManyWithoutStudentsInput\n  works: WorkUpdateManyWithoutWorkerInput\n  exam: CollegeEntranceExamUpdateOneWithoutStudentInput\n  sentMessages: MessageUpdateManyWithoutFromInput\n  receiveMessages: MessageUpdateManyWithoutToInput\n  groupMessages: GroupMessageUpdateManyWithoutFromInput\n  groups: GroupUpdateManyWithoutUsersInput\n  friends: UserUpdateManyInput\n  familyGroup: FamilyGroupUpdateOneWithoutUsersInput\n  creater: FamilyGroupUpdateOneWithoutCreaterInput\n  classMate: ClassMateUpdateManyWithoutStudentInput\n  workGroup: WorkGroupUpdateOneInput\n  colleagues: ColleagueUpdateManyWithoutWorkerInput\n  fromOldColleagues: OldColleagueUpdateManyWithoutFromInput\n  toOldColleagues: OldColleagueUpdateManyWithoutToInput\n  locationGroups: LocationGroupUpdateManyWithoutUsersInput\n  forgetPassword: FindPassWordUpdateOneWithoutForgetterInput\n  remmemberPassword: FindPassWordUpdateOneWithoutRemmemberInput\n}\n\ninput UserUpdateWithoutClassMateDataInput {\n  username: String\n  password: String\n  name: String\n  gender: String\n  avatar: PhotoUpdateOneWithoutUserInput\n  birthdaycalendar: String\n  birthday: DateTime\n  birthplace: LocationUpdateOneWithoutBornsInput\n  residence: LocationUpdateOneWithoutLivesInput\n  uid: String\n  token: String\n  posts: PostUpdateManyWithoutAuthorInput\n  regStatus: RegStatusUpdateOneWithoutApplicantsInput\n  regTimes: Int\n  maxRegTimes: Int\n  families: FamilyUpdateManyWithoutFromInput\n  studies: SchoolEduUpdateManyWithoutStudentsInput\n  works: WorkUpdateManyWithoutWorkerInput\n  exam: CollegeEntranceExamUpdateOneWithoutStudentInput\n  sentMessages: MessageUpdateManyWithoutFromInput\n  receiveMessages: MessageUpdateManyWithoutToInput\n  groupMessages: GroupMessageUpdateManyWithoutFromInput\n  groups: GroupUpdateManyWithoutUsersInput\n  friends: UserUpdateManyInput\n  familyGroup: FamilyGroupUpdateOneWithoutUsersInput\n  creater: FamilyGroupUpdateOneWithoutCreaterInput\n  workGroup: WorkGroupUpdateOneInput\n  colleagues: ColleagueUpdateManyWithoutWorkerInput\n  fromOldColleagues: OldColleagueUpdateManyWithoutFromInput\n  toOldColleagues: OldColleagueUpdateManyWithoutToInput\n  locationGroups: LocationGroupUpdateManyWithoutUsersInput\n  forgetPassword: FindPassWordUpdateOneWithoutForgetterInput\n  remmemberPassword: FindPassWordUpdateOneWithoutRemmemberInput\n}\n\ninput UserUpdateWithoutColleaguesDataInput {\n  username: String\n  password: String\n  name: String\n  gender: String\n  avatar: PhotoUpdateOneWithoutUserInput\n  birthdaycalendar: String\n  birthday: DateTime\n  birthplace: LocationUpdateOneWithoutBornsInput\n  residence: LocationUpdateOneWithoutLivesInput\n  uid: String\n  token: String\n  posts: PostUpdateManyWithoutAuthorInput\n  regStatus: RegStatusUpdateOneWithoutApplicantsInput\n  regTimes: Int\n  maxRegTimes: Int\n  families: FamilyUpdateManyWithoutFromInput\n  studies: SchoolEduUpdateManyWithoutStudentsInput\n  works: WorkUpdateManyWithoutWorkerInput\n  exam: CollegeEntranceExamUpdateOneWithoutStudentInput\n  sentMessages: MessageUpdateManyWithoutFromInput\n  receiveMessages: MessageUpdateManyWithoutToInput\n  groupMessages: GroupMessageUpdateManyWithoutFromInput\n  groups: GroupUpdateManyWithoutUsersInput\n  friends: UserUpdateManyInput\n  familyGroup: FamilyGroupUpdateOneWithoutUsersInput\n  creater: FamilyGroupUpdateOneWithoutCreaterInput\n  classMate: ClassMateUpdateManyWithoutStudentInput\n  workGroup: WorkGroupUpdateOneInput\n  fromOldColleagues: OldColleagueUpdateManyWithoutFromInput\n  toOldColleagues: OldColleagueUpdateManyWithoutToInput\n  locationGroups: LocationGroupUpdateManyWithoutUsersInput\n  forgetPassword: FindPassWordUpdateOneWithoutForgetterInput\n  remmemberPassword: FindPassWordUpdateOneWithoutRemmemberInput\n}\n\ninput UserUpdateWithoutCreaterDataInput {\n  username: String\n  password: String\n  name: String\n  gender: String\n  avatar: PhotoUpdateOneWithoutUserInput\n  birthdaycalendar: String\n  birthday: DateTime\n  birthplace: LocationUpdateOneWithoutBornsInput\n  residence: LocationUpdateOneWithoutLivesInput\n  uid: String\n  token: String\n  posts: PostUpdateManyWithoutAuthorInput\n  regStatus: RegStatusUpdateOneWithoutApplicantsInput\n  regTimes: Int\n  maxRegTimes: Int\n  families: FamilyUpdateManyWithoutFromInput\n  studies: SchoolEduUpdateManyWithoutStudentsInput\n  works: WorkUpdateManyWithoutWorkerInput\n  exam: CollegeEntranceExamUpdateOneWithoutStudentInput\n  sentMessages: MessageUpdateManyWithoutFromInput\n  receiveMessages: MessageUpdateManyWithoutToInput\n  groupMessages: GroupMessageUpdateManyWithoutFromInput\n  groups: GroupUpdateManyWithoutUsersInput\n  friends: UserUpdateManyInput\n  familyGroup: FamilyGroupUpdateOneWithoutUsersInput\n  classMate: ClassMateUpdateManyWithoutStudentInput\n  workGroup: WorkGroupUpdateOneInput\n  colleagues: ColleagueUpdateManyWithoutWorkerInput\n  fromOldColleagues: OldColleagueUpdateManyWithoutFromInput\n  toOldColleagues: OldColleagueUpdateManyWithoutToInput\n  locationGroups: LocationGroupUpdateManyWithoutUsersInput\n  forgetPassword: FindPassWordUpdateOneWithoutForgetterInput\n  remmemberPassword: FindPassWordUpdateOneWithoutRemmemberInput\n}\n\ninput UserUpdateWithoutExamDataInput {\n  username: String\n  password: String\n  name: String\n  gender: String\n  avatar: PhotoUpdateOneWithoutUserInput\n  birthdaycalendar: String\n  birthday: DateTime\n  birthplace: LocationUpdateOneWithoutBornsInput\n  residence: LocationUpdateOneWithoutLivesInput\n  uid: String\n  token: String\n  posts: PostUpdateManyWithoutAuthorInput\n  regStatus: RegStatusUpdateOneWithoutApplicantsInput\n  regTimes: Int\n  maxRegTimes: Int\n  families: FamilyUpdateManyWithoutFromInput\n  studies: SchoolEduUpdateManyWithoutStudentsInput\n  works: WorkUpdateManyWithoutWorkerInput\n  sentMessages: MessageUpdateManyWithoutFromInput\n  receiveMessages: MessageUpdateManyWithoutToInput\n  groupMessages: GroupMessageUpdateManyWithoutFromInput\n  groups: GroupUpdateManyWithoutUsersInput\n  friends: UserUpdateManyInput\n  familyGroup: FamilyGroupUpdateOneWithoutUsersInput\n  creater: FamilyGroupUpdateOneWithoutCreaterInput\n  classMate: ClassMateUpdateManyWithoutStudentInput\n  workGroup: WorkGroupUpdateOneInput\n  colleagues: ColleagueUpdateManyWithoutWorkerInput\n  fromOldColleagues: OldColleagueUpdateManyWithoutFromInput\n  toOldColleagues: OldColleagueUpdateManyWithoutToInput\n  locationGroups: LocationGroupUpdateManyWithoutUsersInput\n  forgetPassword: FindPassWordUpdateOneWithoutForgetterInput\n  remmemberPassword: FindPassWordUpdateOneWithoutRemmemberInput\n}\n\ninput UserUpdateWithoutFamiliesDataInput {\n  username: String\n  password: String\n  name: String\n  gender: String\n  avatar: PhotoUpdateOneWithoutUserInput\n  birthdaycalendar: String\n  birthday: DateTime\n  birthplace: LocationUpdateOneWithoutBornsInput\n  residence: LocationUpdateOneWithoutLivesInput\n  uid: String\n  token: String\n  posts: PostUpdateManyWithoutAuthorInput\n  regStatus: RegStatusUpdateOneWithoutApplicantsInput\n  regTimes: Int\n  maxRegTimes: Int\n  studies: SchoolEduUpdateManyWithoutStudentsInput\n  works: WorkUpdateManyWithoutWorkerInput\n  exam: CollegeEntranceExamUpdateOneWithoutStudentInput\n  sentMessages: MessageUpdateManyWithoutFromInput\n  receiveMessages: MessageUpdateManyWithoutToInput\n  groupMessages: GroupMessageUpdateManyWithoutFromInput\n  groups: GroupUpdateManyWithoutUsersInput\n  friends: UserUpdateManyInput\n  familyGroup: FamilyGroupUpdateOneWithoutUsersInput\n  creater: FamilyGroupUpdateOneWithoutCreaterInput\n  classMate: ClassMateUpdateManyWithoutStudentInput\n  workGroup: WorkGroupUpdateOneInput\n  colleagues: ColleagueUpdateManyWithoutWorkerInput\n  fromOldColleagues: OldColleagueUpdateManyWithoutFromInput\n  toOldColleagues: OldColleagueUpdateManyWithoutToInput\n  locationGroups: LocationGroupUpdateManyWithoutUsersInput\n  forgetPassword: FindPassWordUpdateOneWithoutForgetterInput\n  remmemberPassword: FindPassWordUpdateOneWithoutRemmemberInput\n}\n\ninput UserUpdateWithoutFamilyGroupDataInput {\n  username: String\n  password: String\n  name: String\n  gender: String\n  avatar: PhotoUpdateOneWithoutUserInput\n  birthdaycalendar: String\n  birthday: DateTime\n  birthplace: LocationUpdateOneWithoutBornsInput\n  residence: LocationUpdateOneWithoutLivesInput\n  uid: String\n  token: String\n  posts: PostUpdateManyWithoutAuthorInput\n  regStatus: RegStatusUpdateOneWithoutApplicantsInput\n  regTimes: Int\n  maxRegTimes: Int\n  families: FamilyUpdateManyWithoutFromInput\n  studies: SchoolEduUpdateManyWithoutStudentsInput\n  works: WorkUpdateManyWithoutWorkerInput\n  exam: CollegeEntranceExamUpdateOneWithoutStudentInput\n  sentMessages: MessageUpdateManyWithoutFromInput\n  receiveMessages: MessageUpdateManyWithoutToInput\n  groupMessages: GroupMessageUpdateManyWithoutFromInput\n  groups: GroupUpdateManyWithoutUsersInput\n  friends: UserUpdateManyInput\n  creater: FamilyGroupUpdateOneWithoutCreaterInput\n  classMate: ClassMateUpdateManyWithoutStudentInput\n  workGroup: WorkGroupUpdateOneInput\n  colleagues: ColleagueUpdateManyWithoutWorkerInput\n  fromOldColleagues: OldColleagueUpdateManyWithoutFromInput\n  toOldColleagues: OldColleagueUpdateManyWithoutToInput\n  locationGroups: LocationGroupUpdateManyWithoutUsersInput\n  forgetPassword: FindPassWordUpdateOneWithoutForgetterInput\n  remmemberPassword: FindPassWordUpdateOneWithoutRemmemberInput\n}\n\ninput UserUpdateWithoutForgetPasswordDataInput {\n  username: String\n  password: String\n  name: String\n  gender: String\n  avatar: PhotoUpdateOneWithoutUserInput\n  birthdaycalendar: String\n  birthday: DateTime\n  birthplace: LocationUpdateOneWithoutBornsInput\n  residence: LocationUpdateOneWithoutLivesInput\n  uid: String\n  token: String\n  posts: PostUpdateManyWithoutAuthorInput\n  regStatus: RegStatusUpdateOneWithoutApplicantsInput\n  regTimes: Int\n  maxRegTimes: Int\n  families: FamilyUpdateManyWithoutFromInput\n  studies: SchoolEduUpdateManyWithoutStudentsInput\n  works: WorkUpdateManyWithoutWorkerInput\n  exam: CollegeEntranceExamUpdateOneWithoutStudentInput\n  sentMessages: MessageUpdateManyWithoutFromInput\n  receiveMessages: MessageUpdateManyWithoutToInput\n  groupMessages: GroupMessageUpdateManyWithoutFromInput\n  groups: GroupUpdateManyWithoutUsersInput\n  friends: UserUpdateManyInput\n  familyGroup: FamilyGroupUpdateOneWithoutUsersInput\n  creater: FamilyGroupUpdateOneWithoutCreaterInput\n  classMate: ClassMateUpdateManyWithoutStudentInput\n  workGroup: WorkGroupUpdateOneInput\n  colleagues: ColleagueUpdateManyWithoutWorkerInput\n  fromOldColleagues: OldColleagueUpdateManyWithoutFromInput\n  toOldColleagues: OldColleagueUpdateManyWithoutToInput\n  locationGroups: LocationGroupUpdateManyWithoutUsersInput\n  remmemberPassword: FindPassWordUpdateOneWithoutRemmemberInput\n}\n\ninput UserUpdateWithoutFromOldColleaguesDataInput {\n  username: String\n  password: String\n  name: String\n  gender: String\n  avatar: PhotoUpdateOneWithoutUserInput\n  birthdaycalendar: String\n  birthday: DateTime\n  birthplace: LocationUpdateOneWithoutBornsInput\n  residence: LocationUpdateOneWithoutLivesInput\n  uid: String\n  token: String\n  posts: PostUpdateManyWithoutAuthorInput\n  regStatus: RegStatusUpdateOneWithoutApplicantsInput\n  regTimes: Int\n  maxRegTimes: Int\n  families: FamilyUpdateManyWithoutFromInput\n  studies: SchoolEduUpdateManyWithoutStudentsInput\n  works: WorkUpdateManyWithoutWorkerInput\n  exam: CollegeEntranceExamUpdateOneWithoutStudentInput\n  sentMessages: MessageUpdateManyWithoutFromInput\n  receiveMessages: MessageUpdateManyWithoutToInput\n  groupMessages: GroupMessageUpdateManyWithoutFromInput\n  groups: GroupUpdateManyWithoutUsersInput\n  friends: UserUpdateManyInput\n  familyGroup: FamilyGroupUpdateOneWithoutUsersInput\n  creater: FamilyGroupUpdateOneWithoutCreaterInput\n  classMate: ClassMateUpdateManyWithoutStudentInput\n  workGroup: WorkGroupUpdateOneInput\n  colleagues: ColleagueUpdateManyWithoutWorkerInput\n  toOldColleagues: OldColleagueUpdateManyWithoutToInput\n  locationGroups: LocationGroupUpdateManyWithoutUsersInput\n  forgetPassword: FindPassWordUpdateOneWithoutForgetterInput\n  remmemberPassword: FindPassWordUpdateOneWithoutRemmemberInput\n}\n\ninput UserUpdateWithoutGroupMessagesDataInput {\n  username: String\n  password: String\n  name: String\n  gender: String\n  avatar: PhotoUpdateOneWithoutUserInput\n  birthdaycalendar: String\n  birthday: DateTime\n  birthplace: LocationUpdateOneWithoutBornsInput\n  residence: LocationUpdateOneWithoutLivesInput\n  uid: String\n  token: String\n  posts: PostUpdateManyWithoutAuthorInput\n  regStatus: RegStatusUpdateOneWithoutApplicantsInput\n  regTimes: Int\n  maxRegTimes: Int\n  families: FamilyUpdateManyWithoutFromInput\n  studies: SchoolEduUpdateManyWithoutStudentsInput\n  works: WorkUpdateManyWithoutWorkerInput\n  exam: CollegeEntranceExamUpdateOneWithoutStudentInput\n  sentMessages: MessageUpdateManyWithoutFromInput\n  receiveMessages: MessageUpdateManyWithoutToInput\n  groups: GroupUpdateManyWithoutUsersInput\n  friends: UserUpdateManyInput\n  familyGroup: FamilyGroupUpdateOneWithoutUsersInput\n  creater: FamilyGroupUpdateOneWithoutCreaterInput\n  classMate: ClassMateUpdateManyWithoutStudentInput\n  workGroup: WorkGroupUpdateOneInput\n  colleagues: ColleagueUpdateManyWithoutWorkerInput\n  fromOldColleagues: OldColleagueUpdateManyWithoutFromInput\n  toOldColleagues: OldColleagueUpdateManyWithoutToInput\n  locationGroups: LocationGroupUpdateManyWithoutUsersInput\n  forgetPassword: FindPassWordUpdateOneWithoutForgetterInput\n  remmemberPassword: FindPassWordUpdateOneWithoutRemmemberInput\n}\n\ninput UserUpdateWithoutGroupsDataInput {\n  username: String\n  password: String\n  name: String\n  gender: String\n  avatar: PhotoUpdateOneWithoutUserInput\n  birthdaycalendar: String\n  birthday: DateTime\n  birthplace: LocationUpdateOneWithoutBornsInput\n  residence: LocationUpdateOneWithoutLivesInput\n  uid: String\n  token: String\n  posts: PostUpdateManyWithoutAuthorInput\n  regStatus: RegStatusUpdateOneWithoutApplicantsInput\n  regTimes: Int\n  maxRegTimes: Int\n  families: FamilyUpdateManyWithoutFromInput\n  studies: SchoolEduUpdateManyWithoutStudentsInput\n  works: WorkUpdateManyWithoutWorkerInput\n  exam: CollegeEntranceExamUpdateOneWithoutStudentInput\n  sentMessages: MessageUpdateManyWithoutFromInput\n  receiveMessages: MessageUpdateManyWithoutToInput\n  groupMessages: GroupMessageUpdateManyWithoutFromInput\n  friends: UserUpdateManyInput\n  familyGroup: FamilyGroupUpdateOneWithoutUsersInput\n  creater: FamilyGroupUpdateOneWithoutCreaterInput\n  classMate: ClassMateUpdateManyWithoutStudentInput\n  workGroup: WorkGroupUpdateOneInput\n  colleagues: ColleagueUpdateManyWithoutWorkerInput\n  fromOldColleagues: OldColleagueUpdateManyWithoutFromInput\n  toOldColleagues: OldColleagueUpdateManyWithoutToInput\n  locationGroups: LocationGroupUpdateManyWithoutUsersInput\n  forgetPassword: FindPassWordUpdateOneWithoutForgetterInput\n  remmemberPassword: FindPassWordUpdateOneWithoutRemmemberInput\n}\n\ninput UserUpdateWithoutLocationGroupsDataInput {\n  username: String\n  password: String\n  name: String\n  gender: String\n  avatar: PhotoUpdateOneWithoutUserInput\n  birthdaycalendar: String\n  birthday: DateTime\n  birthplace: LocationUpdateOneWithoutBornsInput\n  residence: LocationUpdateOneWithoutLivesInput\n  uid: String\n  token: String\n  posts: PostUpdateManyWithoutAuthorInput\n  regStatus: RegStatusUpdateOneWithoutApplicantsInput\n  regTimes: Int\n  maxRegTimes: Int\n  families: FamilyUpdateManyWithoutFromInput\n  studies: SchoolEduUpdateManyWithoutStudentsInput\n  works: WorkUpdateManyWithoutWorkerInput\n  exam: CollegeEntranceExamUpdateOneWithoutStudentInput\n  sentMessages: MessageUpdateManyWithoutFromInput\n  receiveMessages: MessageUpdateManyWithoutToInput\n  groupMessages: GroupMessageUpdateManyWithoutFromInput\n  groups: GroupUpdateManyWithoutUsersInput\n  friends: UserUpdateManyInput\n  familyGroup: FamilyGroupUpdateOneWithoutUsersInput\n  creater: FamilyGroupUpdateOneWithoutCreaterInput\n  classMate: ClassMateUpdateManyWithoutStudentInput\n  workGroup: WorkGroupUpdateOneInput\n  colleagues: ColleagueUpdateManyWithoutWorkerInput\n  fromOldColleagues: OldColleagueUpdateManyWithoutFromInput\n  toOldColleagues: OldColleagueUpdateManyWithoutToInput\n  forgetPassword: FindPassWordUpdateOneWithoutForgetterInput\n  remmemberPassword: FindPassWordUpdateOneWithoutRemmemberInput\n}\n\ninput UserUpdateWithoutPostsDataInput {\n  username: String\n  password: String\n  name: String\n  gender: String\n  avatar: PhotoUpdateOneWithoutUserInput\n  birthdaycalendar: String\n  birthday: DateTime\n  birthplace: LocationUpdateOneWithoutBornsInput\n  residence: LocationUpdateOneWithoutLivesInput\n  uid: String\n  token: String\n  regStatus: RegStatusUpdateOneWithoutApplicantsInput\n  regTimes: Int\n  maxRegTimes: Int\n  families: FamilyUpdateManyWithoutFromInput\n  studies: SchoolEduUpdateManyWithoutStudentsInput\n  works: WorkUpdateManyWithoutWorkerInput\n  exam: CollegeEntranceExamUpdateOneWithoutStudentInput\n  sentMessages: MessageUpdateManyWithoutFromInput\n  receiveMessages: MessageUpdateManyWithoutToInput\n  groupMessages: GroupMessageUpdateManyWithoutFromInput\n  groups: GroupUpdateManyWithoutUsersInput\n  friends: UserUpdateManyInput\n  familyGroup: FamilyGroupUpdateOneWithoutUsersInput\n  creater: FamilyGroupUpdateOneWithoutCreaterInput\n  classMate: ClassMateUpdateManyWithoutStudentInput\n  workGroup: WorkGroupUpdateOneInput\n  colleagues: ColleagueUpdateManyWithoutWorkerInput\n  fromOldColleagues: OldColleagueUpdateManyWithoutFromInput\n  toOldColleagues: OldColleagueUpdateManyWithoutToInput\n  locationGroups: LocationGroupUpdateManyWithoutUsersInput\n  forgetPassword: FindPassWordUpdateOneWithoutForgetterInput\n  remmemberPassword: FindPassWordUpdateOneWithoutRemmemberInput\n}\n\ninput UserUpdateWithoutReceiveMessagesDataInput {\n  username: String\n  password: String\n  name: String\n  gender: String\n  avatar: PhotoUpdateOneWithoutUserInput\n  birthdaycalendar: String\n  birthday: DateTime\n  birthplace: LocationUpdateOneWithoutBornsInput\n  residence: LocationUpdateOneWithoutLivesInput\n  uid: String\n  token: String\n  posts: PostUpdateManyWithoutAuthorInput\n  regStatus: RegStatusUpdateOneWithoutApplicantsInput\n  regTimes: Int\n  maxRegTimes: Int\n  families: FamilyUpdateManyWithoutFromInput\n  studies: SchoolEduUpdateManyWithoutStudentsInput\n  works: WorkUpdateManyWithoutWorkerInput\n  exam: CollegeEntranceExamUpdateOneWithoutStudentInput\n  sentMessages: MessageUpdateManyWithoutFromInput\n  groupMessages: GroupMessageUpdateManyWithoutFromInput\n  groups: GroupUpdateManyWithoutUsersInput\n  friends: UserUpdateManyInput\n  familyGroup: FamilyGroupUpdateOneWithoutUsersInput\n  creater: FamilyGroupUpdateOneWithoutCreaterInput\n  classMate: ClassMateUpdateManyWithoutStudentInput\n  workGroup: WorkGroupUpdateOneInput\n  colleagues: ColleagueUpdateManyWithoutWorkerInput\n  fromOldColleagues: OldColleagueUpdateManyWithoutFromInput\n  toOldColleagues: OldColleagueUpdateManyWithoutToInput\n  locationGroups: LocationGroupUpdateManyWithoutUsersInput\n  forgetPassword: FindPassWordUpdateOneWithoutForgetterInput\n  remmemberPassword: FindPassWordUpdateOneWithoutRemmemberInput\n}\n\ninput UserUpdateWithoutRegStatusDataInput {\n  username: String\n  password: String\n  name: String\n  gender: String\n  avatar: PhotoUpdateOneWithoutUserInput\n  birthdaycalendar: String\n  birthday: DateTime\n  birthplace: LocationUpdateOneWithoutBornsInput\n  residence: LocationUpdateOneWithoutLivesInput\n  uid: String\n  token: String\n  posts: PostUpdateManyWithoutAuthorInput\n  regTimes: Int\n  maxRegTimes: Int\n  families: FamilyUpdateManyWithoutFromInput\n  studies: SchoolEduUpdateManyWithoutStudentsInput\n  works: WorkUpdateManyWithoutWorkerInput\n  exam: CollegeEntranceExamUpdateOneWithoutStudentInput\n  sentMessages: MessageUpdateManyWithoutFromInput\n  receiveMessages: MessageUpdateManyWithoutToInput\n  groupMessages: GroupMessageUpdateManyWithoutFromInput\n  groups: GroupUpdateManyWithoutUsersInput\n  friends: UserUpdateManyInput\n  familyGroup: FamilyGroupUpdateOneWithoutUsersInput\n  creater: FamilyGroupUpdateOneWithoutCreaterInput\n  classMate: ClassMateUpdateManyWithoutStudentInput\n  workGroup: WorkGroupUpdateOneInput\n  colleagues: ColleagueUpdateManyWithoutWorkerInput\n  fromOldColleagues: OldColleagueUpdateManyWithoutFromInput\n  toOldColleagues: OldColleagueUpdateManyWithoutToInput\n  locationGroups: LocationGroupUpdateManyWithoutUsersInput\n  forgetPassword: FindPassWordUpdateOneWithoutForgetterInput\n  remmemberPassword: FindPassWordUpdateOneWithoutRemmemberInput\n}\n\ninput UserUpdateWithoutRemmemberPasswordDataInput {\n  username: String\n  password: String\n  name: String\n  gender: String\n  avatar: PhotoUpdateOneWithoutUserInput\n  birthdaycalendar: String\n  birthday: DateTime\n  birthplace: LocationUpdateOneWithoutBornsInput\n  residence: LocationUpdateOneWithoutLivesInput\n  uid: String\n  token: String\n  posts: PostUpdateManyWithoutAuthorInput\n  regStatus: RegStatusUpdateOneWithoutApplicantsInput\n  regTimes: Int\n  maxRegTimes: Int\n  families: FamilyUpdateManyWithoutFromInput\n  studies: SchoolEduUpdateManyWithoutStudentsInput\n  works: WorkUpdateManyWithoutWorkerInput\n  exam: CollegeEntranceExamUpdateOneWithoutStudentInput\n  sentMessages: MessageUpdateManyWithoutFromInput\n  receiveMessages: MessageUpdateManyWithoutToInput\n  groupMessages: GroupMessageUpdateManyWithoutFromInput\n  groups: GroupUpdateManyWithoutUsersInput\n  friends: UserUpdateManyInput\n  familyGroup: FamilyGroupUpdateOneWithoutUsersInput\n  creater: FamilyGroupUpdateOneWithoutCreaterInput\n  classMate: ClassMateUpdateManyWithoutStudentInput\n  workGroup: WorkGroupUpdateOneInput\n  colleagues: ColleagueUpdateManyWithoutWorkerInput\n  fromOldColleagues: OldColleagueUpdateManyWithoutFromInput\n  toOldColleagues: OldColleagueUpdateManyWithoutToInput\n  locationGroups: LocationGroupUpdateManyWithoutUsersInput\n  forgetPassword: FindPassWordUpdateOneWithoutForgetterInput\n}\n\ninput UserUpdateWithoutResidenceDataInput {\n  username: String\n  password: String\n  name: String\n  gender: String\n  avatar: PhotoUpdateOneWithoutUserInput\n  birthdaycalendar: String\n  birthday: DateTime\n  birthplace: LocationUpdateOneWithoutBornsInput\n  uid: String\n  token: String\n  posts: PostUpdateManyWithoutAuthorInput\n  regStatus: RegStatusUpdateOneWithoutApplicantsInput\n  regTimes: Int\n  maxRegTimes: Int\n  families: FamilyUpdateManyWithoutFromInput\n  studies: SchoolEduUpdateManyWithoutStudentsInput\n  works: WorkUpdateManyWithoutWorkerInput\n  exam: CollegeEntranceExamUpdateOneWithoutStudentInput\n  sentMessages: MessageUpdateManyWithoutFromInput\n  receiveMessages: MessageUpdateManyWithoutToInput\n  groupMessages: GroupMessageUpdateManyWithoutFromInput\n  groups: GroupUpdateManyWithoutUsersInput\n  friends: UserUpdateManyInput\n  familyGroup: FamilyGroupUpdateOneWithoutUsersInput\n  creater: FamilyGroupUpdateOneWithoutCreaterInput\n  classMate: ClassMateUpdateManyWithoutStudentInput\n  workGroup: WorkGroupUpdateOneInput\n  colleagues: ColleagueUpdateManyWithoutWorkerInput\n  fromOldColleagues: OldColleagueUpdateManyWithoutFromInput\n  toOldColleagues: OldColleagueUpdateManyWithoutToInput\n  locationGroups: LocationGroupUpdateManyWithoutUsersInput\n  forgetPassword: FindPassWordUpdateOneWithoutForgetterInput\n  remmemberPassword: FindPassWordUpdateOneWithoutRemmemberInput\n}\n\ninput UserUpdateWithoutSentMessagesDataInput {\n  username: String\n  password: String\n  name: String\n  gender: String\n  avatar: PhotoUpdateOneWithoutUserInput\n  birthdaycalendar: String\n  birthday: DateTime\n  birthplace: LocationUpdateOneWithoutBornsInput\n  residence: LocationUpdateOneWithoutLivesInput\n  uid: String\n  token: String\n  posts: PostUpdateManyWithoutAuthorInput\n  regStatus: RegStatusUpdateOneWithoutApplicantsInput\n  regTimes: Int\n  maxRegTimes: Int\n  families: FamilyUpdateManyWithoutFromInput\n  studies: SchoolEduUpdateManyWithoutStudentsInput\n  works: WorkUpdateManyWithoutWorkerInput\n  exam: CollegeEntranceExamUpdateOneWithoutStudentInput\n  receiveMessages: MessageUpdateManyWithoutToInput\n  groupMessages: GroupMessageUpdateManyWithoutFromInput\n  groups: GroupUpdateManyWithoutUsersInput\n  friends: UserUpdateManyInput\n  familyGroup: FamilyGroupUpdateOneWithoutUsersInput\n  creater: FamilyGroupUpdateOneWithoutCreaterInput\n  classMate: ClassMateUpdateManyWithoutStudentInput\n  workGroup: WorkGroupUpdateOneInput\n  colleagues: ColleagueUpdateManyWithoutWorkerInput\n  fromOldColleagues: OldColleagueUpdateManyWithoutFromInput\n  toOldColleagues: OldColleagueUpdateManyWithoutToInput\n  locationGroups: LocationGroupUpdateManyWithoutUsersInput\n  forgetPassword: FindPassWordUpdateOneWithoutForgetterInput\n  remmemberPassword: FindPassWordUpdateOneWithoutRemmemberInput\n}\n\ninput UserUpdateWithoutStudiesDataInput {\n  username: String\n  password: String\n  name: String\n  gender: String\n  avatar: PhotoUpdateOneWithoutUserInput\n  birthdaycalendar: String\n  birthday: DateTime\n  birthplace: LocationUpdateOneWithoutBornsInput\n  residence: LocationUpdateOneWithoutLivesInput\n  uid: String\n  token: String\n  posts: PostUpdateManyWithoutAuthorInput\n  regStatus: RegStatusUpdateOneWithoutApplicantsInput\n  regTimes: Int\n  maxRegTimes: Int\n  families: FamilyUpdateManyWithoutFromInput\n  works: WorkUpdateManyWithoutWorkerInput\n  exam: CollegeEntranceExamUpdateOneWithoutStudentInput\n  sentMessages: MessageUpdateManyWithoutFromInput\n  receiveMessages: MessageUpdateManyWithoutToInput\n  groupMessages: GroupMessageUpdateManyWithoutFromInput\n  groups: GroupUpdateManyWithoutUsersInput\n  friends: UserUpdateManyInput\n  familyGroup: FamilyGroupUpdateOneWithoutUsersInput\n  creater: FamilyGroupUpdateOneWithoutCreaterInput\n  classMate: ClassMateUpdateManyWithoutStudentInput\n  workGroup: WorkGroupUpdateOneInput\n  colleagues: ColleagueUpdateManyWithoutWorkerInput\n  fromOldColleagues: OldColleagueUpdateManyWithoutFromInput\n  toOldColleagues: OldColleagueUpdateManyWithoutToInput\n  locationGroups: LocationGroupUpdateManyWithoutUsersInput\n  forgetPassword: FindPassWordUpdateOneWithoutForgetterInput\n  remmemberPassword: FindPassWordUpdateOneWithoutRemmemberInput\n}\n\ninput UserUpdateWithoutToOldColleaguesDataInput {\n  username: String\n  password: String\n  name: String\n  gender: String\n  avatar: PhotoUpdateOneWithoutUserInput\n  birthdaycalendar: String\n  birthday: DateTime\n  birthplace: LocationUpdateOneWithoutBornsInput\n  residence: LocationUpdateOneWithoutLivesInput\n  uid: String\n  token: String\n  posts: PostUpdateManyWithoutAuthorInput\n  regStatus: RegStatusUpdateOneWithoutApplicantsInput\n  regTimes: Int\n  maxRegTimes: Int\n  families: FamilyUpdateManyWithoutFromInput\n  studies: SchoolEduUpdateManyWithoutStudentsInput\n  works: WorkUpdateManyWithoutWorkerInput\n  exam: CollegeEntranceExamUpdateOneWithoutStudentInput\n  sentMessages: MessageUpdateManyWithoutFromInput\n  receiveMessages: MessageUpdateManyWithoutToInput\n  groupMessages: GroupMessageUpdateManyWithoutFromInput\n  groups: GroupUpdateManyWithoutUsersInput\n  friends: UserUpdateManyInput\n  familyGroup: FamilyGroupUpdateOneWithoutUsersInput\n  creater: FamilyGroupUpdateOneWithoutCreaterInput\n  classMate: ClassMateUpdateManyWithoutStudentInput\n  workGroup: WorkGroupUpdateOneInput\n  colleagues: ColleagueUpdateManyWithoutWorkerInput\n  fromOldColleagues: OldColleagueUpdateManyWithoutFromInput\n  locationGroups: LocationGroupUpdateManyWithoutUsersInput\n  forgetPassword: FindPassWordUpdateOneWithoutForgetterInput\n  remmemberPassword: FindPassWordUpdateOneWithoutRemmemberInput\n}\n\ninput UserUpdateWithoutWorksDataInput {\n  username: String\n  password: String\n  name: String\n  gender: String\n  avatar: PhotoUpdateOneWithoutUserInput\n  birthdaycalendar: String\n  birthday: DateTime\n  birthplace: LocationUpdateOneWithoutBornsInput\n  residence: LocationUpdateOneWithoutLivesInput\n  uid: String\n  token: String\n  posts: PostUpdateManyWithoutAuthorInput\n  regStatus: RegStatusUpdateOneWithoutApplicantsInput\n  regTimes: Int\n  maxRegTimes: Int\n  families: FamilyUpdateManyWithoutFromInput\n  studies: SchoolEduUpdateManyWithoutStudentsInput\n  exam: CollegeEntranceExamUpdateOneWithoutStudentInput\n  sentMessages: MessageUpdateManyWithoutFromInput\n  receiveMessages: MessageUpdateManyWithoutToInput\n  groupMessages: GroupMessageUpdateManyWithoutFromInput\n  groups: GroupUpdateManyWithoutUsersInput\n  friends: UserUpdateManyInput\n  familyGroup: FamilyGroupUpdateOneWithoutUsersInput\n  creater: FamilyGroupUpdateOneWithoutCreaterInput\n  classMate: ClassMateUpdateManyWithoutStudentInput\n  workGroup: WorkGroupUpdateOneInput\n  colleagues: ColleagueUpdateManyWithoutWorkerInput\n  fromOldColleagues: OldColleagueUpdateManyWithoutFromInput\n  toOldColleagues: OldColleagueUpdateManyWithoutToInput\n  locationGroups: LocationGroupUpdateManyWithoutUsersInput\n  forgetPassword: FindPassWordUpdateOneWithoutForgetterInput\n  remmemberPassword: FindPassWordUpdateOneWithoutRemmemberInput\n}\n\ninput UserUpdateWithWhereUniqueNestedInput {\n  where: UserWhereUniqueInput!\n  data: UserUpdateDataInput!\n}\n\ninput UserUpdateWithWhereUniqueWithoutBirthplaceInput {\n  where: UserWhereUniqueInput!\n  data: UserUpdateWithoutBirthplaceDataInput!\n}\n\ninput UserUpdateWithWhereUniqueWithoutFamilyGroupInput {\n  where: UserWhereUniqueInput!\n  data: UserUpdateWithoutFamilyGroupDataInput!\n}\n\ninput UserUpdateWithWhereUniqueWithoutGroupsInput {\n  where: UserWhereUniqueInput!\n  data: UserUpdateWithoutGroupsDataInput!\n}\n\ninput UserUpdateWithWhereUniqueWithoutLocationGroupsInput {\n  where: UserWhereUniqueInput!\n  data: UserUpdateWithoutLocationGroupsDataInput!\n}\n\ninput UserUpdateWithWhereUniqueWithoutRegStatusInput {\n  where: UserWhereUniqueInput!\n  data: UserUpdateWithoutRegStatusDataInput!\n}\n\ninput UserUpdateWithWhereUniqueWithoutRemmemberPasswordInput {\n  where: UserWhereUniqueInput!\n  data: UserUpdateWithoutRemmemberPasswordDataInput!\n}\n\ninput UserUpdateWithWhereUniqueWithoutResidenceInput {\n  where: UserWhereUniqueInput!\n  data: UserUpdateWithoutResidenceDataInput!\n}\n\ninput UserUpdateWithWhereUniqueWithoutStudiesInput {\n  where: UserWhereUniqueInput!\n  data: UserUpdateWithoutStudiesDataInput!\n}\n\ninput UserUpsertNestedInput {\n  update: UserUpdateDataInput!\n  create: UserCreateInput!\n}\n\ninput UserUpsertWithoutAvatarInput {\n  update: UserUpdateWithoutAvatarDataInput!\n  create: UserCreateWithoutAvatarInput!\n}\n\ninput UserUpsertWithoutClassMateInput {\n  update: UserUpdateWithoutClassMateDataInput!\n  create: UserCreateWithoutClassMateInput!\n}\n\ninput UserUpsertWithoutColleaguesInput {\n  update: UserUpdateWithoutColleaguesDataInput!\n  create: UserCreateWithoutColleaguesInput!\n}\n\ninput UserUpsertWithoutCreaterInput {\n  update: UserUpdateWithoutCreaterDataInput!\n  create: UserCreateWithoutCreaterInput!\n}\n\ninput UserUpsertWithoutExamInput {\n  update: UserUpdateWithoutExamDataInput!\n  create: UserCreateWithoutExamInput!\n}\n\ninput UserUpsertWithoutFamiliesInput {\n  update: UserUpdateWithoutFamiliesDataInput!\n  create: UserCreateWithoutFamiliesInput!\n}\n\ninput UserUpsertWithoutForgetPasswordInput {\n  update: UserUpdateWithoutForgetPasswordDataInput!\n  create: UserCreateWithoutForgetPasswordInput!\n}\n\ninput UserUpsertWithoutFromOldColleaguesInput {\n  update: UserUpdateWithoutFromOldColleaguesDataInput!\n  create: UserCreateWithoutFromOldColleaguesInput!\n}\n\ninput UserUpsertWithoutGroupMessagesInput {\n  update: UserUpdateWithoutGroupMessagesDataInput!\n  create: UserCreateWithoutGroupMessagesInput!\n}\n\ninput UserUpsertWithoutPostsInput {\n  update: UserUpdateWithoutPostsDataInput!\n  create: UserCreateWithoutPostsInput!\n}\n\ninput UserUpsertWithoutReceiveMessagesInput {\n  update: UserUpdateWithoutReceiveMessagesDataInput!\n  create: UserCreateWithoutReceiveMessagesInput!\n}\n\ninput UserUpsertWithoutSentMessagesInput {\n  update: UserUpdateWithoutSentMessagesDataInput!\n  create: UserCreateWithoutSentMessagesInput!\n}\n\ninput UserUpsertWithoutToOldColleaguesInput {\n  update: UserUpdateWithoutToOldColleaguesDataInput!\n  create: UserCreateWithoutToOldColleaguesInput!\n}\n\ninput UserUpsertWithoutWorksInput {\n  update: UserUpdateWithoutWorksDataInput!\n  create: UserCreateWithoutWorksInput!\n}\n\ninput UserUpsertWithWhereUniqueNestedInput {\n  where: UserWhereUniqueInput!\n  update: UserUpdateDataInput!\n  create: UserCreateInput!\n}\n\ninput UserUpsertWithWhereUniqueWithoutBirthplaceInput {\n  where: UserWhereUniqueInput!\n  update: UserUpdateWithoutBirthplaceDataInput!\n  create: UserCreateWithoutBirthplaceInput!\n}\n\ninput UserUpsertWithWhereUniqueWithoutFamilyGroupInput {\n  where: UserWhereUniqueInput!\n  update: UserUpdateWithoutFamilyGroupDataInput!\n  create: UserCreateWithoutFamilyGroupInput!\n}\n\ninput UserUpsertWithWhereUniqueWithoutGroupsInput {\n  where: UserWhereUniqueInput!\n  update: UserUpdateWithoutGroupsDataInput!\n  create: UserCreateWithoutGroupsInput!\n}\n\ninput UserUpsertWithWhereUniqueWithoutLocationGroupsInput {\n  where: UserWhereUniqueInput!\n  update: UserUpdateWithoutLocationGroupsDataInput!\n  create: UserCreateWithoutLocationGroupsInput!\n}\n\ninput UserUpsertWithWhereUniqueWithoutRegStatusInput {\n  where: UserWhereUniqueInput!\n  update: UserUpdateWithoutRegStatusDataInput!\n  create: UserCreateWithoutRegStatusInput!\n}\n\ninput UserUpsertWithWhereUniqueWithoutRemmemberPasswordInput {\n  where: UserWhereUniqueInput!\n  update: UserUpdateWithoutRemmemberPasswordDataInput!\n  create: UserCreateWithoutRemmemberPasswordInput!\n}\n\ninput UserUpsertWithWhereUniqueWithoutResidenceInput {\n  where: UserWhereUniqueInput!\n  update: UserUpdateWithoutResidenceDataInput!\n  create: UserCreateWithoutResidenceInput!\n}\n\ninput UserUpsertWithWhereUniqueWithoutStudiesInput {\n  where: UserWhereUniqueInput!\n  update: UserUpdateWithoutStudiesDataInput!\n  create: UserCreateWithoutStudiesInput!\n}\n\ninput UserWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  username: String\n  username_not: String\n  username_in: [String!]\n  username_not_in: [String!]\n  username_lt: String\n  username_lte: String\n  username_gt: String\n  username_gte: String\n  username_contains: String\n  username_not_contains: String\n  username_starts_with: String\n  username_not_starts_with: String\n  username_ends_with: String\n  username_not_ends_with: String\n  password: String\n  password_not: String\n  password_in: [String!]\n  password_not_in: [String!]\n  password_lt: String\n  password_lte: String\n  password_gt: String\n  password_gte: String\n  password_contains: String\n  password_not_contains: String\n  password_starts_with: String\n  password_not_starts_with: String\n  password_ends_with: String\n  password_not_ends_with: String\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  gender: String\n  gender_not: String\n  gender_in: [String!]\n  gender_not_in: [String!]\n  gender_lt: String\n  gender_lte: String\n  gender_gt: String\n  gender_gte: String\n  gender_contains: String\n  gender_not_contains: String\n  gender_starts_with: String\n  gender_not_starts_with: String\n  gender_ends_with: String\n  gender_not_ends_with: String\n  avatar: PhotoWhereInput\n  birthdaycalendar: String\n  birthdaycalendar_not: String\n  birthdaycalendar_in: [String!]\n  birthdaycalendar_not_in: [String!]\n  birthdaycalendar_lt: String\n  birthdaycalendar_lte: String\n  birthdaycalendar_gt: String\n  birthdaycalendar_gte: String\n  birthdaycalendar_contains: String\n  birthdaycalendar_not_contains: String\n  birthdaycalendar_starts_with: String\n  birthdaycalendar_not_starts_with: String\n  birthdaycalendar_ends_with: String\n  birthdaycalendar_not_ends_with: String\n  birthday: DateTime\n  birthday_not: DateTime\n  birthday_in: [DateTime!]\n  birthday_not_in: [DateTime!]\n  birthday_lt: DateTime\n  birthday_lte: DateTime\n  birthday_gt: DateTime\n  birthday_gte: DateTime\n  birthplace: LocationWhereInput\n  residence: LocationWhereInput\n  uid: String\n  uid_not: String\n  uid_in: [String!]\n  uid_not_in: [String!]\n  uid_lt: String\n  uid_lte: String\n  uid_gt: String\n  uid_gte: String\n  uid_contains: String\n  uid_not_contains: String\n  uid_starts_with: String\n  uid_not_starts_with: String\n  uid_ends_with: String\n  uid_not_ends_with: String\n  token: String\n  token_not: String\n  token_in: [String!]\n  token_not_in: [String!]\n  token_lt: String\n  token_lte: String\n  token_gt: String\n  token_gte: String\n  token_contains: String\n  token_not_contains: String\n  token_starts_with: String\n  token_not_starts_with: String\n  token_ends_with: String\n  token_not_ends_with: String\n  posts_every: PostWhereInput\n  posts_some: PostWhereInput\n  posts_none: PostWhereInput\n  createdAt: DateTime\n  createdAt_not: DateTime\n  createdAt_in: [DateTime!]\n  createdAt_not_in: [DateTime!]\n  createdAt_lt: DateTime\n  createdAt_lte: DateTime\n  createdAt_gt: DateTime\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n  updatedAt_not: DateTime\n  updatedAt_in: [DateTime!]\n  updatedAt_not_in: [DateTime!]\n  updatedAt_lt: DateTime\n  updatedAt_lte: DateTime\n  updatedAt_gt: DateTime\n  updatedAt_gte: DateTime\n  regStatus: RegStatusWhereInput\n  regTimes: Int\n  regTimes_not: Int\n  regTimes_in: [Int!]\n  regTimes_not_in: [Int!]\n  regTimes_lt: Int\n  regTimes_lte: Int\n  regTimes_gt: Int\n  regTimes_gte: Int\n  maxRegTimes: Int\n  maxRegTimes_not: Int\n  maxRegTimes_in: [Int!]\n  maxRegTimes_not_in: [Int!]\n  maxRegTimes_lt: Int\n  maxRegTimes_lte: Int\n  maxRegTimes_gt: Int\n  maxRegTimes_gte: Int\n  families_every: FamilyWhereInput\n  families_some: FamilyWhereInput\n  families_none: FamilyWhereInput\n  studies_every: SchoolEduWhereInput\n  studies_some: SchoolEduWhereInput\n  studies_none: SchoolEduWhereInput\n  works_every: WorkWhereInput\n  works_some: WorkWhereInput\n  works_none: WorkWhereInput\n  exam: CollegeEntranceExamWhereInput\n  sentMessages_every: MessageWhereInput\n  sentMessages_some: MessageWhereInput\n  sentMessages_none: MessageWhereInput\n  receiveMessages_every: MessageWhereInput\n  receiveMessages_some: MessageWhereInput\n  receiveMessages_none: MessageWhereInput\n  groupMessages_every: GroupMessageWhereInput\n  groupMessages_some: GroupMessageWhereInput\n  groupMessages_none: GroupMessageWhereInput\n  groups_every: GroupWhereInput\n  groups_some: GroupWhereInput\n  groups_none: GroupWhereInput\n  friends_every: UserWhereInput\n  friends_some: UserWhereInput\n  friends_none: UserWhereInput\n  familyGroup: FamilyGroupWhereInput\n  creater: FamilyGroupWhereInput\n  classMate_every: ClassMateWhereInput\n  classMate_some: ClassMateWhereInput\n  classMate_none: ClassMateWhereInput\n  workGroup: WorkGroupWhereInput\n  colleagues_every: ColleagueWhereInput\n  colleagues_some: ColleagueWhereInput\n  colleagues_none: ColleagueWhereInput\n  fromOldColleagues_every: OldColleagueWhereInput\n  fromOldColleagues_some: OldColleagueWhereInput\n  fromOldColleagues_none: OldColleagueWhereInput\n  toOldColleagues_every: OldColleagueWhereInput\n  toOldColleagues_some: OldColleagueWhereInput\n  toOldColleagues_none: OldColleagueWhereInput\n  locationGroups_every: LocationGroupWhereInput\n  locationGroups_some: LocationGroupWhereInput\n  locationGroups_none: LocationGroupWhereInput\n  forgetPassword: FindPassWordWhereInput\n  remmemberPassword: FindPassWordWhereInput\n  AND: [UserWhereInput!]\n  OR: [UserWhereInput!]\n  NOT: [UserWhereInput!]\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n  username: String\n  uid: String\n  token: String\n}\n\ntype Village {\n  id: ID!\n  code: String!\n  name: String!\n  street: Street!\n  people(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]\n}\n\ntype VillageConnection {\n  pageInfo: PageInfo!\n  edges: [VillageEdge]!\n  aggregate: AggregateVillage!\n}\n\ninput VillageCreateInput {\n  code: String!\n  name: String!\n  street: StreetCreateOneWithoutVillagesInput!\n  people: UserCreateManyInput\n}\n\ninput VillageCreateManyWithoutStreetInput {\n  create: [VillageCreateWithoutStreetInput!]\n  connect: [VillageWhereUniqueInput!]\n}\n\ninput VillageCreateOneInput {\n  create: VillageCreateInput\n  connect: VillageWhereUniqueInput\n}\n\ninput VillageCreateWithoutStreetInput {\n  code: String!\n  name: String!\n  people: UserCreateManyInput\n}\n\ntype VillageEdge {\n  node: Village!\n  cursor: String!\n}\n\nenum VillageOrderByInput {\n  id_ASC\n  id_DESC\n  code_ASC\n  code_DESC\n  name_ASC\n  name_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype VillagePreviousValues {\n  id: ID!\n  code: String!\n  name: String!\n}\n\ninput VillageScalarWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  code: String\n  code_not: String\n  code_in: [String!]\n  code_not_in: [String!]\n  code_lt: String\n  code_lte: String\n  code_gt: String\n  code_gte: String\n  code_contains: String\n  code_not_contains: String\n  code_starts_with: String\n  code_not_starts_with: String\n  code_ends_with: String\n  code_not_ends_with: String\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  AND: [VillageScalarWhereInput!]\n  OR: [VillageScalarWhereInput!]\n  NOT: [VillageScalarWhereInput!]\n}\n\ntype VillageSubscriptionPayload {\n  mutation: MutationType!\n  node: Village\n  updatedFields: [String!]\n  previousValues: VillagePreviousValues\n}\n\ninput VillageSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: VillageWhereInput\n  AND: [VillageSubscriptionWhereInput!]\n  OR: [VillageSubscriptionWhereInput!]\n  NOT: [VillageSubscriptionWhereInput!]\n}\n\ninput VillageUpdateDataInput {\n  code: String\n  name: String\n  street: StreetUpdateOneRequiredWithoutVillagesInput\n  people: UserUpdateManyInput\n}\n\ninput VillageUpdateInput {\n  code: String\n  name: String\n  street: StreetUpdateOneRequiredWithoutVillagesInput\n  people: UserUpdateManyInput\n}\n\ninput VillageUpdateManyDataInput {\n  code: String\n  name: String\n}\n\ninput VillageUpdateManyMutationInput {\n  code: String\n  name: String\n}\n\ninput VillageUpdateManyWithoutStreetInput {\n  create: [VillageCreateWithoutStreetInput!]\n  delete: [VillageWhereUniqueInput!]\n  connect: [VillageWhereUniqueInput!]\n  disconnect: [VillageWhereUniqueInput!]\n  update: [VillageUpdateWithWhereUniqueWithoutStreetInput!]\n  upsert: [VillageUpsertWithWhereUniqueWithoutStreetInput!]\n  deleteMany: [VillageScalarWhereInput!]\n  updateMany: [VillageUpdateManyWithWhereNestedInput!]\n}\n\ninput VillageUpdateManyWithWhereNestedInput {\n  where: VillageScalarWhereInput!\n  data: VillageUpdateManyDataInput!\n}\n\ninput VillageUpdateOneInput {\n  create: VillageCreateInput\n  update: VillageUpdateDataInput\n  upsert: VillageUpsertNestedInput\n  delete: Boolean\n  disconnect: Boolean\n  connect: VillageWhereUniqueInput\n}\n\ninput VillageUpdateWithoutStreetDataInput {\n  code: String\n  name: String\n  people: UserUpdateManyInput\n}\n\ninput VillageUpdateWithWhereUniqueWithoutStreetInput {\n  where: VillageWhereUniqueInput!\n  data: VillageUpdateWithoutStreetDataInput!\n}\n\ninput VillageUpsertNestedInput {\n  update: VillageUpdateDataInput!\n  create: VillageCreateInput!\n}\n\ninput VillageUpsertWithWhereUniqueWithoutStreetInput {\n  where: VillageWhereUniqueInput!\n  update: VillageUpdateWithoutStreetDataInput!\n  create: VillageCreateWithoutStreetInput!\n}\n\ninput VillageWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  code: String\n  code_not: String\n  code_in: [String!]\n  code_not_in: [String!]\n  code_lt: String\n  code_lte: String\n  code_gt: String\n  code_gte: String\n  code_contains: String\n  code_not_contains: String\n  code_starts_with: String\n  code_not_starts_with: String\n  code_ends_with: String\n  code_not_ends_with: String\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  street: StreetWhereInput\n  people_every: UserWhereInput\n  people_some: UserWhereInput\n  people_none: UserWhereInput\n  AND: [VillageWhereInput!]\n  OR: [VillageWhereInput!]\n  NOT: [VillageWhereInput!]\n}\n\ninput VillageWhereUniqueInput {\n  id: ID\n  code: String\n}\n\ntype Work {\n  id: ID!\n  startTime: DateTime\n  endTime: DateTime\n  company: Company\n  department: String\n  post: Station\n  jobContent: String\n  worker: User\n}\n\ntype WorkConnection {\n  pageInfo: PageInfo!\n  edges: [WorkEdge]!\n  aggregate: AggregateWork!\n}\n\ninput WorkCreateInput {\n  startTime: DateTime\n  endTime: DateTime\n  company: CompanyCreateOneWithoutWorksInput\n  department: String\n  post: StationCreateOneInput\n  jobContent: String\n  worker: UserCreateOneWithoutWorksInput\n}\n\ninput WorkCreateManyWithoutCompanyInput {\n  create: [WorkCreateWithoutCompanyInput!]\n  connect: [WorkWhereUniqueInput!]\n}\n\ninput WorkCreateManyWithoutWorkerInput {\n  create: [WorkCreateWithoutWorkerInput!]\n  connect: [WorkWhereUniqueInput!]\n}\n\ninput WorkCreateWithoutCompanyInput {\n  startTime: DateTime\n  endTime: DateTime\n  department: String\n  post: StationCreateOneInput\n  jobContent: String\n  worker: UserCreateOneWithoutWorksInput\n}\n\ninput WorkCreateWithoutWorkerInput {\n  startTime: DateTime\n  endTime: DateTime\n  company: CompanyCreateOneWithoutWorksInput\n  department: String\n  post: StationCreateOneInput\n  jobContent: String\n}\n\ntype WorkEdge {\n  node: Work!\n  cursor: String!\n}\n\ntype WorkGroup {\n  id: ID!\n  company: Company\n  colleagues(where: ColleagueWhereInput, orderBy: ColleagueOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Colleague!]\n}\n\ntype WorkGroupConnection {\n  pageInfo: PageInfo!\n  edges: [WorkGroupEdge]!\n  aggregate: AggregateWorkGroup!\n}\n\ninput WorkGroupCreateInput {\n  company: CompanyCreateOneWithoutWorkGroupInput\n  colleagues: ColleagueCreateManyWithoutGroupInput\n}\n\ninput WorkGroupCreateOneInput {\n  create: WorkGroupCreateInput\n  connect: WorkGroupWhereUniqueInput\n}\n\ninput WorkGroupCreateOneWithoutColleaguesInput {\n  create: WorkGroupCreateWithoutColleaguesInput\n  connect: WorkGroupWhereUniqueInput\n}\n\ninput WorkGroupCreateOneWithoutCompanyInput {\n  create: WorkGroupCreateWithoutCompanyInput\n  connect: WorkGroupWhereUniqueInput\n}\n\ninput WorkGroupCreateWithoutColleaguesInput {\n  company: CompanyCreateOneWithoutWorkGroupInput\n}\n\ninput WorkGroupCreateWithoutCompanyInput {\n  colleagues: ColleagueCreateManyWithoutGroupInput\n}\n\ntype WorkGroupEdge {\n  node: WorkGroup!\n  cursor: String!\n}\n\nenum WorkGroupOrderByInput {\n  id_ASC\n  id_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype WorkGroupPreviousValues {\n  id: ID!\n}\n\ntype WorkGroupSubscriptionPayload {\n  mutation: MutationType!\n  node: WorkGroup\n  updatedFields: [String!]\n  previousValues: WorkGroupPreviousValues\n}\n\ninput WorkGroupSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: WorkGroupWhereInput\n  AND: [WorkGroupSubscriptionWhereInput!]\n  OR: [WorkGroupSubscriptionWhereInput!]\n  NOT: [WorkGroupSubscriptionWhereInput!]\n}\n\ninput WorkGroupUpdateDataInput {\n  company: CompanyUpdateOneWithoutWorkGroupInput\n  colleagues: ColleagueUpdateManyWithoutGroupInput\n}\n\ninput WorkGroupUpdateInput {\n  company: CompanyUpdateOneWithoutWorkGroupInput\n  colleagues: ColleagueUpdateManyWithoutGroupInput\n}\n\ninput WorkGroupUpdateOneInput {\n  create: WorkGroupCreateInput\n  update: WorkGroupUpdateDataInput\n  upsert: WorkGroupUpsertNestedInput\n  delete: Boolean\n  disconnect: Boolean\n  connect: WorkGroupWhereUniqueInput\n}\n\ninput WorkGroupUpdateOneWithoutColleaguesInput {\n  create: WorkGroupCreateWithoutColleaguesInput\n  update: WorkGroupUpdateWithoutColleaguesDataInput\n  upsert: WorkGroupUpsertWithoutColleaguesInput\n  delete: Boolean\n  disconnect: Boolean\n  connect: WorkGroupWhereUniqueInput\n}\n\ninput WorkGroupUpdateOneWithoutCompanyInput {\n  create: WorkGroupCreateWithoutCompanyInput\n  update: WorkGroupUpdateWithoutCompanyDataInput\n  upsert: WorkGroupUpsertWithoutCompanyInput\n  delete: Boolean\n  disconnect: Boolean\n  connect: WorkGroupWhereUniqueInput\n}\n\ninput WorkGroupUpdateWithoutColleaguesDataInput {\n  company: CompanyUpdateOneWithoutWorkGroupInput\n}\n\ninput WorkGroupUpdateWithoutCompanyDataInput {\n  colleagues: ColleagueUpdateManyWithoutGroupInput\n}\n\ninput WorkGroupUpsertNestedInput {\n  update: WorkGroupUpdateDataInput!\n  create: WorkGroupCreateInput!\n}\n\ninput WorkGroupUpsertWithoutColleaguesInput {\n  update: WorkGroupUpdateWithoutColleaguesDataInput!\n  create: WorkGroupCreateWithoutColleaguesInput!\n}\n\ninput WorkGroupUpsertWithoutCompanyInput {\n  update: WorkGroupUpdateWithoutCompanyDataInput!\n  create: WorkGroupCreateWithoutCompanyInput!\n}\n\ninput WorkGroupWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  company: CompanyWhereInput\n  colleagues_every: ColleagueWhereInput\n  colleagues_some: ColleagueWhereInput\n  colleagues_none: ColleagueWhereInput\n  AND: [WorkGroupWhereInput!]\n  OR: [WorkGroupWhereInput!]\n  NOT: [WorkGroupWhereInput!]\n}\n\ninput WorkGroupWhereUniqueInput {\n  id: ID\n}\n\nenum WorkOrderByInput {\n  id_ASC\n  id_DESC\n  startTime_ASC\n  startTime_DESC\n  endTime_ASC\n  endTime_DESC\n  department_ASC\n  department_DESC\n  jobContent_ASC\n  jobContent_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype WorkPreviousValues {\n  id: ID!\n  startTime: DateTime\n  endTime: DateTime\n  department: String\n  jobContent: String\n}\n\ninput WorkScalarWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  startTime: DateTime\n  startTime_not: DateTime\n  startTime_in: [DateTime!]\n  startTime_not_in: [DateTime!]\n  startTime_lt: DateTime\n  startTime_lte: DateTime\n  startTime_gt: DateTime\n  startTime_gte: DateTime\n  endTime: DateTime\n  endTime_not: DateTime\n  endTime_in: [DateTime!]\n  endTime_not_in: [DateTime!]\n  endTime_lt: DateTime\n  endTime_lte: DateTime\n  endTime_gt: DateTime\n  endTime_gte: DateTime\n  department: String\n  department_not: String\n  department_in: [String!]\n  department_not_in: [String!]\n  department_lt: String\n  department_lte: String\n  department_gt: String\n  department_gte: String\n  department_contains: String\n  department_not_contains: String\n  department_starts_with: String\n  department_not_starts_with: String\n  department_ends_with: String\n  department_not_ends_with: String\n  jobContent: String\n  jobContent_not: String\n  jobContent_in: [String!]\n  jobContent_not_in: [String!]\n  jobContent_lt: String\n  jobContent_lte: String\n  jobContent_gt: String\n  jobContent_gte: String\n  jobContent_contains: String\n  jobContent_not_contains: String\n  jobContent_starts_with: String\n  jobContent_not_starts_with: String\n  jobContent_ends_with: String\n  jobContent_not_ends_with: String\n  AND: [WorkScalarWhereInput!]\n  OR: [WorkScalarWhereInput!]\n  NOT: [WorkScalarWhereInput!]\n}\n\ntype WorkSubscriptionPayload {\n  mutation: MutationType!\n  node: Work\n  updatedFields: [String!]\n  previousValues: WorkPreviousValues\n}\n\ninput WorkSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: WorkWhereInput\n  AND: [WorkSubscriptionWhereInput!]\n  OR: [WorkSubscriptionWhereInput!]\n  NOT: [WorkSubscriptionWhereInput!]\n}\n\ninput WorkUpdateInput {\n  startTime: DateTime\n  endTime: DateTime\n  company: CompanyUpdateOneWithoutWorksInput\n  department: String\n  post: StationUpdateOneInput\n  jobContent: String\n  worker: UserUpdateOneWithoutWorksInput\n}\n\ninput WorkUpdateManyDataInput {\n  startTime: DateTime\n  endTime: DateTime\n  department: String\n  jobContent: String\n}\n\ninput WorkUpdateManyMutationInput {\n  startTime: DateTime\n  endTime: DateTime\n  department: String\n  jobContent: String\n}\n\ninput WorkUpdateManyWithoutCompanyInput {\n  create: [WorkCreateWithoutCompanyInput!]\n  delete: [WorkWhereUniqueInput!]\n  connect: [WorkWhereUniqueInput!]\n  disconnect: [WorkWhereUniqueInput!]\n  update: [WorkUpdateWithWhereUniqueWithoutCompanyInput!]\n  upsert: [WorkUpsertWithWhereUniqueWithoutCompanyInput!]\n  deleteMany: [WorkScalarWhereInput!]\n  updateMany: [WorkUpdateManyWithWhereNestedInput!]\n}\n\ninput WorkUpdateManyWithoutWorkerInput {\n  create: [WorkCreateWithoutWorkerInput!]\n  delete: [WorkWhereUniqueInput!]\n  connect: [WorkWhereUniqueInput!]\n  disconnect: [WorkWhereUniqueInput!]\n  update: [WorkUpdateWithWhereUniqueWithoutWorkerInput!]\n  upsert: [WorkUpsertWithWhereUniqueWithoutWorkerInput!]\n  deleteMany: [WorkScalarWhereInput!]\n  updateMany: [WorkUpdateManyWithWhereNestedInput!]\n}\n\ninput WorkUpdateManyWithWhereNestedInput {\n  where: WorkScalarWhereInput!\n  data: WorkUpdateManyDataInput!\n}\n\ninput WorkUpdateWithoutCompanyDataInput {\n  startTime: DateTime\n  endTime: DateTime\n  department: String\n  post: StationUpdateOneInput\n  jobContent: String\n  worker: UserUpdateOneWithoutWorksInput\n}\n\ninput WorkUpdateWithoutWorkerDataInput {\n  startTime: DateTime\n  endTime: DateTime\n  company: CompanyUpdateOneWithoutWorksInput\n  department: String\n  post: StationUpdateOneInput\n  jobContent: String\n}\n\ninput WorkUpdateWithWhereUniqueWithoutCompanyInput {\n  where: WorkWhereUniqueInput!\n  data: WorkUpdateWithoutCompanyDataInput!\n}\n\ninput WorkUpdateWithWhereUniqueWithoutWorkerInput {\n  where: WorkWhereUniqueInput!\n  data: WorkUpdateWithoutWorkerDataInput!\n}\n\ninput WorkUpsertWithWhereUniqueWithoutCompanyInput {\n  where: WorkWhereUniqueInput!\n  update: WorkUpdateWithoutCompanyDataInput!\n  create: WorkCreateWithoutCompanyInput!\n}\n\ninput WorkUpsertWithWhereUniqueWithoutWorkerInput {\n  where: WorkWhereUniqueInput!\n  update: WorkUpdateWithoutWorkerDataInput!\n  create: WorkCreateWithoutWorkerInput!\n}\n\ninput WorkWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  startTime: DateTime\n  startTime_not: DateTime\n  startTime_in: [DateTime!]\n  startTime_not_in: [DateTime!]\n  startTime_lt: DateTime\n  startTime_lte: DateTime\n  startTime_gt: DateTime\n  startTime_gte: DateTime\n  endTime: DateTime\n  endTime_not: DateTime\n  endTime_in: [DateTime!]\n  endTime_not_in: [DateTime!]\n  endTime_lt: DateTime\n  endTime_lte: DateTime\n  endTime_gt: DateTime\n  endTime_gte: DateTime\n  company: CompanyWhereInput\n  department: String\n  department_not: String\n  department_in: [String!]\n  department_not_in: [String!]\n  department_lt: String\n  department_lte: String\n  department_gt: String\n  department_gte: String\n  department_contains: String\n  department_not_contains: String\n  department_starts_with: String\n  department_not_starts_with: String\n  department_ends_with: String\n  department_not_ends_with: String\n  post: StationWhereInput\n  jobContent: String\n  jobContent_not: String\n  jobContent_in: [String!]\n  jobContent_not_in: [String!]\n  jobContent_lt: String\n  jobContent_lte: String\n  jobContent_gt: String\n  jobContent_gte: String\n  jobContent_contains: String\n  jobContent_not_contains: String\n  jobContent_starts_with: String\n  jobContent_not_starts_with: String\n  jobContent_ends_with: String\n  jobContent_not_ends_with: String\n  worker: UserWhereInput\n  AND: [WorkWhereInput!]\n  OR: [WorkWhereInput!]\n  NOT: [WorkWhereInput!]\n}\n\ninput WorkWhereUniqueInput {\n  id: ID\n}\n"
};
//# sourceMappingURL=prisma-schema.js.map