"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.typeDefs = void 0;

var _apolloServerExpress = require("apollo-server-express");

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n  scalar DateTime\n\n  input BirthdayInput {\n    calendar: String!\n    date: String!\n  }\n\n  input PlaceInput {\n    province:String!\n    city:String\n    area:String\n    street:String\n    village:String\n  }\n\n  type PageInfo {\n    hasNextPage: Boolean!\n    hasPreviousPage: Boolean!\n    startCursor: String\n    endCursor: String\n  }\n\n\n\n  type Query {\n    me: User\n    searchUser(username:String!):User\n    cities(code:String!):[City]\n    areas(code:String!):[Area]\n    streets(code:String!):[Street]\n    villages(code:String!):[Village]\n    families:[Family]\n    findPasswords:[FindPassWord]\n    getFamiliesById(id:String):[Family]\n    getSchools(locationName:String,kind:String):[School]\n    getMajors(majorName:String):[Major]\n    getUniversities(universityName:String):[University]\n    getExamBasicInfo:CollegeEntranceExam\n    getRegStatus:RegStatus\n    getRegStatusApplicants(education:String,universityId:String,majorId:String):[User]\n    getRegStatusApplicantsById(regStatusId:String):[User]\n    getFamilyGroups:[FamilyGroup]\n    students(schoolEduId:String):[User]\n    classGroups(schoolEduId:String):[ClassGroup]\n    workGroups(companyId:String):[WorkGroup]\n    stations(text:String):[Station]\n    colleagues(companyId:String):[User]\n    oldColleagues(startTime:String,endTime:String,companyId:String):[User]\n    myOldColleagues(companyId:String):[OldColleague]\n    locationGroups:[LocationGroup]\n    locationGroupUsers(locationGroupId:String):[User]\n    photo(id:String,name:String):Photo\n    userInfo(id:String):User\n    messages:[Message]\n    bootInfo:BootCount\n    visitCount:VisitCount\n    advertisements:[Advertisement]\n    products:[Product]\n    loveMatch:LoveMatching\n    skills(name:String):[Skill]\n    projects:[Project]\n    partnerConditions(projectId:String):[PartnerCondition]\n    mypartnerConditions:[PartnerCondition]\n    feeSettings:[FeeSetting]\n  }\n\n  type Mutation {\n    createDraft(title: String!, content: String!, authorEmail: String!): Post!\n    deletePost(id: ID!): Post\n    publish(id: ID!): Post\n    signup(username: String!, password: String!,deviceId:String!): AuthPayload!\n    login(username: String!, password: String!): AuthPayload!\n    changePassword(currentPassword:String!,newPassword: String!):User!\n    findPassword(forgetterId:String!): FindPassWord\n    addBasicInfo(name:String!,gender:String!,birthday:BirthdayInput!,birthplace:PlaceInput!,residence:PlaceInput!):User!\n    createFamily(name:String!,relationship:String!,spouseId:String):Family\n    updateFamily(id:ID!, name:String,relationship:String,spouseId:String,status:String):Family\n    deleteFamily(familyId:ID!,toId:ID!):Family\n    connectFamily(relativeId:ID!,familyId:ID!,name:String,relationship:String):Family\n    confirmFamily(familyId:ID!):Family\n    addLocation(location:PlaceInput,locationName:String):Location\n    addSchool(name:String,kind:String,locationName:String):School\n    addStudy(year:String,schoolId:String,majorId:String,grade:Int,className:String):SchoolEdu\n    addOrUpdateWork(companyName:String,startTime:String,endTime:String,department:String,stationId:String,updateId:String):Work\n    addExamBasicInfo(province:String, section:String, score:String, specialScore:String, examineeCardNumber:String):CollegeEntranceExam\n    updateExamBasicInfo(province:String, section:String, score:String, specialScore:String, examineeCardNumber:String):CollegeEntranceExam\n    addRegStatus(education:String,universityId:String,majorId:String):RegStatus\n    cancelRegStatus(id:String):RegStatus\n    addClassGroup(name:String,schoolEduId:String,studentId:String):ClassGroup\n    confirmClassGroup(schoolEduId:String,studentId:String):ClassGroup\n    addWorkGroup(companyId:String,workerId:String):WorkGroup\n    confirmWorkGroup(companyId:String,workerId:String):WorkGroup\n    addColleague(companyId:String,workerId:String):Colleague\n    confirmColleague(colleagueId:String):Colleague\n    addOldColleague(companyId:String,workerId:String):OldColleague\n    confirmOldColleague(companyId:String,workerId:String):OldColleague\n    postPhoto(uri:String):Photo\n    addAvatar(uri:String):Photo\n    sendMessage(toId:String,text:String,image:String):Message\n    sendGroupMessage(type:String,toId:String,text:String,image:String):GroupMessage\n    addAdvertisement(url:String,startTime:String):Advertisement\n    newTrade(productId:String,number:Int,amount:Float):Trade\n    addOrUpdateLoveSetting(myHeight:Int,myWeight:Int,otherHeightMin:Int,otherHeightMax:Int,\n      otherWeightMin:Int,otherWeightMax:Int,otherAgeMin:Int,otherAgeMax:Int,dateTime:String,datePlace:String\n    ):LoveSetting\n    addOrUpdateLoveSignUp:LoveSignUp\n    addSkill(name:String):Skill\n    createProject(name:String,content:String):Project\n    addPartnerCondition(skillName:String,number:Int,place:String,projectId:String):PartnerCondition\n    deletePartnerCondition(id:String):PartnerCondition\n    changePartner(conditionId:String,uid:String):PartnerCondition\n    refreshPartner(conditionId:String):PartnerCondition\n    refusePartner(conditionId:String):PartnerCondition\n  }\n\n  type Subscription {\n    familyConnected(familyIds:[ID!]): Family,\n    familyChanged:Info\n    familyGroupChanged:Info\n    classGroupChanged:Info\n    studentsAdded:Info\n    workGroupChanged:Info\n    colleaguesAdded:Info\n    myOldcolleaguesChanged:Info\n    locationGroupChanged:LocationGroupChangedInfo\n    locationGroupAdded(userId:String):LocationGroup\n    messageAdded(userId: String):Message\n    gMessageAdded(userId: String, groupIds: [String]):GroupMessage\n  }\n\n  type LocationGroupChangedInfo{\n    toId:String\n    groupId:String\n    userid:String\n    username:String\n    userAvatar:String\n    type:String\n  }\n\n  type Info {\n    text:String\n  }\n\n  type BatchPayload {\n    count: Int!\n  }\n\n  type AuthPayload {\n    token: String!\n    user: User!\n  }\n\n  type Post {\n    id: ID!\n    createdAt: DateTime!\n    updatedAt: DateTime!\n    isPublished: Boolean!\n    title: String!\n    content: String!\n    author: User!\n  }\n\n  type User {\n    id: ID!\n    username: String!\n    name:String\n    gender:String\n    avatar:Photo\n    birthdaycalendar:String\n    birthday:String\n    birthplace:Location\n    residence:Location\n    posts: [Post!]!\n    createdAt: String!\n    families:[Family]\n    studies:[SchoolEdu]\n    works:[Work]\n    exam:CollegeEntranceExam\n    regStatus:RegStatus\n    regTimes:Int\n    messages:[Message]\n    groupMessages:[GroupMessage]\n    friends: [User]\n    relativefamilyGroups:[FamilyGroup]\n    classGroups:[ClassGroup]\n    classMate:[ClassMate]\n    workGroups:[WorkGroup]\n    colleagues:[Colleague]\n    trades:[Trade]\n    loveWoman:LoveMatching\n    loveMan:LoveMatching\n    locationGroups:[LocationGroup]\n    loveSetting:LoveSetting\n    signUpLove:LoveSignUp\n    skills:[Skill]\n    projects:[Project]\n    fitConditions:[PartnerCondition]\n    nofitConditions:[PartnerCondition]\n\n  }\n\n  type Photo {\n    id:ID\n    name:String\n    url:String\n    user:User\n  }\n\n\n  type Person {\n    id: ID!\n    name:String!\n    user:User\n    asFather: [FamilyGroup]\n    asMother: [FamilyGroup]\n  }\n\n  type Family {\n    id: ID!\n    from:User!\n    to:Person!\n    relationship:String!\n    status:String!\n    spouse:Family\n  }\n\n  type BasicInfo {\n    id: ID!\n    user:User!\n  }\n\n  type Work{\n    id:ID!\n    startTime:String\n    endTime:String\n    company:Company\n    department:String\n    post:Station\n    jobContent:String\n    worker:User\n  }\n\n  type Company{\n    id: ID! \n    name:String \n    code:String \n    establishmentDate:String\n    representative:String\n    location:Location\n    BusinessScope:String\n    works:[Work!]!\n    workGroup:WorkGroup\n  }\n\n  \n  enum Educationkind {\n    PrimarySchool, #\u521D\u7B49\u6559\u80B2-\u5C0F\u5B66\n    JuniorMiddleSchool,#\u4E2D\u7B49\u6559\u80B2-\u521D\u4E2D\n    HighSchool, #\u4E2D\u7B49\u6559\u80B2-\u9AD8\u4E2D\n    VocationalHighSchool, #\u4E2D\u7B49\u6559\u80B2-\u804C\u4E1A\u4E2D\u5B66\u6559\u80B2\n    TechnicalSchool, #\u4E2D\u7B49\u6559\u80B2-\u6280\u5DE5\u5B66\u6821\u6559\u80B2\n    SecondarySpecializedSchool, #\u4E2D\u7B49\u6559\u80B2-\u4E2D\u7B49\u4E13\u4E1A\u6559\u80B2\n    JuniorCollege,#\u666E\u901A\u9AD8\u7B49\u6559\u80B2-\u5927\u4E13\n    Undergraduate,#\u666E\u901A\u9AD8\u7B49\u6559\u80B2-\u672C\u79D1\n    Master,#\u666E\u901A\u9AD8\u7B49\u6559\u80B2-\u7855\u58EB\u7814\u7A76\u751F\n    Doctor,#\u666E\u901A\u9AD8\u7B49\u6559\u80B2-\u535A\u58EB\u7814\u7A76\u751F\n    JuniorToCollege ,#\u6210\u4EBA\u9AD8\u7B49\u6559\u80B2-\u4E13\u79D1\u8D77\u70B9\u672C\u79D1\n    HighToCollege,#\u6210\u4EBA\u9AD8\u7B49\u6559\u80B2-\u9AD8\u4E2D\u8D77\u70B9\u5347\u672C\u79D1\n    HighToJunior,#\u6210\u4EBA\u9AD8\u7B49\u6559\u80B2-\u9AD8\u4E2D\u8D77\u70B9\u5347\u4E13\u79D1\n  }\n\n\n\n  # \u5B66\u6821\n  type School {\n    id: ID!\n    name:String\n    kind:Educationkind\n    location:Location\n  }\n  # \u5B66\u6821\u5F00\u8BBE\u7684\u8BFE\u7A0B\n  type SchoolEdu{\n    id: ID!\n    school:School\n    startTime:String!\n    major:Major\n    grade:Int\n    className:String\n    students:[User]\n  }\n\n  type Major {\n    id: ID!\n    name: String!\n    category:String!\n    education:Educationkind!\n    universities:[University!]!\n  }\n\n  type University {\n    id: ID!\n    name: String!\n    education:Educationkind\n    department:String\n    location:String\n    desc:String\n  }\n\n  type CollegeEntranceExam {\n    id: ID!\n    province:Province!\n    subject:String!\n    culscore:Float!\n    proscore:Float\n    candidatenum:String!\n    times:Int\n    student:User!\n  }\n\n  type RegStatus {\n    id: ID!\n    education:Educationkind!\n    university:University\n    major:Major!\n    applicants:[User]\n    messages:[GroupMessage]\n  }\n\n  type Location {\n    id: ID! \n    name:String\n    province:Province\n    city:City\n    area:Area\n    street:Street\n    village:Village\n    schools:[School]\n    companies:[Company]\n    universities:[University]\n    borns:[User]\n    lives:[User]\n  }\n\n  type Province {\n    id:ID!\n    code:String!\n    name:String!\n    cities:[City!]!\n    people:[User!]!\n  }\n\n  type City {\n    id:ID!\n    code:String!\n    name:String!\n    province:Province!\n    areas:[Area!]!\n    people:[User!]!\n  }\n\n  type Area {\n    id:ID!\n    code:String!\n    name:String!\n    city:City!\n    towns:[Street!]!\n    people:[User!]!\n  }\n\n  type Street {\n    id:ID!\n    code:String!\n    name:String!\n    Area:Area!\n    villages:[Village!]!\n    people:[User!]!\n  }\n\n  type Village {\n    id:ID!\n    code:String!\n    name:String!\n    street:Street!\n    people:[User!]!\n  }\n\n\ntype FamilyGroup{\n  id:ID! \n  creater:User \n  father:Person \n  mother:Person\n  name: String\n  families: [Family]\n  messages: [GroupMessage]\n  users:[User]\n}\n\ntype ClassMate{\n  id: ID!\n  student:User\n  status:String!\n  group:ClassGroup!\n}\n\ntype ClassGroup{\n  id:ID!\n  study:SchoolEdu\n  name:String\n  members:[ClassMate]\n  messages: [GroupMessage]\n}\n\ntype Colleague{\n  id: ID! \n  worker:User\n  status:String!\n  group:WorkGroup\n}\n\ntype OldColleague{\n  id: ID!\n  from:User\n  to:User\n  company:Company\n  status:String!\n}\n\ntype WorkGroup{\n  id:ID! \n  company:Company\n  colleagues:[Colleague]\n  messages: [GroupMessage]\n}\n\nenum LocationGroupKind {\n  HomeVillage, #\u8001\u5BB6\n  ResidenceVillage,#\u73B0\u4F4F\u5730\n  VillageInResidenceVillage, #\u540C\u6751\u7684\u5728\u76F8\u540C\u7684\u8857\u9053\u8001\u4E61\n  StreetInResidenceVillage, #\u540C\u9547\u7684\u5728\u76F8\u540C\u7684\u8857\u9053\u8001\u4E61\n  AreaInResidenceVillage, #\u540C\u533A\u7684\u5728\u76F8\u540C\u7684\u8857\u9053\u8001\u4E61\n  CityInResidenceVillage, #\u540C\u5E02\u7684\u5728\u76F8\u540C\u7684\u8857\u9053\u8001\u4E61\n  ProvinceInResidenceVillage, #\u540C\u7701\u7684\u5728\u76F8\u540C\u7684\u8857\u9053\u8001\u4E61\n  VillageInResidenceStreet, #\u540C\u6751\u7684\u5728\u76F8\u540C\u7684\u9547\u8001\u4E61\n  StreetInResidenceStreet, #\u540C\u9547\u7684\u5728\u76F8\u540C\u7684\u9547\u8001\u4E61\n  AreaInResidenceStreet, #\u540C\u533A\u7684\u5728\u76F8\u540C\u7684\u9547\u8001\u4E61\n  CityInResidenceStreet, #\u540C\u5E02\u7684\u5728\u76F8\u540C\u7684\u9547\u8001\u4E61\n  ProvinceInResidenceStreet, #\u540C\u7701\u7684\u5728\u76F8\u540C\u7684\u9547\u8001\u4E61\n  VillageInResidenceArea, #\u540C\u6751\u7684\u5728\u76F8\u540C\u7684\u533A\u8001\u4E61\n  StreetInResidenceArea, #\u540C\u9547\u7684\u5728\u76F8\u540C\u7684\u533A\u8001\u4E61\n  AreaInResidenceArea, #\u540C\u533A\u7684\u5728\u76F8\u540C\u7684\u533A\u8001\u4E61\n  CityInResidenceArea, #\u540C\u5E02\u7684\u5728\u76F8\u540C\u7684\u533A\u8001\u4E61\n  ProvinceInResidenceArea, #\u540C\u7701\u7684\u5728\u76F8\u540C\u7684\u533A\u8001\u4E61\n  VillageInResidenceCity, #\u540C\u6751\u7684\u5728\u76F8\u540C\u7684\u5E02\u8001\u4E61\n  StreetInResidenceCity, #\u540C\u9547\u7684\u5728\u76F8\u540C\u7684\u5E02\u8001\u4E61\n  AreaInResidenceCity, #\u540C\u533A\u7684\u5728\u76F8\u540C\u7684\u5E02\u8001\u4E61\n  CityInResidenceCity, #\u540C\u5E02\u7684\u5728\u76F8\u540C\u7684\u5E02\u8001\u4E61\n  ProvinceInResidenceCity, #\u540C\u7701\u7684\u5728\u76F8\u540C\u7684\u5E02\u8001\u4E61\n}\n\ntype LocationGroup{\n  id:ID!\n  kind:LocationGroupKind\n  code:String\n  name:String\n  users:[User!]!\n  messages:[GroupMessage]\n}\n\n\ntype Message {\n  id:ID!\n  to: User\n  from: User \n  text: String\n  image: Photo\n  createdAt: DateTime!\n}\n\nenum GroupKind {\n  Family, #\u5BB6\u4EBA\n  ClassMate,#\u540C\u5B66\n  Colleague, #\u540C\u4E8B\n  FellowTownsman, #\u540C\u4E61\n  SameCity, #\u540C\u57CE\n  SameOccupation, #\u540C\u884C\n  SameDisease,#\u540C\u75C5\n  RegStatus,#\u9AD8\u8003\u62A5\u540D\u7FA4\n}\n\ntype GroupMessage {\n  id:ID!\n  type:GroupKind\n  to: String \n  from: User\n  text: String\n  image: Photo\n  createdAt: DateTime!\n}\n\ntype Station {\n  id:ID!\n  code:String\n  name:String\n}\n\ntype FindPassWord{\n  id:ID!\n  times:Int\n  forgetter:User\n  remmember:[User]\n}\n\ntype RegisterCount{\n  id:ID!\n  addUser:User\n  deviceId:String\n  createdAt:DateTime!\n}\n\ntype BootCount{\n  id:ID!\n  bootUser:User\n  createdAt: DateTime!\n}\n\ntype VisitCount{\n  userNum:Int,\n  addNum:Int,\n  visits:String\n}\n\ntype Advertisement{\n  id:ID!\n  image1:String\n  image2:String\n  image3:String\n  image4:String\n  image5:String\n  startTime:DateTime\n  endTime:DateTime\n\n}\n\ntype FeeSetting{\n  id:ID!\n  name:String\n  fee:Boolean\n}\n\ntype Product{\n  id:ID! \n  subject:String\n  info:String\n  price:Float\n  kind:String\n}\n\ntype Trade{\n  id:ID! \n  product:Product\n  number:Int\n  amount:Float\n  user:User\n  status:String\n  signedStr:String\n}\n\ntype LoveSetting{\n  id:ID!\n  myHeight:Int\n  myWeight:Int\n  otherHeightMin:Int\n  otherHeightMax:Int\n  otherWeightMin:Int\n  otherWeightMax:Int\n  otherAgeMin:Int\n  otherAgeMax:Int\n  dateTime:String\n  datePlace:String\n  memeberGrade:Int\n  memeberGradeEndTime:DateTime\n  user:User!\n}\n\n# \u62A5\u540D\u60C5\u51B5\ntype LoveSignUp{\n  id:ID!\n  period:String\n  city:City\n  person:User\n}\n\n# \u5339\u914D\u60C5\u51B5\ntype LoveMatching{\n  id:ID!\n  period:String\n  city:City\n  woman:User\n  man:User\n}\n\ntype Skill{\n  id:ID!\n  name:String\n  persons:[User]\n}\n\n\ntype Project{\n  id:ID!\n  name:String\n  place:City\n  content:String\n  conditions:[PartnerCondition]\n  starter:User\n}\n\ntype PartnerCondition{\n  id:ID!\n  skillName:String\n  place:String\n  number:Int\n  partners:[User]\n  passedPartners:[User] \n  project:Project\n}\n\n\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var typeDefs = (0, _apolloServerExpress.gql)(_templateObject());
exports.typeDefs = typeDefs;
//# sourceMappingURL=schema.js.map