{"version":3,"sources":["../../src/resolvers/Query.js"],"names":["Query","me","parent","args","ctx","db","user","uid","searchUser","username","cities","code","where","province","areas","city","streets","Area","villages","street","feed","posts","isPublished","drafts","post","id","families","userId","Error","from","findPasswords","findPassWords","remmember_some","getFamiliesById","getSchools","schools","AND","location","name","locationName","kind","getMajors","majors","name_contains","majorName","getUniversities","universities","universityName","getExamBasicInfo","collegeEntranceExams","student","results","length","getRegStatusApplicants","education","universityId","majorId","userExams","collegeEntranceExam","userExamProvinceId","subject","userExamSubject","regStatuses","university","major","regStatus","applicants","exam","getRegStatusApplicantsById","regStatusId","getRegStatus","getFamilyGroups","groupUsersId","meAndSpousesfamilies","push","meFamilies","mySpouseFamilies","filter","family","indexOf","relationship","mySpouseFamily","to","mySpouse","spouseFamilies","myFamilies","familyFather","father","fatherFamilies","fatherFamilyFather","grandpa","motherFamilyFather","grandma","familyMother","mother","motherFamilies","fatherFamilyMother","motherFamilyMother","sonAndDaughters","sonAndDaughter","sd","familyGroups","OR","map","usersId","users_some","students","schoolEduId","schoolEdu","classGroups","members_some","study","workGroups","companyId","colleagues_some","worker","company","stations","text","colleagues","workers","works","endTime_gt","Date","work","oldColleagues","startTime","endTime","getFullYear","startTime_gte","endTime_lt","endTime_lte","myOldColleagues","locationGroups","locationGroupUsers","locationGroupId","locationGroup","users","photo","userInfo","bootInfo","createBootCount","bootUser","connect","visitCount","advertisements","now","startTime_lte","messages"],"mappings":"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","sourcesContent":["import { getUserId, } from '../services/utils'\r\nimport { ossClient } from '../services/settings'\r\n\r\nexport const Query = {\r\n  me: (parent, args, ctx) => {\r\n    if (getUserId(ctx)) {\r\n      return ctx.db.user({ uid: getUserId(ctx) })\r\n    }\r\n    return null\r\n  },\r\n\r\n  searchUser: (parent, { username }, ctx) => ctx.db.user({ username }),\r\n  cities: (parent, { code }, ctx) => ctx.db.cities({ where: { province: { code } } }),\r\n  areas: (parent, { code }, ctx) => ctx.db.areas({ where: { city: { code } } }),\r\n  streets: (parent, { code }, ctx) => ctx.db.streets({ where: { Area: { code } } }),\r\n  villages: (parent, { code }, ctx) => ctx.db.villages({ where: { street: { code } } }),\r\n  feed: (parent, args, ctx) => ctx.db.posts({ where: { isPublished: true } }),\r\n  drafts: (parent, args, ctx) =>\r\n    ctx.db.posts({ where: { isPublished: false } }),\r\n  post: (parent, { id }, ctx) => ctx.db.post({ id }),\r\n  families: (parent, args, ctx) => {\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    return ctx.db.families({\r\n      where: {\r\n        from: { uid: userId }\r\n      }\r\n    })\r\n  },\r\n  findPasswords: (parent, args, ctx) => {\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    return ctx.db.findPassWords({\r\n      where: {\r\n        remmember_some: { uid: userId }\r\n      }\r\n    })\r\n  },\r\n  getFamiliesById: (parent, args, ctx) => {\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    if (!args.id) {\r\n      return ctx.db.families({\r\n        where: {\r\n          from: { uid: userId }\r\n        }\r\n      })\r\n    }\r\n    return ctx.db.families({\r\n      where: {\r\n        from: { id: args.id }\r\n      }\r\n    })\r\n  },\r\n  getSchools: (parent, args, ctx) => {\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    return ctx.db.schools({\r\n      where: {\r\n        AND: [{\r\n          location: { name: args.locationName }\r\n        }, {\r\n          kind: args.kind\r\n        }]\r\n      }\r\n    }\r\n    )\r\n  },\r\n  getMajors: (parent, args, ctx) => {\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    return ctx.db.majors({\r\n      where: {\r\n        name_contains: args.majorName\r\n      }\r\n    })\r\n  },\r\n  getUniversities: (parent, args, ctx) => {\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    return ctx.db.universities({\r\n      where: {\r\n        name_contains: args.universityName\r\n      }\r\n    })\r\n  },\r\n  getExamBasicInfo: async (parent, args, ctx) => {\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const results = await ctx.db.collegeEntranceExams({\r\n      where: {\r\n        student: { uid: userId }\r\n      }\r\n    })\r\n    if (results.length === 0) {\r\n      return null\r\n    }\r\n    return results[0]\r\n  },\r\n  getRegStatusApplicants: async (parent, { education, universityId, majorId }, ctx) => {\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const userExams = await ctx.db.collegeEntranceExams(\r\n      {\r\n        where: { student: { uid: userId } }\r\n      }\r\n    )\r\n    if (userExams.length === 0) {\r\n      throw new Error('尚未填写高考基本信息')\r\n    }\r\n    const userExamProvinceId = await ctx.db.collegeEntranceExam({\r\n      id: userExams[0].id\r\n    }).province().id()\r\n    const userExamSubject = await ctx.db.collegeEntranceExam({\r\n      id: userExams[0].id\r\n    }).subject()\r\n\r\n    const regStatuses = await ctx.db.regStatuses({\r\n      where: {\r\n        education,\r\n        university: { id: universityId },\r\n        major: { id: majorId },\r\n      }\r\n    })\r\n    if (regStatuses.length === 0) {\r\n      return []\r\n    }\r\n\r\n    const applicants = await ctx.db.regStatus(\r\n      {\r\n        id: regStatuses[0].id\r\n      }\r\n    ).applicants({\r\n      where: {\r\n        exam: {\r\n          AND: [\r\n            { province: { id: userExamProvinceId } },\r\n            { subject: userExamSubject }\r\n          ]\r\n        }\r\n      }\r\n    })\r\n\r\n    return applicants\r\n  },\r\n  getRegStatusApplicantsById: async (parent, { regStatusId }, ctx) => {\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const userExams = await ctx.db.collegeEntranceExams(\r\n      {\r\n        where: { student: { uid: userId } }\r\n      }\r\n    )\r\n    if (userExams.length === 0) {\r\n      throw new Error('尚未填写高考基本信息')\r\n    }\r\n    const userExamProvinceId = await ctx.db.collegeEntranceExam({\r\n      id: userExams[0].id\r\n    }).province().id()\r\n    const userExamSubject = await ctx.db.collegeEntranceExam({\r\n      id: userExams[0].id\r\n    }).subject()\r\n\r\n    const applicants = await ctx.db.regStatus(\r\n      {\r\n        id: regStatusId\r\n      }\r\n    ).applicants({\r\n      where: {\r\n        exam: {\r\n          AND: [\r\n            { province: { id: userExamProvinceId } },\r\n            { subject: userExamSubject }\r\n          ]\r\n        }\r\n      }\r\n    })\r\n\r\n\r\n    return applicants\r\n  },\r\n  getRegStatus: async (parent, args, ctx) => {\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    return ctx.db.user(\r\n      { uid: userId }\r\n    ).regStatus()\r\n\r\n  },\r\n  getFamilyGroups: async (parent, args, ctx) => {\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const groupUsersId = []\r\n    const meAndSpousesfamilies = []\r\n    groupUsersId.push({ id: user.id })\r\n    const meFamilies = await ctx.db.user({ id: user.id }).families()\r\n    meAndSpousesfamilies.push(meFamilies)\r\n    // 配偶\r\n    const mySpouseFamilies = meFamilies.filter(family => !!~['wife', 'husband'].indexOf(family.relationship))\r\n    for (const mySpouseFamily of mySpouseFamilies) {\r\n      const mySpouse = await ctx.db.family({ id: mySpouseFamily.id }).to().user()\r\n      if (mySpouse) {\r\n        groupUsersId.push({ id: mySpouse.id })\r\n        const spouseFamilies = await ctx.db.user({ id: mySpouse.id }).families()\r\n        meAndSpousesfamilies.push(spouseFamilies)\r\n      }\r\n    }\r\n    for (const myFamilies of meAndSpousesfamilies) {\r\n      const familyFather = myFamilies.filter(family => family.relationship === 'father')\r\n      if (familyFather.length > 0) {\r\n        const father = await ctx.db.family({ id: familyFather[0].id }).to().user()\r\n        if (father) {\r\n          groupUsersId.push({ id: father.id })\r\n          const fatherFamilies = await ctx.db.user({ id: father.id }).families()\r\n          const fatherFamilyFather = fatherFamilies.filter(family => family.relationship === 'father')\r\n          if (fatherFamilyFather.length > 0) {\r\n            const grandpa = await ctx.db.family({ id: fatherFamilyFather[0].id }).to().user()\r\n            if (grandpa) {\r\n              groupUsersId.push({ id: grandpa.id })\r\n            }\r\n          }\r\n\r\n          const motherFamilyFather = fatherFamilies.filter(family => family.relationship === 'mother')\r\n          if (motherFamilyFather.length > 0) {\r\n            const grandma = await ctx.db.family({ id: motherFamilyFather[0].id }).to().user()\r\n            if (grandma) {\r\n              groupUsersId.push({ id: grandma.id })\r\n            }\r\n          }\r\n\r\n        }\r\n      }\r\n      const familyMother = myFamilies.filter(family => family.relationship === 'mother')\r\n\r\n      if (familyMother.length > 0) {\r\n        const mother = await ctx.db.family({ id: familyMother[0].id }).to().user()\r\n        if (mother) {\r\n          groupUsersId.push({ id: mother.id })\r\n          const motherFamilies = await ctx.db.user({ id: mother.id }).families()\r\n          const fatherFamilyMother = motherFamilies.filter(family => family.relationship === 'father')\r\n          if (fatherFamilyMother.length > 0) {\r\n            const grandpa = await ctx.db.family({ id: fatherFamilyMother[0].id }).to().user()\r\n            if (grandpa) {\r\n              groupUsersId.push({ id: grandpa.id })\r\n            }\r\n          }\r\n\r\n          const motherFamilyMother = motherFamilies.filter(family => family.relationship === 'mother')\r\n          if (motherFamilyMother.length > 0) {\r\n            const grandma = await ctx.db.family({ id: motherFamilyMother[0].id }).to().user()\r\n            if (grandma) {\r\n              groupUsersId.push({ id: grandma.id })\r\n            }\r\n          }\r\n\r\n        }\r\n      }\r\n    }\r\n\r\n    // 我的群由子女负责创建\r\n    const sonAndDaughters = meFamilies.filter(family => !!~['son', 'daughter'].indexOf(family.relationship))\r\n    for (const sonAndDaughter of sonAndDaughters) {\r\n      const sd = await ctx.db.family({ id: sonAndDaughter.id }).to().user()\r\n      if (sd) {\r\n        groupUsersId.push({ id: sd.id })\r\n      }\r\n    }\r\n    return ctx.db.familyGroups({\r\n      where: {\r\n        OR: groupUsersId.map(usersId => ({ users_some: usersId }))\r\n      }\r\n    })\r\n  },\r\n  students: (parent, { schoolEduId }, ctx) => {\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    return ctx.db.schoolEdu({ id: schoolEduId }).students()\r\n  },\r\n  classGroups: (parent, { schoolEduId }, ctx) => {\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    if (!schoolEduId) {\r\n      return ctx.db.classGroups({\r\n        where: {\r\n          AND: [\r\n            { members_some: { student: { uid: userId } } }\r\n          ]\r\n        }\r\n      })\r\n    }\r\n    return ctx.db.classGroups({\r\n      where: {\r\n        AND: [\r\n          { study: { id: schoolEduId } },\r\n          { members_some: { student: { uid: userId } } }\r\n        ]\r\n      }\r\n    })\r\n  },\r\n  workGroups: (parent, { companyId }, ctx) => {\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    if (!companyId) {\r\n      return ctx.db.workGroups({\r\n        where: {\r\n          AND: [\r\n            { colleagues_some: { worker: { uid: userId } } }\r\n          ]\r\n        }\r\n      })\r\n    }\r\n    return ctx.db.workGroups({\r\n      where: {\r\n        AND: [\r\n          { company: { id: companyId } },\r\n          { colleagues_some: { worker: { uid: userId } } }\r\n        ]\r\n      }\r\n    })\r\n  },\r\n  stations: async (parent, { text }, ctx) => {\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const stations = await ctx.db.stations({\r\n      where: { name_contains: text }\r\n    })\r\n    if (stations.length === 0) {\r\n      return [{ id: '000', code: \"000\", name: \"未找到相关职位,请更换关键字试一下\" }]\r\n    }\r\n    return stations\r\n  },\r\n  colleagues: async (parent, { companyId }, ctx) => {\r\n\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const workers = []\r\n    const works = await ctx.db.works({\r\n      where: {\r\n        AND: [\r\n          { endTime_gt: (new Date('9999-1-1')) },\r\n          { company: { id: companyId } },\r\n        ]\r\n      }\r\n    })\r\n\r\n    for (const work of works) {\r\n      const worker = await ctx.db.work({ id: work.id }).worker()\r\n      workers.push(worker)\r\n    }\r\n\r\n    return workers\r\n  },\r\n  oldColleagues: async (parent, { startTime, endTime, companyId }, ctx) => {\r\n\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const workers = []\r\n    let works\r\n    if (new Date(endTime).getFullYear() === 9999) {\r\n      works = await ctx.db.works({\r\n        where: {\r\n          AND: [\r\n            { startTime_gte: (new Date(startTime)) },\r\n            { endTime_lt: (new Date(endTime)) },\r\n            { company: { id: companyId } },\r\n          ]\r\n        }\r\n      })\r\n    } else {\r\n      works = await ctx.db.works({\r\n        where: {\r\n          AND: [\r\n            {\r\n              OR: [\r\n                { startTime_gte: (new Date(startTime)) },\r\n                { endTime_lte: (new Date(endTime)) },\r\n              ]\r\n            },\r\n            { company: { id: companyId } },\r\n          ]\r\n        }\r\n      })\r\n    }\r\n\r\n\r\n    for (const work of works) {\r\n      const worker = await ctx.db.work({ id: work.id }).worker()\r\n      workers.push(worker)\r\n    }\r\n\r\n    return workers\r\n  },\r\n  myOldColleagues: async (parent, { companyId }, ctx) => {\r\n\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n\r\n    if (!companyId) {\r\n      return ctx.db.oldColleagues({\r\n        where: {\r\n          AND: [\r\n            { from: { uid: userId } },\r\n          ]\r\n        }\r\n      })\r\n    }\r\n\r\n    const myOldColleagues = await ctx.db.oldColleagues({\r\n      where: {\r\n        AND: [\r\n          { from: { uid: userId } },\r\n          { company: { id: companyId } },\r\n        ]\r\n      }\r\n    })\r\n    return myOldColleagues\r\n  },\r\n  locationGroups: async (parent, args, ctx) => {\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    return ctx.db.user({ id: user.id }).locationGroups()\r\n  },\r\n  locationGroupUsers: async (parent, { locationGroupId }, ctx) => {\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    return ctx.db.locationGroup({ id: locationGroupId }).users()\r\n  },\r\n  photo: async (parent, { id, name }, ctx) => {\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    if (id) {\r\n      return ctx.db.photo({ id })\r\n    }\r\n\r\n    if (name) {\r\n      return ctx.db.photo({ name })\r\n    }\r\n\r\n    throw new Error('没有输入id或者名称')\r\n  },\r\n  userInfo: async (parent, { id }, ctx) => {\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ id })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n\r\n    return user\r\n  },\r\n  bootInfo: async (parent, args, ctx) => {\r\n\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    return ctx.db.createBootCount({\r\n      bootUser: { connect: { id: user.id } },\r\n    })\r\n  },\r\n  visitCount: async (parent, args, ctx) => {\r\n\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    return {}\r\n  },\r\n\r\n  advertisements: async (parent, args, ctx) => {\r\n    const now = new Date()\r\n    return ctx.db.advertisements({\r\n      where: {\r\n        AND: [\r\n          { startTime_lte: now },\r\n          { endTime_gt: now },\r\n        ]\r\n      }\r\n    })\r\n  },\r\n\r\n  messages: async (parent, args, ctx) => {\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n\r\n    const messages = await ctx.db.messages({\r\n      where: {\r\n        OR: [\r\n          { from: { id: user.id } },\r\n          { to: { id: user.id } }\r\n        ]\r\n      }\r\n    })\r\n\r\n    return messages\r\n  },\r\n}\r\n"],"file":"Query.js"}