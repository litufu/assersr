{"version":3,"sources":["../../src/resolvers/Query.js"],"names":["Query","me","parent","args","ctx","db","user","uid","searchUser","username","cities","code","where","province","areas","city","streets","Area","villages","street","families","userId","Error","from","findPasswords","findPassWords","remmember_some","getFamiliesById","id","getSchools","locationName","validator","isAlpha","kind","schools","AND","location","name","getMajors","majorName","majors","first","name_contains","getUniversities","universityName","universities","getExamBasicInfo","collegeEntranceExams","student","results","length","getRegStatusApplicants","education","universityId","majorId","feeSettings","FEESETTINGTYPES","regstatus","regStatusfeeSettings","fee","year","Date","getFullYear","trades","product","subject_contains","status","userExams","collegeEntranceExam","userExamProvinceId","subject","userExamSubject","regStatuses","university","major","regStatus","applicants","exam","getRegStatusApplicantsById","regStatusId","getRegStatus","getFamilyGroups","groupUsersId","meAndSpousesfamilies","push","meFamilies","mySpouseFamilies","filter","family","indexOf","relationship","mySpouseFamily","to","mySpouse","spouseFamilies","myFamilies","familyFather","father","fatherFamilies","fatherFamilyFather","grandpa","motherFamilyFather","grandma","familyMother","mother","motherFamilies","fatherFamilyMother","motherFamilyMother","sonAndDaughters","sonAndDaughter","sd","familyGroups","OR","map","usersId","users_some","students","schoolEduId","schoolEdu","classGroups","members_some","study","workGroups","companyId","colleagues_some","worker","company","stations","text","colleagues","workers","works","endTime_gt","work","oldColleagues","startTime","endTime","endTime_gte","NOT","startTime_gte","endTime_lte","w","myOldColleagues","locationGroups","locationGroupUsers","locationGroupId","locationGroup","users","photo","userInfo","bootInfo","createBootCount","bootUser","connect","visitCount","advertisements","now","startTime_lte","products","messages","loveMatch","residence","phase","parseInt","getTime","DateStartTime","gender","loveMatchings","period","man","loveMatches","woman","skills","test","projects","starter","partnerConditions","projectId","project","mypartnerConditions","partners_some","kefu"],"mappings":"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","sourcesContent":["import validator from 'validator'\r\nimport { getUserId, } from '../services/utils'\r\nimport {\r\n  checkUsername,\r\n  checkId,\r\n  checkCnEnNum,\r\n  checkPlaceCode,\r\n  checkPhotoName\r\n} from '../validate'\r\nimport {DateStartTime,FEESETTINGTYPES} from '../services/settings'\r\n\r\nexport const Query = {\r\n  me: (parent, args, ctx) => {\r\n    if (getUserId(ctx)) {\r\n      return ctx.db.user({ uid: getUserId(ctx) })\r\n    }\r\n    return null\r\n  },\r\n\r\n  searchUser: (parent, { username }, ctx) => {\r\n    \r\n    checkUsername(username)\r\n\r\n    return ctx.db.user({ username })\r\n\r\n  },\r\n  cities: (parent, { code }, ctx) => {\r\n    checkPlaceCode(code)\r\n    return ctx.db.cities({ where: { province: { code } } })\r\n  },\r\n  areas: (parent, { code }, ctx) => {\r\n    checkPlaceCode(code)\r\n    return ctx.db.areas({ where: { city: { code } } })\r\n  },\r\n  streets: (parent, { code }, ctx) => {\r\n    checkPlaceCode(code)\r\n    return ctx.db.streets({ where: { Area: { code } } })\r\n  },\r\n  villages: (parent, { code }, ctx) => {\r\n    checkPlaceCode(code)\r\n\r\n    return ctx.db.villages({ where: { street: { code } } })\r\n  },\r\n  families: (parent, args, ctx) => {\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    return ctx.db.families({\r\n      where: {\r\n        from: { uid: userId }\r\n      }\r\n    })\r\n  },\r\n  findPasswords: (parent, args, ctx) => {\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    return ctx.db.findPassWords({\r\n      where: {\r\n        remmember_some: { uid: userId }\r\n      }\r\n    })\r\n  },\r\n  getFamiliesById: (parent, args, ctx) => {\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n\r\n    if(args.id){\r\n      checkId(args.id)\r\n    }\r\n\r\n    if (!args.id) {\r\n      return ctx.db.families({\r\n        where: {\r\n          from: { uid: userId }\r\n        }\r\n      })\r\n    }\r\n    return ctx.db.families({\r\n      where: {\r\n        from: { id: args.id }\r\n      }\r\n    })\r\n  },\r\n  getSchools: (parent, args, ctx) => {\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    // 输入数据校验\r\n    checkCnEnNum(args.locationName)\r\n    if(!validator.isAlpha(args.kind)){\r\n      throw new Error('学校类型错误')\r\n    }\r\n\r\n    return ctx.db.schools({\r\n      where: {\r\n        AND: [{\r\n          location: { name: args.locationName }\r\n        }, {\r\n          kind: args.kind\r\n        }]\r\n      }\r\n    }\r\n    )\r\n  },\r\n  getMajors: (parent, args, ctx) => {\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n\r\n    checkCnEnNum(args.majorName)\r\n\r\n    return ctx.db.majors({\r\n      first:10,\r\n      where: {\r\n        name_contains: args.majorName\r\n      }\r\n    })\r\n  },\r\n  getUniversities: (parent, args, ctx) => {\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n\r\n    checkCnEnNum(args.universityName)\r\n\r\n    return ctx.db.universities({\r\n      first:10,\r\n      where: {\r\n        name_contains: args.universityName\r\n      }\r\n    })\r\n  },\r\n  getExamBasicInfo: async (parent, args, ctx) => {\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const results = await ctx.db.collegeEntranceExams({\r\n      where: {\r\n        student: { uid: userId }\r\n      }\r\n    })\r\n    if (results.length === 0) {\r\n      return null\r\n    }\r\n    return results[0]\r\n  },\r\n  getRegStatusApplicants: async (parent, { education, universityId, majorId }, ctx) => {\r\n    // 输入数据校验\r\n    checkId(universityId)\r\n    checkId(majorId)\r\n    if(!validator.isAlpha(education)){\r\n      throw new Error('学历类型错误')\r\n    }\r\n    // 判断是否为付费会员\r\n    const regStatusfeeSettings = await ctx.db.feeSettings({\r\n      where:{name:FEESETTINGTYPES.regstatus}\r\n    })\r\n    if(regStatusfeeSettings.length>0){\r\n      const fee = regStatusfeeSettings[0].fee\r\n      const year = new Date().getFullYear()\r\n      if(fee){\r\n        const trades = await ctx.db.user({uid:userId}).trades({\r\n          where:{\r\n              product:{\r\n                AND:[\r\n                  {kind:FEESETTINGTYPES.regstatus},\r\n                  {subject_contains:`${year}`}\r\n                ]\r\n              }\r\n          }\r\n        })\r\n        if(trades.length>0 ){\r\n           if(trades[0].status!==\"1\"){\r\n            throw new Error(\"报名前需要在设置-购买页面中购买本年度高考报名会员\")\r\n           }\r\n        }else{\r\n          throw new Error(\"报名前需要在设置-购买页面中购买本年度高考报名会员\")\r\n        }\r\n        \r\n      }\r\n    }\r\n\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const userExams = await ctx.db.collegeEntranceExams(\r\n      {\r\n        where: { student: { uid: userId } }\r\n      }\r\n    )\r\n    if (userExams.length === 0) {\r\n      throw new Error('尚未填写高考基本信息')\r\n    }\r\n    const userExamProvinceId = await ctx.db.collegeEntranceExam({\r\n      id: userExams[0].id\r\n    }).province().id()\r\n    const userExamSubject = await ctx.db.collegeEntranceExam({\r\n      id: userExams[0].id\r\n    }).subject()\r\n\r\n    const regStatuses = await ctx.db.regStatuses({\r\n      where: {\r\n        education,\r\n        university: { id: universityId },\r\n        major: { id: majorId },\r\n      }\r\n    })\r\n    if (regStatuses.length === 0) {\r\n      return []\r\n    }\r\n\r\n    const applicants = await ctx.db.regStatus(\r\n      {\r\n        id: regStatuses[0].id\r\n      }\r\n    ).applicants({\r\n      where: {\r\n        exam: {\r\n          AND: [\r\n            { province: { id: userExamProvinceId } },\r\n            { subject: userExamSubject }\r\n          ]\r\n        }\r\n      }\r\n    })\r\n\r\n    return applicants\r\n  },\r\n  getRegStatusApplicantsById: async (parent, { regStatusId }, ctx) => {\r\n\r\n    checkId(regStatusId)\r\n    // 判断是否为付费会员\r\n    const regStatusfeeSettings = await ctx.db.feeSettings({\r\n      where:{name:FEESETTINGTYPES.regstatus}\r\n    })\r\n    if(regStatusfeeSettings.length>0){\r\n      const fee = regStatusfeeSettings[0].fee\r\n      const year = new Date().getFullYear()\r\n      if(fee){\r\n        const trades = await ctx.db.user({uid:userId}).trades({\r\n          where:{\r\n              product:{\r\n                AND:[\r\n                  {kind:FEESETTINGTYPES.regstatus},\r\n                  {subject_contains:`${year}`}\r\n                ]\r\n              }\r\n          }\r\n        })\r\n        if(trades.length>0 ){\r\n            if(trades[0].status!==\"1\"){\r\n            throw new Error(\"报名前需要在设置-购买页面中购买本年度高考报名会员\")\r\n            }\r\n        }else{\r\n          throw new Error(\"报名前需要在设置-购买页面中购买本年度高考报名会员\")\r\n        }\r\n      }\r\n    }\r\n\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    \r\n    const userExams = await ctx.db.collegeEntranceExams(\r\n      {\r\n        where: { student: { uid: userId } }\r\n      }\r\n    )\r\n    if (userExams.length === 0) {\r\n      throw new Error('尚未填写高考基本信息')\r\n    }\r\n    const userExamProvinceId = await ctx.db.collegeEntranceExam({\r\n      id: userExams[0].id\r\n    }).province().id()\r\n    const userExamSubject = await ctx.db.collegeEntranceExam({\r\n      id: userExams[0].id\r\n    }).subject()\r\n\r\n    const applicants = await ctx.db.regStatus(\r\n      {\r\n        id: regStatusId\r\n      }\r\n    ).applicants({\r\n      where: {\r\n        exam: {\r\n          AND: [\r\n            { province: { id: userExamProvinceId } },\r\n            { subject: userExamSubject }\r\n          ]\r\n        }\r\n      }\r\n    })\r\n\r\n\r\n    return applicants\r\n  },\r\n  getRegStatus: async (parent, args, ctx) => {\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    return ctx.db.user(\r\n      { uid: userId }\r\n    ).regStatus()\r\n\r\n  },\r\n  getFamilyGroups: async (parent, args, ctx) => {\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const groupUsersId = []\r\n    const meAndSpousesfamilies = []\r\n    groupUsersId.push({ id: user.id })\r\n    const meFamilies = await ctx.db.user({ id: user.id }).families()\r\n    meAndSpousesfamilies.push(meFamilies)\r\n    // 配偶\r\n    const mySpouseFamilies = meFamilies.filter(family => !!~['wife', 'husband'].indexOf(family.relationship))\r\n    for (const mySpouseFamily of mySpouseFamilies) {\r\n      const mySpouse = await ctx.db.family({ id: mySpouseFamily.id }).to().user()\r\n      if (mySpouse) {\r\n        groupUsersId.push({ id: mySpouse.id })\r\n        const spouseFamilies = await ctx.db.user({ id: mySpouse.id }).families()\r\n        meAndSpousesfamilies.push(spouseFamilies)\r\n      }\r\n    }\r\n    for (const myFamilies of meAndSpousesfamilies) {\r\n      const familyFather = myFamilies.filter(family => family.relationship === 'father')\r\n      if (familyFather.length > 0) {\r\n        const father = await ctx.db.family({ id: familyFather[0].id }).to().user()\r\n        if (father) {\r\n          groupUsersId.push({ id: father.id })\r\n          const fatherFamilies = await ctx.db.user({ id: father.id }).families()\r\n          const fatherFamilyFather = fatherFamilies.filter(family => family.relationship === 'father')\r\n          if (fatherFamilyFather.length > 0) {\r\n            const grandpa = await ctx.db.family({ id: fatherFamilyFather[0].id }).to().user()\r\n            if (grandpa) {\r\n              groupUsersId.push({ id: grandpa.id })\r\n            }\r\n          }\r\n\r\n          const motherFamilyFather = fatherFamilies.filter(family => family.relationship === 'mother')\r\n          if (motherFamilyFather.length > 0) {\r\n            const grandma = await ctx.db.family({ id: motherFamilyFather[0].id }).to().user()\r\n            if (grandma) {\r\n              groupUsersId.push({ id: grandma.id })\r\n            }\r\n          }\r\n\r\n        }\r\n      }\r\n      const familyMother = myFamilies.filter(family => family.relationship === 'mother')\r\n\r\n      if (familyMother.length > 0) {\r\n        const mother = await ctx.db.family({ id: familyMother[0].id }).to().user()\r\n        if (mother) {\r\n          groupUsersId.push({ id: mother.id })\r\n          const motherFamilies = await ctx.db.user({ id: mother.id }).families()\r\n          const fatherFamilyMother = motherFamilies.filter(family => family.relationship === 'father')\r\n          if (fatherFamilyMother.length > 0) {\r\n            const grandpa = await ctx.db.family({ id: fatherFamilyMother[0].id }).to().user()\r\n            if (grandpa) {\r\n              groupUsersId.push({ id: grandpa.id })\r\n            }\r\n          }\r\n\r\n          const motherFamilyMother = motherFamilies.filter(family => family.relationship === 'mother')\r\n          if (motherFamilyMother.length > 0) {\r\n            const grandma = await ctx.db.family({ id: motherFamilyMother[0].id }).to().user()\r\n            if (grandma) {\r\n              groupUsersId.push({ id: grandma.id })\r\n            }\r\n          }\r\n\r\n        }\r\n      }\r\n    }\r\n\r\n    // 我的群由子女负责创建\r\n    const sonAndDaughters = meFamilies.filter(family => !!~['son', 'daughter'].indexOf(family.relationship))\r\n    for (const sonAndDaughter of sonAndDaughters) {\r\n      const sd = await ctx.db.family({ id: sonAndDaughter.id }).to().user()\r\n      if (sd) {\r\n        groupUsersId.push({ id: sd.id })\r\n      }\r\n    }\r\n    return ctx.db.familyGroups({\r\n      where: {\r\n        OR: groupUsersId.map(usersId => ({ users_some: usersId }))\r\n      }\r\n    })\r\n  },\r\n  students: (parent, { schoolEduId }, ctx) => {\r\n    checkId(schoolEduId)\r\n\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    return ctx.db.schoolEdu({ id: schoolEduId }).students()\r\n  },\r\n  classGroups: (parent, { schoolEduId }, ctx) => {\r\n    checkId(schoolEduId)\r\n\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    if (!schoolEduId) {\r\n      return ctx.db.classGroups({\r\n        where: {\r\n          AND: [\r\n            { members_some: { student: { uid: userId } } }\r\n          ]\r\n        }\r\n      })\r\n    }\r\n    return ctx.db.classGroups({\r\n      where: {\r\n        AND: [\r\n          { study: { id: schoolEduId } },\r\n          { members_some: { student: { uid: userId } } }\r\n        ]\r\n      }\r\n    })\r\n  },\r\n  workGroups: (parent, { companyId }, ctx) => {\r\n\r\n    checkId(companyId)\r\n\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    if (!companyId) {\r\n      return ctx.db.workGroups({\r\n        where: {\r\n          AND: [\r\n            { colleagues_some: { worker: { uid: userId } } }\r\n          ]\r\n        }\r\n      })\r\n    }\r\n    return ctx.db.workGroups({\r\n      where: {\r\n        AND: [\r\n          { company: { id: companyId } },\r\n          { colleagues_some: { worker: { uid: userId } } }\r\n        ]\r\n      }\r\n    })\r\n  },\r\n  stations: async (parent, { text }, ctx) => {\r\n\r\n    checkCnEnNum(text)\r\n\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const stations = await ctx.db.stations({\r\n      first:10,\r\n      where: { name_contains: text }\r\n    })\r\n    if (stations.length === 0) {\r\n      return [{ id: '000', code: \"000\", name: \"未找到相关职位,请更换关键字试一下\" }]\r\n    }\r\n    return stations\r\n  },\r\n  colleagues: async (parent, { companyId }, ctx) => {\r\n\r\n    checkId(companyId)\r\n\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const workers = []\r\n    const works = await ctx.db.works({\r\n      where: {\r\n        AND: [\r\n          { endTime_gt: (new Date('9999-1-1')) },\r\n          { company: { id: companyId } },\r\n        ]\r\n      }\r\n    })\r\n\r\n    for (const work of works) {\r\n      const worker = await ctx.db.work({ id: work.id }).worker()\r\n      workers.push(worker)\r\n    }\r\n\r\n    return workers\r\n  },\r\n  oldColleagues: async (parent, { startTime, endTime, companyId }, ctx) => {\r\n\r\n    checkId(companyId)\r\n\r\n\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const workers = []\r\n    let works\r\n    if (new Date(endTime).getFullYear() === 9999) {\r\n      works = await ctx.db.works({\r\n        where: {\r\n          AND: [\r\n            { endTime_gte: (new Date(startTime)) },\r\n            { company: { id: companyId } },\r\n          ]\r\n        }\r\n      })\r\n    } else {\r\n      works = await ctx.db.works({\r\n        where: {\r\n          AND: [\r\n            {\r\n              NOT: [\r\n                { startTime_gte: (new Date(endTime)) },\r\n                { endTime_lte: (new Date(startTime)) },\r\n              ]\r\n            },\r\n            { company: { id: companyId } },\r\n          ]\r\n        }\r\n      })\r\n    }\r\n\r\n    for (const work of works) {\r\n      const worker = await ctx.db.work({ id: work.id }).worker()\r\n      if(workers.filter(w=>w.id===worker.id).length===0){\r\n        workers.push(worker)\r\n      }\r\n    }\r\n\r\n    return workers\r\n  },\r\n  myOldColleagues: async (parent, { companyId }, ctx) => {\r\n\r\n    checkId(companyId)\r\n\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n\r\n    if (!companyId) {\r\n      return ctx.db.oldColleagues({\r\n        where: {\r\n          AND: [\r\n            { from: { uid: userId } },\r\n          ]\r\n        }\r\n      })\r\n    }\r\n\r\n    const myOldColleagues = await ctx.db.oldColleagues({\r\n      where: {\r\n        AND: [\r\n          { from: { uid: userId } },\r\n          { company: { id: companyId } },\r\n        ]\r\n      }\r\n    })\r\n    return myOldColleagues\r\n  },\r\n  locationGroups: async (parent, args, ctx) => {\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    return ctx.db.user({ id: user.id }).locationGroups()\r\n  },\r\n  locationGroupUsers: async (parent, { locationGroupId }, ctx) => {\r\n\r\n    checkId(locationGroupId)\r\n\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    return ctx.db.locationGroup({ id: locationGroupId }).users()\r\n  },\r\n  photo: async (parent, { id, name }, ctx) => {\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    if (id) {\r\n      checkId(id)\r\n      return ctx.db.photo({ id })\r\n    }\r\n\r\n    if (name) {\r\n      checkPhotoName(name)\r\n      return ctx.db.photo({ name })\r\n    }\r\n\r\n    throw new Error('没有输入id或者名称')\r\n  },\r\n  userInfo: async (parent, { id }, ctx) => {\r\n\r\n    checkId(id)\r\n\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ id })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n\r\n    return user\r\n  },\r\n  bootInfo: async (parent, args, ctx) => {\r\n\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    return ctx.db.createBootCount({\r\n      bootUser: { connect: { id: user.id } },\r\n    })\r\n  },\r\n  visitCount: async (parent, args, ctx) => {\r\n\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    return {}\r\n  },\r\n\r\n  advertisements: async (parent, args, ctx) => {\r\n    const now = new Date()\r\n    return ctx.db.advertisements({\r\n      where: {\r\n        AND: [\r\n          { startTime_lte: now },\r\n          { endTime_gt: now },\r\n        ]\r\n      }\r\n    })\r\n  },\r\n  products:async (parent, args, ctx) => {\r\n    return ctx.db.products()\r\n  },\r\n\r\n  messages: async (parent, args, ctx) => {\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n\r\n    const messages = await ctx.db.messages({\r\n      first:30,\r\n      where: {\r\n        OR: [\r\n          { from: { id: user.id } },\r\n          { to: { id: user.id } }\r\n        ]\r\n      }\r\n    })\r\n\r\n    return messages\r\n  },\r\n  loveMatch:async (parent, args, ctx) => {\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const city = await ctx.db.user({ uid: userId }).residence().city()\r\n\r\n    let loveMatches\r\n    const now = new Date()\r\n    const phase = parseInt(`${(now.getTime() - DateStartTime.getTime()) / 1000 / 60 / 60 / 24 / 7}`, 10) + 1\r\n    if(user.gender===\"male\"){\r\n      loveMatches = await ctx.db.loveMatchings({\r\n        where: {\r\n          AND: [\r\n            {period:`${phase}`},\r\n            {city:{code:city.code}},\r\n            { man: { id: user.id } },\r\n          ]\r\n        }\r\n      })\r\n    }else{\r\n      loveMatches = await ctx.db.loveMatchings({\r\n        where: {\r\n          AND: [\r\n            {period:`${phase}`},\r\n            {city:{code:city.code}},\r\n            { woman: { id: user.id } },\r\n          ]\r\n        }\r\n      })\r\n    }\r\n    if(loveMatches.length>0){\r\n      return loveMatches[0]\r\n    }\r\n    return null\r\n  },\r\n  skills: async (parent, {name}, ctx) => {\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    if (!/^[A-Za-z0-9\\u4e00-\\u9fa5]+/.test(name)){\r\n      throw new Error('技能名称错误')\r\n    }\r\n    return ctx.db.skills({\r\n      where:{name_contains:name},\r\n      first:10\r\n    })\r\n  },\r\n  projects:async (parent, args, ctx) => {\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n\r\n    const projects = await ctx.db.projects({\r\n      where:{starter:{uid:userId}}\r\n    })\r\n\r\n    return projects\r\n  },\r\n  partnerConditions:async (parent, {projectId}, ctx) => {\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    \r\n    return ctx.db.partnerConditions({\r\n      where:{project:{id:projectId}}\r\n    })\r\n  },\r\n  mypartnerConditions:async (parent, args, ctx) => {\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    \r\n    return ctx.db.partnerConditions({\r\n      where:{partners_some:{id:user.id}}\r\n    })\r\n  },\r\n  feeSettings:(parent, args, ctx) => ctx.db.feeSettings(),\r\n  kefu:(parent, args, ctx) => ctx.db.user({username:\"kefu\"}),\r\n}\r\n"],"file":"Query.js"}