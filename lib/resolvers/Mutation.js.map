{"version":3,"sources":["../../src/resolvers/Mutation.js"],"names":["Mutation","signup","parent","ctx","username","password","deviceId","validator","isAlphanumeric","Error","db","user","hasuser","diveiceRegisters","registerCounts","where","length","hashedPassword","uid","token","userId","APP_SECRET","createUser","createRegisterCount","addUser","connect","id","login","valid","changePassword","currentPassword","newPassword","hashedNewPassword","updateUser","data","findPassword","forgetterId","forgetter","findPassWords","findPasswords","findPassWord","remmember","remmembers","updateFindPassWord","times","updateFindPassword","deleteFindPassWord","createFindPassWord","addBasicInfo","name","gender","birthday","birthplace","residence","village","code","homeVillage","street","homeStreet","area","homeArea","city","homeCity","province","homeProvince","residenceVillage","residenceStreet","residenceArea","residenceCity","residenceProvince","locations","existBirthplaces","createLocation","birthLocation","existResidences","residenceLocation","birthdaycalendar","calendar","date","villageGroupTypes","Object","keys","type","locationGroups","villageLocationGroups","kind","userInVillageGroups","createLocationGroup","users","pubsub","publish","LOCATIONGROUP_CHANGED","updateLocationGroup","disconnect","oldGroup","locationGroup","oldGroupUsers","oldGroupUser","a","newGroup","newGroupUsers","newGroupUser","avatar","hometownGroupTypes","hometownLocationGroups","userInHometownGroups","b","createFamily","relationship","spouseId","status","from","to","create","spouse","family","updateFamily","ctxUser","update","hasFatherAndMother","deleteFamily","familyId","toId","person","personUser","families","personFamilies","deletePerson","connectFamily","relativeId","relative","AND","relationship_in","relationshipMap","persons","families_some","indexOf","personId","relativeFamilyId","persons1","FAMILY_CHANGED","persons2","confirmFamily","myUpdateFamily","relativeFamily","myRelationship","relativeRelationship","isHusbandOrWife","myFamilies","relativeFamilies","myCommonFamilies","relativeCommonFamilies","myIntersectionFamilies","relativeIntersectionFamilies","myDifferentFamilies","relativeDifferentFamilies","myCommonFamily","myCommonFamilyTo","relativeToCommonUserFamily","relativeToCommonUserFamilyTo","relativeCommonFamily","relativeCommonFamilyTo","meRelationship","relationshipGenderMap","relationshipTOGender","relationIntersectionNew","mySpouse","relRelationship","myCommonFamilyToUser","Date","parse","relativeSpouse","addLocation","location","locationName","place","addSchool","isAlpha","schools","createSchool","addStudy","year","schoolId","grade","className","majorId","startTime","schoolEdus","school","createSchoolEdu","students","newSchoolEdu","updateSchoolEdu","major","schoolEdu","student","STUDENTS_ADDED","addOrUpdateWork","companyName","endTime","department","stationId","updateId","companies","work","worker","updateWork","post","getFullYear","workGroups","company","colleagues_some","workGroup","colleagues","workGroupWorColleagues","colleague","oldworker","createOldColleague","MYOLDCOLLEAGUES_CHANGED","allWorkGroups","group","userColleagues","updateWorkGroup","delete","publishWorker","WORKGROUP_CHANGED","WORKS_CHANGED","companyId","createWork","createdWork","works","OR","startTime_gte","endTime_lte","COLLEAGUES_ADDED","addExamBasicInfo","section","score","specialScore","examineeCardNumber","collegeEntranceExam","candidatenum","isExistcandidatenum","createCollegeEntranceExam","subject","culscore","parseFloat","proscore","updateExamBasicInfo","collegeEntranceExams","oldExamBasicInfo","updateCollegeEntranceExam","addRegStatus","education","universityId","feeSettings","FEESETTINGTYPES","regstatus","regStatusfeeSettings","fee","trades","product","subject_contains","regStatus","userRegStatus","regStatuses","university","updateRegStatus","applicants","userReg","createRegStatus","cancelRegStatus","addClassGroup","schoolEduId","studentId","classGroups","study","members_some","classMates","studentClassMates","updateClassGroup","members","updated","classGroup","member","classMate","CLASSGROUP_CHANGED","createClassGroup","created","confirmClassGroup","studentClassGroups","myClassGroups","InMyGroupstudents","myClassGroupMembers","studentClassGroupsMembers","memeberStudent","inStudentClassGroupStudents","updateClassMate","deleteClassMate","deleteClassGroup","inMyClassGroupStudents","addWorkGroup","workerId","meColleagues","createWorkGroup","confirmWorkGroup","workerGroups","myWorkGroups","InMyGroupWorkers","myWorkGroupColleagues","workerGroupsColleagues","colleagueWorker","inWorkerGroupColleagues","updateColleague","deleteColleague","deleteWorkGroup","inMyWorkGroupColleagues","workerColleauges","addOldColleague","myOldColleague","confirmOldColleague","oldColleagues","myOldColleagues","oldColleagueTomes","updateOldColleague","updatemyOldColleague","postPhoto","uri","ext","typesMap","options","expires","method","url","ossClient","signatureUrl","updatePhoto","newPhoto","createPhoto","sendMessage","text","image","userAvatar","toUser","toUserAvatar","friends","writeUrl","readUrl","createMessage","message","messageImage","returnMessage","createdAt","pubMessage","__typename","MESSAGE_ADDED_TOPIC","sendGroupMessage","types","familyGroup","toGroup","FollowTownsmanUsers","filter","u","regstatusUsers","createGroupMessage","groupMessage","GMESSAGE_ADDED_TOPIC","addAdvertisement","isURL","sTime","advertisements","image1","updateAdvertisement","newAdvertisement","image2","image3","image4","image5","createAdvertisement","getTime","newTrade","productId","number","amount","isFloat","isInt","totalAmount","price","createTrade","addOrUpdateLoveSetting","myHeight","myWeight","otherHeightMin","otherHeightMax","otherWeightMin","otherWeightMax","otherAgeMin","otherAgeMax","dateTime","datePlace","userGender","test","loveSettings","updateLoveSetting","loveSetting","createLoveSetting","addOrUpdateLoveSignUp","args","now","week","getDay","phase","parseInt","DateStartTime","loveSignUps","updateLoveSignUp","period","loveSignUp","createLoveSignUp","addSkill","skills","updateSkill","skill","createSkill","createProject","content","starter","addPartnerCondition","skillName","projectId","id_not","first","personsIds","map","createPartnerCondition","partners","project","partnerCondition","deletePartnerCondition","changePartner","conditionId","partnersId","partner","passedPartners","passedPartnersId","passedPartner","ids","id_not_in","updatePartnerCondition","refreshPartner","refusePartner"],"mappings":"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","sourcesContent":["import { hash, compare } from 'bcrypt'\r\nimport { sign } from 'jsonwebtoken'\r\nimport uuidv4 from 'uuid/v4'\r\nimport validator from 'validator';\r\n\r\nimport {\r\n  APP_SECRET,\r\n  getUserId,\r\n  updateCommonUserFamily,\r\n  getCommonFamilies,\r\n  getIntersectionFamiles,\r\n  getDifferentFamilies,\r\n  refreshMyFamilyGroups,\r\n  checkExistFatherAndMother,\r\n  getFileName,\r\n  getFileExt,\r\n  getTimeByTimeZone\r\n} from '../services/utils'\r\n\r\nimport {\r\n  checkUsername,\r\n  checkPassword,\r\n  checkName,\r\n  checkRelationship,\r\n  checkId,\r\n  checkStatus,\r\n  validateBasicInfo,\r\n  checkNum,\r\n  checkCnEnNum,\r\n  checkDate,\r\n  checkCompanyName,\r\n  checkScore\r\n} from '../validate'\r\nimport {\r\n  relationshipMap,\r\n  relationIntersectionNew,\r\n  relationshipGenderMap,\r\n  relationshipTOGender,\r\n} from \"../services/relationship\"\r\nimport {\r\n  FAMILY_CHANGED,\r\n  CLASSGROUP_CHANGED,\r\n  WORKGROUP_CHANGED,\r\n  STUDENTS_ADDED,\r\n  COLLEAGUES_ADDED,\r\n  MYOLDCOLLEAGUES_CHANGED,\r\n  WORKS_CHANGED,\r\n  LOCATIONGROUP_CHANGED,\r\n  MESSAGE_ADDED_TOPIC,\r\n  GMESSAGE_ADDED_TOPIC,\r\n} from './Subscription'\r\nimport { pubsub } from '../subscriptions';\r\nimport { \r\n  ossClient,\r\n  DateStartTime,\r\n  FEESETTINGTYPES,\r\n } from '../services/settings'\r\n\r\nexport const Mutation = {\r\n  signup: async (parent, { username, password, deviceId }, ctx) => {\r\n    // 输入数据验证\r\n    checkUsername(username)\r\n    checkPassword(password)\r\n    if(!validator.isAlphanumeric(deviceId)){\r\n      throw new Error('设备号索取错误')\r\n    }\r\n    //------------------------------------\r\n    const hasuser = await ctx.db.user({ username })\r\n    if (hasuser) {\r\n      throw new Error(`${username}已经被占用`)\r\n    }\r\n    // 检查设备已注册人数\r\n    const diveiceRegisters = ctx.db.registerCounts({\r\n      where: { deviceId }\r\n    })\r\n    if (diveiceRegisters.length >= 3) {\r\n      throw new Error('每台设备限注册三人，已超过最大限制')\r\n    }\r\n    //------------------------------------\r\n    const hashedPassword = await hash(password, 10)\r\n    const uid = uuidv4()\r\n    const token = sign({ userId: uid }, APP_SECRET)\r\n    const user = await ctx.db.createUser({\r\n      username,\r\n      password: hashedPassword,\r\n      uid,\r\n      token,\r\n    })\r\n    // 添加注册信息\r\n    await ctx.db.createRegisterCount({\r\n      addUser: { connect: { id: user.id } },\r\n      deviceId,\r\n    })\r\n\r\n    return {\r\n      token,\r\n      user\r\n    }\r\n  },\r\n\r\n  login: async (parent, { username, password }, ctx) => {\r\n    // 输入数据验证\r\n    checkUsername(username)\r\n    checkPassword(password)\r\n    //------------------------------------\r\n    const user = await ctx.db.user({ username })\r\n    if (!user) {\r\n      throw new Error(`用户不存在: ${username}`)\r\n    }\r\n\r\n    const valid = await compare(password, user.password)\r\n    if (!valid) {\r\n      throw new Error('密码错误')\r\n    }\r\n    // -----------------------------------\r\n\r\n\r\n    return {\r\n      token: user.token,\r\n      user\r\n    }\r\n  },\r\n  changePassword: async (parent, { currentPassword, newPassword }, ctx) => {\r\n    // 权限验证\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    // -----------------------------------------------\r\n    // 输入数据验证\r\n    if (currentPassword && newPassword) {\r\n      checkPassword(currentPassword)\r\n      checkPassword(newPassword)\r\n    }\r\n\r\n    const valid = await compare(currentPassword, user.password)\r\n    if (!valid) {\r\n      throw new Error('原始密码错误')\r\n    }\r\n    // --------------------------------------------------------\r\n\r\n    const hashedNewPassword = await hash(newPassword, 10)\r\n    const uid = uuidv4()\r\n    const updateUser = await ctx.db.updateUser({\r\n      data: {\r\n        password: hashedNewPassword,\r\n        uid,\r\n        token: sign({ userId: uid }, APP_SECRET)\r\n      },\r\n      where: {\r\n        uid: userId\r\n      }\r\n    })\r\n\r\n    return updateUser\r\n\r\n  },\r\n\r\n  findPassword: async (parent, { forgetterId }, ctx) => {\r\n    // -----------------------------------------------\r\n    // 输入数据验证\r\n    checkId(forgetterId)\r\n\r\n    // --------------------------------------------------------\r\n    // 权限验证\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const forgetter = await ctx.db.user({ id: forgetterId })\r\n\r\n    if (!forgetter) {\r\n      throw new Error('用户不存在')\r\n    }\r\n    const findPasswords = await ctx.db.findPassWords({\r\n      where: { forgetter: { id: forgetterId } }\r\n    })\r\n    if (findPasswords.length > 0) {\r\n      const remmembers = await ctx.db.findPassWord({ id: findPasswords[0].id }).remmember()\r\n      if (remmembers[0].id === user.id) {\r\n        return findPasswords[0]\r\n      }\r\n      const updateFindPassword = await ctx.db.updateFindPassWord({\r\n        where: { id: findPasswords[0].id },\r\n        data: {\r\n          times: 2,\r\n          forgetter: { connect: { id: forgetterId } },\r\n          remmember: { connect: { id: user.id } }\r\n        }\r\n      })\r\n      const newPassword = '123456abcd'\r\n      const hashedNewPassword = await hash(newPassword, 10)\r\n      const uid = uuidv4()\r\n      await ctx.db.updateUser({\r\n        data: {\r\n          password: hashedNewPassword,\r\n          uid,\r\n          token: sign({ userId: uid }, APP_SECRET)\r\n        },\r\n        where: {\r\n          id: forgetterId\r\n        }\r\n      })\r\n\r\n      await ctx.db.deleteFindPassWord({ id: updateFindPassword.id })\r\n\r\n      return updateFindPassword\r\n    }\r\n\r\n    return ctx.db.createFindPassWord({\r\n      times: 1,\r\n      forgetter: { connect: { id: forgetterId } },\r\n      remmember: { connect: { id: user.id } }\r\n    })\r\n\r\n  },\r\n\r\n  addBasicInfo: async (parent, { name, gender, birthday, birthplace, residence }, ctx) => {\r\n    // 权限验证\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    // -----------------------------------------------\r\n    // 输入数据验证\r\n    validateBasicInfo(name, gender, birthday, birthplace, residence)\r\n    //------------------------------------\r\n    // 检查是或否已经存在location\r\n\r\n    let birthLocation\r\n    let residenceLocation\r\n\r\n    const homeVillage = await ctx.db.village({ code: birthplace.village })\r\n    const homeStreet = await ctx.db.street({ code: birthplace.street })\r\n    const homeArea = await ctx.db.area({ code: birthplace.area })\r\n    const homeCity = await ctx.db.city({ code: birthplace.city })\r\n    const homeProvince = await ctx.db.province({ code: birthplace.province })\r\n\r\n    const residenceVillage = await ctx.db.village({ code: residence.village })\r\n    const residenceStreet = await ctx.db.street({ code: residence.street })\r\n    const residenceArea = await ctx.db.area({ code: residence.area })\r\n    const residenceCity = await ctx.db.city({ code: residence.city })\r\n    const residenceProvince = await ctx.db.province({ code: residence.province })\r\n\r\n    const existBirthplaces = await ctx.db.locations({\r\n      where: {\r\n        province: { code: birthplace.province },\r\n        city: { code: birthplace.city },\r\n        area: { code: birthplace.area },\r\n        village: { code: birthplace.village },\r\n        street: { code: birthplace.street },\r\n      }\r\n    })\r\n\r\n    if (existBirthplaces.length === 0) {\r\n      birthLocation = await ctx.db.createLocation({\r\n        name: homeProvince.name + homeCity.name + homeArea.name + homeStreet.name + homeVillage.name,\r\n        province: { connect: { code: birthplace.province } },\r\n        city: { connect: { code: birthplace.city } },\r\n        area: { connect: { code: birthplace.area } },\r\n        street: { connect: { code: birthplace.street } },\r\n        village: { connect: { code: birthplace.village } },\r\n      })\r\n    } else {\r\n      birthLocation = existBirthplaces[0]\r\n    }\r\n    const existResidences = await ctx.db.locations({\r\n      where: {\r\n        province: { code: residence.province },\r\n        city: { code: residence.city },\r\n        area: { code: residence.area },\r\n        village: { code: residence.village },\r\n        street: { code: residence.street },\r\n      }\r\n    })\r\n    if (existResidences.length === 0) {\r\n      residenceLocation = await ctx.db.createLocation({\r\n        name: residenceProvince.name + residenceCity.name + residenceArea.name + residenceStreet.name + residenceVillage.name,\r\n        province: { connect: { code: residence.province } },\r\n        city: { connect: { code: residence.city } },\r\n        area: { connect: { code: residence.area } },\r\n        street: { connect: { code: residence.street } },\r\n        village: { connect: { code: residence.village } },\r\n      })\r\n    } else {\r\n      residenceLocation = existResidences[0]\r\n    }\r\n    // -----------------------------------------------\r\n    const updateUser = ctx.db.updateUser({\r\n      where: { uid: userId },\r\n      data: {\r\n        name,\r\n        gender,\r\n        birthdaycalendar: birthday.calendar,\r\n        birthday: birthday.date,\r\n        birthplace: { connect: { id: birthLocation.id } },\r\n        residence: { connect: { id: residenceLocation.id } },\r\n      }\r\n    })\r\n    // 添加location group\r\n    const villageGroupTypes = { 'HomeVillage': homeVillage, 'ResidenceVillage': residenceVillage }\r\n    // 添加village组\r\n    for (const type of Object.keys(villageGroupTypes)) {\r\n      // 检查老家组是否存在\r\n      const villageLocationGroups = await ctx.db.locationGroups({\r\n        where: { code: villageGroupTypes[type].code }\r\n      })\r\n      // 检查用户是否已经有老家组\r\n      const userInVillageGroups = await ctx.db.user({ id: user.id }).locationGroups({\r\n        where: { kind: type }\r\n      })\r\n\r\n      // 如果没有老家组\r\n      if (villageLocationGroups.length === 0) {\r\n        await ctx.db.createLocationGroup({\r\n          kind: type,\r\n          code: villageGroupTypes[type].code,\r\n          name: villageGroupTypes[type].name,\r\n          users: { connect: { uid: userId } }\r\n        })\r\n        pubsub.publish(LOCATIONGROUP_CHANGED, {\r\n          [LOCATIONGROUP_CHANGED]: {\r\n            \"toId\": user.id,\r\n            \"type\": \"refech\"\r\n          }\r\n        })\r\n        // 如果用户有老家组\r\n        if (userInVillageGroups.length > 0) {\r\n          // 从原来的组中删除User\r\n          const oldGroup = await ctx.db.updateLocationGroup({\r\n            where: { id: userInVillageGroups[0].id },\r\n            data: { users: { disconnect: { uid: userId } } }\r\n          })\r\n          const oldGroupUsers = await ctx.db.locationGroup({ id: oldGroup.id }).users()\r\n          for (const oldGroupUser of oldGroupUsers) {\r\n            pubsub.publish(LOCATIONGROUP_CHANGED, {\r\n              [LOCATIONGROUP_CHANGED]: {\r\n                \"toId\": oldGroupUser.id,\r\n                \"groupId\": oldGroup.id,\r\n                'userid': user.id,\r\n                'type': \"userRemoved\"\r\n              }\r\n            })\r\n          }\r\n        }\r\n      } else {\r\n        const a = 1\r\n        if (userInVillageGroups.length > 0) {\r\n          if (userInVillageGroups[0].id !== villageLocationGroups[0].id) {\r\n            // 从原来的组中删除User\r\n            const oldGroup = await ctx.db.updateLocationGroup({\r\n              where: { id: userInVillageGroups[0].id },\r\n              data: { users: { disconnect: { uid: userId } } }\r\n            })\r\n            const oldGroupUsers = await ctx.db.locationGroup({ id: oldGroup.id }).users()\r\n            for (const oldGroupUser of oldGroupUsers) {\r\n              pubsub.publish(LOCATIONGROUP_CHANGED, {\r\n                [LOCATIONGROUP_CHANGED]: {\r\n                  \"toId\": oldGroupUser.id,\r\n                  \"groupId\": oldGroup.id,\r\n                  'userid': user.id,\r\n                  'type': \"userRemoved\"\r\n                }\r\n              })\r\n            }\r\n            // 将User添加到现在的组中\r\n            const newGroup = await ctx.db.updateLocationGroup({\r\n              where: { id: villageLocationGroups[0].id },\r\n              data: { users: { connect: { uid: userId } } }\r\n            })\r\n            const newGroupUsers = await ctx.db.locationGroup({ id: newGroup.id }).users()\r\n            for (const newGroupUser of newGroupUsers) {\r\n              if (newGroupUser.id !== user.id) {\r\n                pubsub.publish(LOCATIONGROUP_CHANGED, {\r\n                  [LOCATIONGROUP_CHANGED]: {\r\n                    \"toId\": newGroupUser.id,\r\n                    \"groupId\": newGroup.id,\r\n                    \"userid\": user.id,\r\n                    \"username\": user.name,\r\n                    \"userAvatar\": user.avatar,\r\n                    'type': 'userAdded'\r\n                  }\r\n                })\r\n              }\r\n            }\r\n            pubsub.publish(LOCATIONGROUP_CHANGED, {\r\n              [LOCATIONGROUP_CHANGED]: {\r\n                \"toId\": user.id,\r\n                \"type\": \"refech\"\r\n              }\r\n            })\r\n          }\r\n        } else {\r\n          // 将用户添加到现在的组中\r\n          const newGroup = await ctx.db.updateLocationGroup({\r\n            where: { id: villageLocationGroups[0].id },\r\n            data: { users: { connect: { uid: userId } } }\r\n          })\r\n          const newGroupUsers = await ctx.db.locationGroup({ id: newGroup.id }).users()\r\n          for (const newGroupUser of newGroupUsers) {\r\n            if (newGroupUser.id !== user.id) {\r\n              pubsub.publish(LOCATIONGROUP_CHANGED, {\r\n                [LOCATIONGROUP_CHANGED]: {\r\n                  \"toId\": newGroupUser.id,\r\n                  \"groupId\": newGroup.id,\r\n                  \"userid\": user.id,\r\n                  \"username\": user.name,\r\n                  \"userAvatar\": user.avatar,\r\n                  'type': 'userAdded'\r\n                }\r\n              })\r\n            }\r\n          }\r\n          pubsub.publish(LOCATIONGROUP_CHANGED, {\r\n            [LOCATIONGROUP_CHANGED]: {\r\n              \"toId\": user.id,\r\n              \"type\": \"refech\"\r\n            }\r\n          })\r\n        }\r\n      }\r\n\r\n\r\n\r\n    }\r\n\r\n    // 添加老乡组\r\n    const hometownGroupTypes = {\r\n      \"VillageInResidenceVillage\": [homeVillage, residenceVillage],\r\n      \"StreetInResidenceVillage\": [homeStreet, residenceVillage],\r\n      \"AreaInResidenceVillage\": [homeArea, residenceVillage],\r\n      \"CityInResidenceVillage\": [homeCity, residenceVillage],\r\n      \"ProvinceInResidenceVillage\": [homeProvince, residenceVillage],\r\n      \"VillageInResidenceStreet\": [homeVillage, residenceStreet],\r\n      \"StreetInResidenceStreet\": [homeStreet, residenceStreet],\r\n      \"AreaInResidenceStreet\": [homeArea, residenceStreet],\r\n      \"CityInResidenceStreet\": [homeCity, residenceStreet],\r\n      \"ProvinceInResidenceStreet\": [homeProvince, residenceStreet],\r\n      \"VillageInResidenceArea\": [homeVillage, residenceArea],\r\n      \"StreetInResidenceArea\": [homeStreet, residenceArea],\r\n      \"AreaInResidenceArea\": [homeArea, residenceArea],\r\n      \"CityInResidenceArea\": [homeCity, residenceArea],\r\n      \"ProvinceInResidenceArea\": [homeProvince, residenceArea],\r\n      \"VillageInResidenceCity\": [homeVillage, residenceCity],\r\n      \"StreetInResidenceCity\": [homeStreet, residenceCity],\r\n      \"AreaInResidenceCity\": [homeArea, residenceCity],\r\n      \"CityInResidenceCity\": [homeCity, residenceCity],\r\n      \"ProvinceInResidenceCity\": [homeProvince, residenceCity],\r\n    }\r\n\r\n    if (homeProvince.id !== residenceProvince.id) {\r\n      // 对于跨省人的增加老乡组\r\n      for (const type of Object.keys(hometownGroupTypes)) {\r\n        // 检查组是否存在\r\n        const hometownLocationGroups = await ctx.db.locationGroups({\r\n          where: { code: `${hometownGroupTypes[type][0].code}in${hometownGroupTypes[type][1].code}` }\r\n        })\r\n        // 检查用户是否已经有组\r\n        const userInHometownGroups = await ctx.db.user({ id: user.id }).locationGroups({\r\n          where: { kind: type }\r\n        })\r\n\r\n        if (hometownLocationGroups.length === 0) {\r\n          await ctx.db.createLocationGroup({\r\n            kind: type,\r\n            code: `${hometownGroupTypes[type][0].code}in${hometownGroupTypes[type][1].code}`,\r\n            name: `${hometownGroupTypes[type][0].name}人在${hometownGroupTypes[type][1].name}`,\r\n            users: { connect: { uid: userId } }\r\n          })\r\n          pubsub.publish(LOCATIONGROUP_CHANGED, {\r\n            [LOCATIONGROUP_CHANGED]: {\r\n              \"toId\": user.id,\r\n              \"type\": \"refech\"\r\n            }\r\n          })\r\n          // 如果用户有老家组\r\n          if (userInHometownGroups.length > 0) {\r\n            // 从原来的组中删除User\r\n            const oldGroup = await ctx.db.updateLocationGroup({\r\n              where: { id: userInHometownGroups[0].id },\r\n              data: { users: { disconnect: { uid: userId } } }\r\n            })\r\n            const oldGroupUsers = await ctx.db.locationGroup({ id: oldGroup.id }).users()\r\n            for (const oldGroupUser of oldGroupUsers) {\r\n              pubsub.publish(LOCATIONGROUP_CHANGED, {\r\n                [LOCATIONGROUP_CHANGED]: {\r\n                  \"toId\": oldGroupUser.id,\r\n                  \"groupId\": oldGroup.id,\r\n                  'userid': user.id,\r\n                  'type': \"userRemoved\"\r\n                }\r\n              })\r\n            }\r\n          }\r\n        } else {\r\n          const b = 1\r\n          if (userInHometownGroups.length > 0) {\r\n            if (userInHometownGroups[0].id !== hometownLocationGroups[0].id) {\r\n              // 从原来的组中删除User\r\n              const oldGroup = await ctx.db.updateLocationGroup({\r\n                where: { id: userInHometownGroups[0].id },\r\n                data: { users: { disconnect: { uid: userId } } }\r\n              })\r\n              const oldGroupUsers = await ctx.db.locationGroup({ id: oldGroup.id }).users()\r\n              for (const oldGroupUser of oldGroupUsers) {\r\n                pubsub.publish(LOCATIONGROUP_CHANGED, {\r\n                  [LOCATIONGROUP_CHANGED]: {\r\n                    \"toId\": oldGroupUser.id,\r\n                    \"groupId\": oldGroup.id,\r\n                    'userid': user.id,\r\n                    'type': \"userRemoved\"\r\n                  }\r\n                })\r\n              }\r\n              // 将User添加到现在的组中\r\n              const newGroup = await ctx.db.updateLocationGroup({\r\n                where: { id: hometownLocationGroups[0].id },\r\n                data: { users: { connect: { uid: userId } } }\r\n              })\r\n              const newGroupUsers = await ctx.db.locationGroup({ id: newGroup.id }).users()\r\n              for (const newGroupUser of newGroupUsers) {\r\n                if (newGroupUser.id !== user.id) {\r\n                  pubsub.publish(LOCATIONGROUP_CHANGED, {\r\n                    [LOCATIONGROUP_CHANGED]: {\r\n                      \"toId\": newGroupUser.id,\r\n                      \"groupId\": newGroup.id,\r\n                      \"userid\": user.id,\r\n                      \"username\": user.name,\r\n                      \"userAvatar\": user.avatar,\r\n                      'type': 'userAdded'\r\n                    }\r\n                  })\r\n                }\r\n              }\r\n\r\n              pubsub.publish(LOCATIONGROUP_CHANGED, {\r\n                [LOCATIONGROUP_CHANGED]: {\r\n                  \"toId\": user.id,\r\n                  \"type\": \"refech\"\r\n                }\r\n              })\r\n            }\r\n          } else {\r\n            // 将用户添加到现在的组中\r\n            const newGroup = await ctx.db.updateLocationGroup({\r\n              where: { id: hometownLocationGroups[0].id },\r\n              data: { users: { connect: { uid: userId } } }\r\n            })\r\n            const newGroupUsers = await ctx.db.locationGroup({ id: newGroup.id }).users()\r\n            for (const newGroupUser of newGroupUsers) {\r\n              if (newGroupUser.id !== user.id) {\r\n                pubsub.publish(LOCATIONGROUP_CHANGED, {\r\n                  [LOCATIONGROUP_CHANGED]: {\r\n                    \"toId\": newGroupUser.id,\r\n                    \"groupId\": newGroup.id,\r\n                    \"userid\": user.id,\r\n                    \"username\": user.name,\r\n                    \"userAvatar\": user.avatar,\r\n                    'type': 'userAdded'\r\n                  }\r\n                })\r\n              }\r\n            }\r\n            pubsub.publish(LOCATIONGROUP_CHANGED, {\r\n              [LOCATIONGROUP_CHANGED]: {\r\n                \"toId\": user.id,\r\n                \"type\": \"refech\"\r\n              }\r\n            })\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return updateUser\r\n  },\r\n\r\n\r\n  createFamily: async (parent, { name, relationship, spouseId }, ctx) => {\r\n    // 权限验证\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    // -----------------------------------------------\r\n    // 输入数据验证\r\n    checkName(name)\r\n    checkRelationship(relationship)\r\n    if(spouseId){\r\n      checkId(spouseId)\r\n    }\r\n    \r\n    // -----------------------------------------------\r\n    // 创建家人\r\n    let family\r\n    if (spouseId) {\r\n      checkId(spouseId)\r\n      family = await ctx.db.createFamily({\r\n        relationship,\r\n        status: '0',\r\n        from: { connect: { uid: userId } },\r\n        to: { create: { name } },\r\n        spouse: { connect: { id: spouseId } }\r\n      })\r\n    } else {\r\n      family = await ctx.db.createFamily({\r\n        relationship,\r\n        status: '0',\r\n        from: { connect: { uid: userId } },\r\n        to: { create: { name } },\r\n      })\r\n    }\r\n \r\n    return family\r\n  },\r\n\r\n  updateFamily: async (parent, { id, name, relationship, spouseId, status = \"0\" }, ctx) => {\r\n    // 权限验证\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const ctxUser = await ctx.db.user({ uid: userId })\r\n    if (!ctxUser) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.family({ id }).from()\r\n    if (user.uid !== userId) {\r\n      throw new Error(\"无法更新不属于自己的家人\")\r\n    }\r\n    // -----------------------------------------------\r\n    // 输入数据验证\r\n    checkId(id)\r\n    checkName(name)\r\n    checkRelationship(relationship)\r\n    checkStatus(status)\r\n    if(spouseId){\r\n      checkId(spouseId)\r\n    }\r\n    \r\n    // -----------------------------------------------\r\n    let updateFamily\r\n    if (spouseId) {\r\n      checkId(spouseId)\r\n      updateFamily = await ctx.db.updateFamily({\r\n        where: { id },\r\n        data: {\r\n          to: { update: { name } },\r\n          spouse: { connect: { id: spouseId } },\r\n          relationship,\r\n          status\r\n        },\r\n      })\r\n    } else {\r\n      updateFamily = await ctx.db.updateFamily({\r\n        where: { id },\r\n        data: {\r\n          to: { update: { name } },\r\n          relationship,\r\n          status\r\n        },\r\n      })\r\n    }\r\n    const hasFatherAndMother = await checkExistFatherAndMother(user.id, ctx)\r\n    if (hasFatherAndMother) {\r\n      await refreshMyFamilyGroups(parent, {}, ctx)\r\n    }\r\n    return updateFamily\r\n  },\r\n\r\n  deleteFamily: async (parent, { familyId, toId }, ctx) => {\r\n    // 权限验证\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.family({ id: familyId }).from()\r\n    if (user.uid !== userId) {\r\n      throw new Error(\"无法删除不属于自己的家人\")\r\n    }\r\n    // -----------------------------------------------\r\n    // 输入数据验证\r\n    checkId(familyId)\r\n    checkId(toId)\r\n    // -----------------------------------------------\r\n\r\n    const deleteFamily = await ctx.db.deleteFamily({ id: familyId })\r\n    const personUser = await ctx.db.person({ id: toId }).user()\r\n    const personFamilies = await ctx.db.person({ id: toId }).families()\r\n    if (!personUser && personFamilies.length === 0) {\r\n      await ctx.db.deletePerson({ id: toId })\r\n    }\r\n    const hasFatherAndMother = await checkExistFatherAndMother(user.id, ctx)\r\n    if (hasFatherAndMother) {\r\n      await refreshMyFamilyGroups(parent, {}, ctx)\r\n    }\r\n    return deleteFamily\r\n  },\r\n\r\n  connectFamily: async (parent, { relativeId, familyId, name, relationship }, ctx) => {\r\n    // relativeId:亲属的user id\r\n    // familyId:自己建立亲属的id\r\n    // name:亲属的姓名\r\n    // relationship:和亲属的关系\r\n\r\n    // 权限验证\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n\r\n    const user = await ctx.db.family({ id: familyId }).from()\r\n    if (user.uid !== userId) {\r\n      throw new Error(\"无法连接不属于自己的家人\")\r\n    }\r\n    // -----------------------------------------------\r\n    // 输入数据验证\r\n    checkId(relativeId)\r\n    checkId(familyId)\r\n    checkName(name)\r\n    checkRelationship(relationship)\r\n    // -----------------------------------------------\r\n    // 亲人\r\n    const relative = await ctx.db.user({ id: relativeId })\r\n    if (relative.name !== name) {\r\n      throw new Error(\"对方姓名与你拟添加的家庭成员姓名不一致\")\r\n    }\r\n    // 亲人的家庭成员列表，仅包含尚未连接的列表\r\n    const families = await ctx.db.families({\r\n      where: {\r\n        AND: [\r\n          { from: { id: relativeId } },\r\n          { status: \"0\" },\r\n          { relationship_in: relationshipMap[relationship] }\r\n        ]\r\n      }\r\n    })\r\n    // 检查拟建立关系的亲人家庭成员中是否添加了与user相同的名字和对应的关系。\r\n    if (families.length === 0) {\r\n      throw new Error(\"对方家庭成员中未找到你的名字\")\r\n    }\r\n    let personId\r\n    let relativeFamilyId\r\n    for (const family of families) {\r\n      // 获取亲人家庭成员的个人信息\r\n      const persons = await ctx.db.persons({ where: { families_some: { id: family.id } } })\r\n      for (const person of persons) {\r\n        if (person.name === user.name && relationshipMap[relationship].indexOf(family.relationship) > -1) {\r\n          personId = person.id\r\n          relativeFamilyId = family.id\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!personId || !relativeFamilyId) {\r\n      throw new Error(\"对方家庭成员中未包含你的名字或关系不正确\")\r\n    }\r\n    // 检查person中是否已经存在User\r\n    const persons1 = await ctx.db.persons({ where: { user: { uid: userId } } })\r\n    // 0:连接，1:等待验证 2:确认 3:已连接\r\n    // 更新亲人连接状态为“确认”,更新to中的user\r\n    if (persons1.length === 0) {\r\n      await ctx.db\r\n        .updateFamily({\r\n          data: {\r\n            status: \"2\",\r\n            to: {\r\n              update: {\r\n                user: {\r\n                  connect: {\r\n                    uid: userId\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          where: {\r\n            id: relativeFamilyId\r\n          }\r\n        })\r\n    } else {\r\n      await ctx.db\r\n        .updateFamily({\r\n          data: {\r\n            status: \"2\",\r\n            to: {\r\n              connect: {\r\n                id: persons1[0].id\r\n              }\r\n            }\r\n          },\r\n          where: {\r\n            id: relativeFamilyId\r\n          }\r\n        })\r\n    }\r\n    // 此处发送向relative发送订阅\r\n    pubsub.publish(FAMILY_CHANGED, { [FAMILY_CHANGED]: { \"text\": relativeId } })\r\n    // 更新自己的家庭成员状态为“等待确认”,更新to中的user\r\n    // 检查person中是否已经存在relative\r\n    const persons2 = await ctx.db.persons({ where: { user: { id: relativeId } } })\r\n    let updateFamily\r\n    if (persons2.length === 0) {\r\n      updateFamily = await ctx.db\r\n        .updateFamily({\r\n          data: {\r\n            status: \"1\",\r\n            to: {\r\n              update: {\r\n                user: {\r\n                  connect: {\r\n                    id: relativeId\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          where: {\r\n            id: familyId\r\n          }\r\n        })\r\n    } else {\r\n      updateFamily = await ctx.db\r\n        .updateFamily({\r\n          data: {\r\n            status: \"1\",\r\n            to: {\r\n              connect: {\r\n                id: persons2[0].id\r\n              }\r\n            }\r\n          },\r\n          where: {\r\n            id: familyId\r\n          }\r\n        })\r\n    }\r\n    return updateFamily\r\n  },\r\n\r\n  confirmFamily: async (parent, { familyId }, ctx) => {\r\n    // 权限验证\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.family({ id: familyId }).from()\r\n    if (user.uid !== userId) {\r\n      throw new Error(\"无法确认不属于自己的家人\")\r\n    }\r\n    // -----------------------------------------------\r\n    // 输入数据验证\r\n    checkId(familyId)\r\n    // -----------------------------------------------\r\n\r\n    // 更新user family status\r\n    const myUpdateFamily = await ctx.db.updateFamily({\r\n      where: { id: familyId },\r\n      data: { status: \"3\" }\r\n    })\r\n\r\n\r\n    // 获取relative famliy\r\n    // 获取relative\r\n    const relative = await ctx.db.family(\r\n      { id: familyId },\r\n    ).to().user()\r\n    // 获取relative Family\r\n    const relativeFamily = await ctx.db.user({ id: relative.id }).families({ where: { to: { user: { uid: userId } } } })\r\n    // 更新relative family  status\r\n    await ctx.db.updateFamily({\r\n      where: { id: relativeFamily[0].id },\r\n      data: { status: \"3\" }\r\n    })\r\n    pubsub.publish(FAMILY_CHANGED, { [FAMILY_CHANGED]: { \"text\": relative.id } })\r\n    // 删除多余的person 见deletePersons\r\n    // 没有必要每个删除，可以定时的删除所有family为[],并且user 为null的person.\r\n\r\n    // 合并相同的亲人\r\n    // 将共同的亲人分为三部分，一部分是me和relative都有的commonuser,第二部分是me有relative没有的，第三部分是relative有me没有的。\r\n    // 我的家庭成员==》我的共同家庭成员==》使用我的共同家庭成员同步relative的family，同时更新共同家庭成员family\r\n    // rel的家庭成员==》rel的共同家庭成员==》使用rel的共同家庭成员同步我的family，同时更新共同家庭成员family\r\n\r\n    const myRelationship = myUpdateFamily.relationship\r\n    const relativeRelationship = relativeFamily[0].relationship\r\n    const isHusbandOrWife = ~[\"husband\", \"wife\"].indexOf(myRelationship)\r\n    const myFamilies = await ctx.db.user({ uid: userId }).families()\r\n    const relativeFamilies = await ctx.db.user({ id: relative.id }).families()\r\n    // 获取共同的亲人\r\n    const myCommonFamilies = await getCommonFamilies(relativeRelationship, myFamilies, myUpdateFamily.id, ctx)\r\n    const relativeCommonFamilies = await getCommonFamilies(myRelationship, relativeFamilies, relativeFamily[0].id, ctx)\r\n    // 获取共同家庭成员的交集\r\n    const { myIntersectionFamilies, relativeIntersectionFamilies } = await getIntersectionFamiles(myCommonFamilies, relativeCommonFamilies, ctx)\r\n    // 获取me共同成员的差集\r\n    const myDifferentFamilies = getDifferentFamilies(myCommonFamilies, myIntersectionFamilies)\r\n    // 获取relative共同成员的差集\r\n    const relativeDifferentFamilies = getDifferentFamilies(relativeCommonFamilies, relativeIntersectionFamilies)\r\n    // 第一部分：遍历共同的家庭成员交集，用status大的一方更新小的一方。\r\n    for (const myCommonFamily of myIntersectionFamilies) {\r\n      const myCommonFamilyTo = await ctx.db.family({ id: myCommonFamily.id }).to()\r\n      const relativeToCommonUserFamily = await ctx.db.user({ id: relative.id }).families(\r\n        { where: { to: { name: myCommonFamilyTo.name } } }\r\n      )\r\n      const relativeToCommonUserFamilyTo = await ctx.db.family({ id: relativeToCommonUserFamily[0].id }).to()\r\n      // 如果已经同步了，就不要在同步了\r\n      if (myCommonFamilyTo.id !== relativeToCommonUserFamilyTo.id ||\r\n        myCommonFamily.status !== relativeToCommonUserFamily[0].status\r\n      ) {\r\n        if (myCommonFamily.status >= relativeToCommonUserFamily[0].status) {\r\n          // 如果我的家庭成员status大于relative的status,则更新relative的family\r\n          // 更新relative的family\r\n          await ctx.db.updateFamily({\r\n            where: { id: relativeToCommonUserFamily[0].id },\r\n            data: {\r\n              status: myCommonFamily.status,\r\n              to: { connect: { id: myCommonFamilyTo.id } }\r\n            }\r\n          })\r\n          if (myCommonFamily.status > \"0\") {\r\n            // 如果等于0,则还没有共同的user,无需更新,如果大于0，则要更新CommonUser\r\n            await updateCommonUserFamily(user, myRelationship, myCommonFamily, relative, relativeRelationship, ctx)\r\n          }\r\n          // 向relative推送familyChanged\r\n          pubsub.publish(FAMILY_CHANGED, { [FAMILY_CHANGED]: { \"text\": relative.id } })\r\n        }\r\n        else {\r\n          // 如果relative的status大于我的家庭成员的status，则更新我的family\r\n          // 更新我的family\r\n          await ctx.db.updateFamily({\r\n            where: { id: myCommonFamily.id },\r\n            data: {\r\n              status: relativeToCommonUserFamily[0].status,\r\n              to: { connect: { id: relativeToCommonUserFamilyTo.id } }\r\n            }\r\n          })\r\n\r\n          if (relativeToCommonUserFamily[0].status > 0) {\r\n            // 如果等于0,则还没有共同的user,无需更新,如果大于0，则要更新CommonUser\r\n            await updateCommonUserFamily(relative, relativeRelationship, relativeToCommonUserFamily[0], user, myRelationship, ctx)\r\n          }\r\n          // 像我推送“familyChanged\"\r\n          pubsub.publish(FAMILY_CHANGED, { [FAMILY_CHANGED]: { \"text\": user.id } })\r\n        }\r\n      }\r\n    }\r\n\r\n    // 第二部分：遍历relative共同成员差集\r\n    for (const relativeCommonFamily of relativeDifferentFamilies) {\r\n      const relativeCommonFamilyTo = await ctx.db.family({ id: relativeCommonFamily.id }).to()\r\n\r\n      const meRelationship = (relationshipGenderMap[relationshipTOGender[relativeCommonFamily.relationship]]\r\n      [relationIntersectionNew[relationshipGenderMap[relative.gender][relativeCommonFamily.relationship]][relativeFamily[0].relationship]]\r\n      )\r\n      // 如果是自己的话，不要增加\r\n      if (relativeCommonFamilyTo.name !== user.name) {\r\n        if (isHusbandOrWife) {\r\n          await ctx.db.createFamily({\r\n            from: { connect: { id: user.id } },\r\n            status: relativeCommonFamily.status,\r\n            to: { connect: { id: relativeCommonFamilyTo.id } },\r\n            spouse: { connect: { id: myUpdateFamily.id } },\r\n            relationship: meRelationship\r\n          })\r\n        } else {\r\n          const mySpouse = await ctx.db.family({ id: myUpdateFamily.id }).spouse()\r\n          await ctx.db.createFamily({\r\n            from: { connect: { id: user.id } },\r\n            status: relativeCommonFamily.status,\r\n            to: { connect: { id: relativeCommonFamilyTo.id } },\r\n            spouse: mySpouse ? { connect: { id: mySpouse.id } } : null,\r\n            relationship: meRelationship\r\n          })\r\n        }\r\n      }\r\n      if (relativeCommonFamily.status > \"0\") {\r\n        // 如果等于0,则还没有共同的user,无需更新,如果大于0，则要更新CommonUser\r\n        await updateCommonUserFamily(relative, relativeRelationship, relativeCommonFamily, user, myRelationship, ctx)\r\n      }\r\n      pubsub.publish(FAMILY_CHANGED, { [FAMILY_CHANGED]: { \"text\": user.id } })\r\n    }\r\n\r\n    // 第三部分：遍历me共同成员的差集\r\n    for (const myCommonFamily of myDifferentFamilies) {\r\n      const myCommonFamilyTo = await ctx.db.family({ id: myCommonFamily.id }).to()\r\n      let relRelationship = (relationshipGenderMap[relationshipTOGender[myCommonFamily.relationship]]\r\n      [relationIntersectionNew[relationshipGenderMap[user.gender][myCommonFamily.relationship]][myUpdateFamily.relationship]\r\n      ])\r\n      const myCommonFamilyToUser = await ctx.db.family({ id: myCommonFamily.id }).to().user()\r\n      if (myCommonFamilyToUser) {\r\n        if (relRelationship === \"sister\") {\r\n          if (Date.parse(myCommonFamilyToUser.birthday) > Date.parse(relative.birthday)) {\r\n            relRelationship = \"youngsister\"\r\n          } else {\r\n            relRelationship = \"oldsister\"\r\n          }\r\n        } else if (relRelationship === \"brother\") {\r\n          if (Date.parse(myCommonFamilyToUser.birthday) > Date.parse(relative.birthday)) {\r\n            relRelationship = \"youngbrother\"\r\n          } else {\r\n            relRelationship = \"oldbrother\"\r\n          }\r\n        }\r\n      }\r\n\r\n      // 如果是自己的话，不要增加\r\n      if (myCommonFamilyTo.name !== relative.name) {\r\n        // 如果relative和me是夫妻的话，则spouse直接为relativeFamily。\r\n        if (isHusbandOrWife) {\r\n          await ctx.db.createFamily({\r\n            from: { connect: { id: relative.id } },\r\n            status: myCommonFamily.status,\r\n            to: { connect: { id: myCommonFamilyTo.id } },\r\n            spouse: { connect: { id: relativeFamily[0].id } },\r\n            relationship: relRelationship\r\n          })\r\n        } else {\r\n          // 如果relative和me是不是夫妻的话，则spouse为relativeFamily的spouse,因为剩下的肯定是子女或兄弟姐妹关系，\r\n          // 兄弟姐妹的话spouse为null,子女的话spouse也是对应的spouse。\r\n          const relativeSpouse = await ctx.db.family({ id: relativeFamily[0].id }).spouse()\r\n          await ctx.db.createFamily({\r\n            from: { connect: { id: relative.id } },\r\n            status: myCommonFamily.status,\r\n            to: { connect: { id: myCommonFamilyTo.id } },\r\n            spouse: relativeSpouse ? { connect: { id: relativeSpouse.id } } : null,\r\n            relationship: relRelationship\r\n          })\r\n        }\r\n      }\r\n      if (myCommonFamily.status > \"0\") {\r\n        // 如果等于0,则还没有共同的user,无需更新,如果大于0，则要更新CommonUser\r\n        await updateCommonUserFamily(user, myRelationship, myCommonFamily, relative, relativeRelationship, ctx)\r\n      }\r\n      // 向relative推送familychanged\r\n      pubsub.publish(FAMILY_CHANGED, { [FAMILY_CHANGED]: { \"text\": relative.id } })\r\n    }\r\n    const hasFatherAndMother = await checkExistFatherAndMother(user.id, ctx)\r\n    if (hasFatherAndMother) {\r\n      await refreshMyFamilyGroups(parent, {}, ctx)\r\n    }\r\n    return myUpdateFamily\r\n  },\r\n\r\n  addLocation: async (parent, { location, locationName }, ctx) => {\r\n    // 权限验证\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    // -----------------------------------------------\r\n    // 输入数据验证\r\n    checkCnEnNum(locationName)\r\n\r\n    // -----------------------------------------------\r\n    // 获取要输入的数据。 \r\n    // 获取学校地址\r\n    let place\r\n    place = await ctx.db.location({ name: locationName })\r\n    if (!place) {\r\n      if (location.village !== \"\") {\r\n        place = await ctx.db.createLocation({\r\n          name: locationName,\r\n          province: { connect: { code: location.province } },\r\n          city: { connect: { code: location.city } },\r\n          area: { connect: { code: location.area } },\r\n          street: { connect: { code: location.street } },\r\n          village: { connect: { code: location.village } },\r\n        })\r\n      } else if (location.street !== \"\") {\r\n        place = await ctx.db.createLocation({\r\n          name: locationName,\r\n          province: { connect: { code: location.province } },\r\n          city: { connect: { code: location.city } },\r\n          area: { connect: { code: location.area } },\r\n          street: { connect: { code: location.street } },\r\n        })\r\n      } else if (location.area !== \"\") {\r\n        place = await ctx.db.createLocation({\r\n          name: locationName,\r\n          province: { connect: { code: location.province } },\r\n          city: { connect: { code: location.city } },\r\n          area: { connect: { code: location.area } },\r\n        })\r\n      } else if (location.city !== \"\") {\r\n        place = await ctx.db.createLocation({\r\n          name: locationName,\r\n          province: { connect: { code: location.province } },\r\n          city: { connect: { code: location.city } },\r\n        })\r\n      } else if (location.province !== \"\") {\r\n        place = await ctx.db.createLocation({\r\n          name: locationName,\r\n          province: { connect: { code: location.province } },\r\n        })\r\n      } else {\r\n        place = await ctx.db.createLocation({\r\n          name: locationName,\r\n        })\r\n      }\r\n    }\r\n\r\n    return place\r\n  },\r\n\r\n  addSchool: async (parent, { name, kind, locationName }, ctx) => {\r\n    // 输入数据校验\r\n    // -----------------------------------------------\r\n    checkCnEnNum(name)\r\n    if(!validator.isAlpha(kind)){\r\n      throw new Error('学校种类输入错误')\r\n    }\r\n    checkCnEnNum(locationName)\r\n\r\n    // -----------------------------------------------\r\n    const schools = await ctx.db.schools(\r\n      {\r\n        where: {\r\n          AND: [\r\n            { name },\r\n            { kind },\r\n            { location: { name: locationName } }\r\n          ]\r\n        }\r\n      }\r\n    )\r\n\r\n    if (schools.length === 0) {\r\n      return ctx.db.createSchool({\r\n        name,\r\n        kind,\r\n        location: { connect: { name: locationName } }\r\n      })\r\n    }\r\n\r\n    throw new Error('学校已存在')\r\n\r\n  },\r\n\r\n  addStudy: async (parent, { year, schoolId, grade, className, majorId = \"\" }, ctx) => {\r\n    // 权限验证\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    // -----------------------------------------------\r\n    // 输入数据验证\r\n    checkNum(year)\r\n    checkId(schoolId)\r\n    checkNum(grade)\r\n    checkCnEnNum(className)\r\n    if (majorId !== \"\") {\r\n      checkId(majorId)\r\n    }\r\n    // -----------------------------------------------\r\n    // 获取要输入的数据。 \r\n    // 获取学校地址\r\n    const startTime = `${year}-9-1`\r\n    let schoolEdus\r\n    let newSchoolEdu\r\n    if (majorId === \"\") {\r\n      schoolEdus = await ctx.db.schoolEdus({\r\n        where: {\r\n          AND: [\r\n            { startTime },\r\n            { grade },\r\n            { className },\r\n            { school: { id: schoolId } },\r\n          ]\r\n        }\r\n      })\r\n\r\n      if (schoolEdus.length === 0) {\r\n        newSchoolEdu = await ctx.db.createSchoolEdu({\r\n          startTime,\r\n          grade,\r\n          className,\r\n          school: { connect: { id: schoolId } },\r\n          students: { connect: { uid: userId } }\r\n        })\r\n\r\n      } else {\r\n        newSchoolEdu = await ctx.db.updateSchoolEdu(\r\n          {\r\n            where: { id: schoolEdus[0].id },\r\n            data: { students: { connect: { uid: userId } } }\r\n          }\r\n        )\r\n      }\r\n    } else {\r\n      schoolEdus = await ctx.db.schoolEdus({\r\n        where: {\r\n          AND: [\r\n            { startTime },\r\n            { grade },\r\n            { className },\r\n            { school: { id: schoolId } },\r\n            { major: { id: majorId } }\r\n          ]\r\n        }\r\n      })\r\n\r\n      if (schoolEdus.length === 0) {\r\n        newSchoolEdu = await ctx.db.createSchoolEdu({\r\n          startTime,\r\n          grade,\r\n          className,\r\n          school: { connect: { id: schoolId } },\r\n          major: { connect: { id: majorId } },\r\n          students: { connect: { uid: userId } }\r\n        })\r\n      } else {\r\n        newSchoolEdu = await ctx.db.updateSchoolEdu(\r\n          {\r\n            where: { id: schoolEdus[0].id },\r\n            data: { students: { connect: { uid: userId } } }\r\n          }\r\n        )\r\n      }\r\n    }\r\n    // 向所有同学推送\r\n    const students = await ctx.db.schoolEdu({ id: newSchoolEdu.id }).students()\r\n    for (const student of students) {\r\n      pubsub.publish(STUDENTS_ADDED, { [STUDENTS_ADDED]: { \"text\": student.id } })\r\n    }\r\n    return newSchoolEdu\r\n  },\r\n\r\n  addOrUpdateWork: async (parent, { companyName, startTime, endTime, department, stationId, updateId }, ctx) => {\r\n    // 权限验证\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    // -----------------------------------------------\r\n    // 输入数据验证\r\n    checkDate(startTime)\r\n    checkDate(endTime)\r\n    checkCompanyName(companyName)\r\n    checkName(department)\r\n    checkId(stationId)\r\n    if(updateId){\r\n      checkId(updateId)\r\n    }\r\n    // -----------------------------------------------\r\n    const companies = await ctx.db.companies({ where: { name: companyName } })\r\n    let companyId\r\n    let createdWork\r\n\r\n    // 如果要是更新的话\r\n    if (updateId) {\r\n      const work = await ctx.db.work({ id: updateId })\r\n      if (work) {\r\n        const worker = await ctx.db.work({ id: updateId }).worker()\r\n        if (worker.id !== user.id) {\r\n          throw new Error('你没有权利修改')\r\n        }\r\n        if (companies.length === 0) {\r\n          throw new Error('无法修改公司名称')\r\n        }\r\n        const updateWork = await ctx.db.updateWork({\r\n          where: { id: updateId },\r\n          data: {\r\n            startTime,\r\n            endTime,\r\n            department,\r\n            post: { connect: { id: stationId } },\r\n          }\r\n        })\r\n        // 如果同事离职了，更新同事，更新组，则从workGroup中删除该成员，同时在oldColleagues中增加成员。\r\n        // 从组中将成员状态为1的成员复制到oldColleagues当中\r\n        if (new Date(endTime).getFullYear() !== 9999) {\r\n          const workGroups = await ctx.db.workGroups({\r\n            where: {\r\n              AND: [\r\n                { company: { id: companies[0].id } },\r\n                {\r\n                  colleagues_some: {\r\n                    AND: [\r\n                      { worker: { id: user.id } },\r\n                      { status: '1' }\r\n                    ]\r\n                  }\r\n                }\r\n              ]\r\n            }\r\n          })\r\n          if (workGroups.length > 0) {\r\n            const workGroupWorColleagues = await ctx.db.workGroup({\r\n              id: workGroups[0].id\r\n            }).colleagues()\r\n            for (const colleague of workGroupWorColleagues) {\r\n              const oldworker = await ctx.db.colleague({ id: colleague.id }).worker()\r\n              await ctx.db.createOldColleague({\r\n                from: { connect: { id: user.id } },\r\n                to: { connect: { id: oldworker.id } },\r\n                status: '3',\r\n                company: { connect: { id: companies[0].id } }\r\n              })\r\n\r\n              await ctx.db.createOldColleague({\r\n                from: { connect: { id: oldworker.id } },\r\n                to: { connect: { id: user.id } },\r\n                status: '3',\r\n                company: { connect: { id: companies[0].id } }\r\n              })\r\n              pubsub.publish(MYOLDCOLLEAGUES_CHANGED, { [MYOLDCOLLEAGUES_CHANGED]: { \"text\": oldworker.id } })\r\n            }\r\n          }\r\n          // 从所有的组中删除成员\r\n          const allWorkGroups = await ctx.db.workGroups({\r\n            where: {\r\n              AND: [\r\n                { company: { id: companies[0].id } },\r\n                {\r\n                  colleagues_some: {\r\n                    AND: [\r\n                      { worker: { id: user.id } },\r\n                    ]\r\n                  }\r\n                }\r\n              ]\r\n            }\r\n          })\r\n\r\n          for (const workGroup of allWorkGroups) {\r\n            const userColleagues = await ctx.db.colleagues({\r\n              where: {\r\n                AND: [\r\n                  { worker: { id: user.id } },\r\n                  { group: { id: workGroup.id } }\r\n                ]\r\n              }\r\n            })\r\n            await ctx.db.updateWorkGroup({\r\n              where: { id: workGroup.id },\r\n              data: { colleagues: { delete: { id: userColleagues[0].id } } }\r\n            })\r\n            const colleagues = await ctx.db.workGroup({ id: workGroup.id }).colleagues()\r\n            for (const colleague of colleagues) {\r\n              const publishWorker = await ctx.db.colleague({ id: colleague.id }).worker()\r\n              if (publishWorker.id !== user.id) {\r\n                pubsub.publish(WORKGROUP_CHANGED, { [WORKGROUP_CHANGED]: { \"text\": publishWorker.id } })\r\n              }\r\n            }\r\n          }\r\n        }\r\n        pubsub.publish(WORKS_CHANGED, { [WORKS_CHANGED]: { \"text\": user.id } })\r\n        return updateWork\r\n      }\r\n      throw new Error('未找到对应要更新的工作')\r\n    }\r\n    // 如果公司已经存在 \r\n    if (companies.length > 0) {\r\n      companyId = companies[0].id\r\n      createdWork = await ctx.db.createWork({\r\n        startTime,\r\n        endTime,\r\n        department,\r\n        post: { connect: { id: stationId } },\r\n        company: { connect: { id: companyId } },\r\n        worker: { connect: { uid: userId } }\r\n      })\r\n\r\n    } else {\r\n      // 如果公司不存在\r\n      createdWork = await ctx.db.createWork({\r\n        startTime,\r\n        endTime,\r\n        department,\r\n        post: { connect: { id: stationId } },\r\n        company: { create: { name: companyName } },\r\n        worker: { connect: { uid: userId } }\r\n      })\r\n      const company = await ctx.db.work({ id: createdWork.id }).company()\r\n      companyId = company.id\r\n    }\r\n\r\n    // 对于刚刚创建的工作，查找所有同时间工作的人\r\n    const works = await ctx.db.works({\r\n      where: {\r\n        AND: [\r\n          {\r\n            OR: [\r\n              { startTime_gte: (new Date(startTime)) },\r\n              { endTime_lte: (new Date(endTime)) },\r\n            ]\r\n          },\r\n          { company: { id: companyId.id } },\r\n        ]\r\n      }\r\n    })\r\n\r\n    for (const work of works) {\r\n      // 向所有的人推送通知，重新获取数据\r\n      const worker = await ctx.db.work({ id: work.id }).worker()\r\n      pubsub.publish(COLLEAGUES_ADDED, { [COLLEAGUES_ADDED]: { \"text\": worker.id } })\r\n    }\r\n\r\n    pubsub.publish(WORKS_CHANGED, { [WORKS_CHANGED]: { \"text\": user.id } })\r\n\r\n    return createdWork\r\n  },\r\n\r\n  addExamBasicInfo: async (parent, { province, section, score, specialScore, examineeCardNumber }, ctx) => {\r\n    // 权限验证\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    // -----------------------------------------------\r\n    // 输入数据验证\r\n    checkNum(province)\r\n    if (!~[\"none\", \"arts\", \"science\"].indexOf(section)) {\r\n      throw new Error('选择的文理科不正确')\r\n    }\r\n    checkScore(score)\r\n    checkScore(specialScore)\r\n    checkNum(examineeCardNumber)\r\n    const isExistcandidatenum = await ctx.db.collegeEntranceExam({\r\n      candidatenum: examineeCardNumber,\r\n    })\r\n    if (isExistcandidatenum) {\r\n      throw new Error('准考证号已被人注册，请检查准考证号是否正确，如存在被人盗用情况请联系客服。')\r\n    }\r\n    // -----------------------------------------------\r\n    return ctx.db.createCollegeEntranceExam({\r\n      province: { connect: { code: province } },\r\n      subject: section,\r\n      culscore: parseFloat(score),\r\n      proscore: parseFloat(specialScore),\r\n      candidatenum: examineeCardNumber,\r\n      times: 1,\r\n      student: { connect: { uid: userId } }\r\n    })\r\n  },\r\n\r\n  updateExamBasicInfo: async (parent, { province, section, score, specialScore, examineeCardNumber }, ctx) => {\r\n    // 权限验证\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    // -----------------------------------------------\r\n    // 输入数据验证\r\n    checkNum(province)\r\n    if (!~[\"none\", \"arts\", \"science\"].indexOf(section)) {\r\n      throw new Error('选择的文理科不正确')\r\n    }\r\n    checkScore(score)\r\n    checkScore(specialScore)\r\n    checkNum(examineeCardNumber)\r\n    // -----------------------------------------------\r\n    const oldExamBasicInfo = await ctx.db.collegeEntranceExams({\r\n      where: { student: { uid: userId } }\r\n    })\r\n    if (oldExamBasicInfo.length === 0) {\r\n      throw new Error('尚未创建高考信息')\r\n    }\r\n    if (oldExamBasicInfo[0].times >= 3) {\r\n      throw new Error('你修改的次数已达到上限')\r\n    }\r\n\r\n    return ctx.db.updateCollegeEntranceExam({\r\n      where: { id: oldExamBasicInfo[0].id },\r\n      data: {\r\n        province: { connect: { code: province } },\r\n        subject: section,\r\n        culscore: parseFloat(score),\r\n        proscore: parseFloat(specialScore),\r\n        candidatenum: examineeCardNumber,\r\n        times: oldExamBasicInfo[0].times + 1,\r\n      }\r\n    })\r\n  },\r\n\r\n  addRegStatus: async (parent, { education, universityId, majorId }, ctx) => {\r\n    // 权限验证\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    // -----------------------------------------------\r\n    // 判断是否为付费会员\r\n    const regStatusfeeSettings = await ctx.db.feeSettings({\r\n      where:{name:FEESETTINGTYPES.regstatus}\r\n    })\r\n    if(regStatusfeeSettings.length>0){\r\n      const fee = regStatusfeeSettings[0].fee\r\n      const year = new Date().getFullYear()\r\n      if(fee){\r\n        const trades = await ctx.db.user({uid:userId}).trades({\r\n          where:{\r\n              product:{\r\n                AND:[\r\n                  {kind:FEESETTINGTYPES.regstatus},\r\n                  {subject_contains:`${year}`}\r\n                ]\r\n              }\r\n          }\r\n        })\r\n        if(trades.length>0 ){\r\n           if(trades[0].status!==\"1\"){\r\n            throw new Error(\"报名前需要在设置-购买页面中购买本年度高考报名会员\")\r\n           }\r\n        }else{\r\n          throw new Error(\"报名前需要在设置-购买页面中购买本年度高考报名会员\")\r\n        }\r\n        \r\n      }\r\n    }\r\n    // -----------------------------------------------\r\n    // 输入数据验证\r\n    if (!~(['Undergraduate', 'JuniorCollege'].indexOf(education))) {\r\n      throw new Error('请选择本科或者专科')\r\n    }\r\n    checkId(universityId)\r\n    checkId(majorId)\r\n\r\n    // -----------------------------------------------\r\n    // 检查该用户是否已经注册\r\n    const userRegStatus = await ctx.db.user({\r\n      uid: userId\r\n    }).regStatus()\r\n    if (userRegStatus && userRegStatus.id) {\r\n      throw new Error('只能进行一次报名，如需重新报名，请先退出当前报名')\r\n    }\r\n\r\n\r\n    // 检查是否已经存在相关学校和专业的注册记录\r\n    const regStatuses = await ctx.db.regStatuses({\r\n      where: {\r\n        education,\r\n        university: { id: universityId },\r\n        major: { id: majorId }\r\n      }\r\n    })\r\n\r\n    // 如果存在\r\n    let userReg\r\n    if (regStatuses.length > 0) {\r\n      userReg = await ctx.db.updateRegStatus({\r\n        where: { id: regStatuses[0].id },\r\n        data: {\r\n          applicants: { connect: { uid: userId } }\r\n        }\r\n      })\r\n    } else {\r\n      userReg = await ctx.db.createRegStatus({\r\n        education,\r\n        university: { connect: { id: universityId } },\r\n        major: { connect: { id: majorId } },\r\n        applicants: { connect: { uid: userId } }\r\n      })\r\n    }\r\n\r\n    return userReg\r\n  },\r\n  cancelRegStatus: async (parent, { id }, ctx) => {\r\n    // 权限验证\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    // -----------------------------------------------\r\n    // 输入数据验证\r\n    checkId(id)\r\n\r\n    // -----------------------------------------------\r\n    return ctx.db.updateRegStatus({\r\n      where: { id },\r\n      data: { applicants: { disconnect: { uid: userId } } }\r\n    })\r\n  },\r\n\r\n  \r\n  addClassGroup: async (parent, { name, schoolEduId, studentId }, ctx) => {\r\n    // 权限验证\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    // -----------------------------------------------\r\n    // 输入数据验证\r\n    checkCnEnNum(name)\r\n    checkId(schoolEduId)\r\n    checkId(studentId)\r\n\r\n    // -----------------------------------------------\r\n\r\n    // 检查studentId是否已经有组,如果有组则把请求者加入得到已有的组中\r\n    const classGroups = await ctx.db.classGroups({\r\n      where: {\r\n        AND: [\r\n          { study: { id: schoolEduId } },\r\n          {\r\n            members_some: {\r\n              AND: [\r\n                { student: { id: studentId } },\r\n                { status: '1' }\r\n              ]\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    })\r\n\r\n    if (classGroups.length > 0) {\r\n      // 检查我是否已经在组里了，如果在了，不能重复添加\r\n      const studentClassMates = await ctx.db.classMates({\r\n        where: {\r\n          AND: [\r\n            { student: { id: user.id } },\r\n            { group: { id: classGroups[0].id } }\r\n          ]\r\n        }\r\n      })\r\n      if (studentClassMates.length > 0) {\r\n        throw new Error('你已经提起过申请，无法重复提请')\r\n      }\r\n      const updated = await ctx.db.updateClassGroup({\r\n        where: { id: classGroups[0].id },\r\n        data: { members: { create: { status: '0', student: { connect: { id: user.id } } } } }\r\n      })\r\n      const members = await ctx.db.classGroup({ id: updated.id }).members()\r\n      for (const member of members) {\r\n        const student = await ctx.db.classMate({ id: member.id }).student()\r\n        if (student.id !== user.id) {\r\n          pubsub.publish(CLASSGROUP_CHANGED, { [CLASSGROUP_CHANGED]: { \"text\": student.id } })\r\n        }\r\n      }\r\n\r\n      return updated\r\n    }\r\n    // 如果studentId没有组，则studentId新建一个组，并且把user加入到组中\r\n    // -----------------------------------------------\r\n    const created = await ctx.db.createClassGroup({\r\n      name,\r\n      study: { connect: { id: schoolEduId } },\r\n      members: {\r\n        create: [\r\n          { status: \"1\", student: { connect: { id: studentId } } },\r\n          { status: \"0\", student: { connect: { id: user.id } } },\r\n        ]\r\n      }\r\n    })\r\n    pubsub.publish(CLASSGROUP_CHANGED, { [CLASSGROUP_CHANGED]: { \"text\": studentId } })\r\n    return created\r\n\r\n  },\r\n  confirmClassGroup: async (parent, { schoolEduId, studentId }, ctx) => {\r\n\r\n    // -----------------------------------------------\r\n    // 输入数据验证\r\n    checkId(schoolEduId)\r\n    checkId(studentId)\r\n    // -----------------------------------------------\r\n    // 权限验证\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n\r\n\r\n    // 检查studentId是否已经有组,如果有组则把请求者加入得到已有的组中\r\n    const studentClassGroups = await ctx.db.classGroups({\r\n      where: {\r\n        AND: [\r\n          { study: { id: schoolEduId } },\r\n          {\r\n            members_some: {\r\n              AND: [\r\n                { student: { id: studentId } },\r\n                { status: '1' }\r\n              ]\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    })\r\n    const myClassGroups = await ctx.db.classGroups({\r\n      where: {\r\n        AND: [\r\n          { study: { id: schoolEduId } },\r\n          {\r\n            members_some: {\r\n              AND: [\r\n                { student: { id: user.id } },\r\n                { status: '1' }\r\n              ]\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    })\r\n    // 检查student是否是我的组成员\r\n    const InMyGroupstudents = await ctx.db.classGroup(\r\n      { id: myClassGroups[0].id }\r\n    ).members({ where: { student: { id: studentId } } })\r\n    if (InMyGroupstudents.length === 0) {\r\n      throw new Error('搞错了，你还不在这个组里')\r\n    }\r\n    const myClassGroupMembers = await ctx.db.classGroup(\r\n      { id: myClassGroups[0].id }\r\n    ).members()\r\n\r\n    // 如果student也有组,且和我不是一个组，则合并我和stuent的组。\r\n    if (studentClassGroups.length > 0 && studentClassGroups[0].id !== myClassGroups[0].id) {\r\n      const studentClassGroupsMembers = await ctx.db.classGroup({\r\n        id: studentClassGroups[0].id\r\n      }).members()\r\n      // 合并到成员多的组中\r\n      if (studentClassGroupsMembers.length >= myClassGroupMembers.length) {\r\n        for (const member of myClassGroupMembers) {\r\n          // 检查member是否已经在studentClassGroup中\r\n          const memeberStudent = await ctx.db.classMate({\r\n            id: member.id\r\n          }).student()\r\n          const inStudentClassGroupStudents = await ctx.db.classMates({\r\n            where: {\r\n              AND: [\r\n                { student: { id: memeberStudent.id } },\r\n                { group: { id: studentClassGroups[0].id } }\r\n              ]\r\n            }\r\n          })\r\n          if (inStudentClassGroupStudents.length > 0) {\r\n            if (member.status !== inStudentClassGroupStudents[0].status) {\r\n              await ctx.db.updateClassMate({\r\n                where: { id: inStudentClassGroupStudents[0].id },\r\n                data: {\r\n                  status: '1',\r\n                  group: { connect: { id: studentClassGroups[0].id } }\r\n                }\r\n              })\r\n            }\r\n            await ctx.db.deleteClassMate({\r\n              id: member.id\r\n            })\r\n          } else {\r\n            await ctx.db.updateClassMate({\r\n              where: { id: member.id },\r\n              data: { group: { connect: { id: studentClassGroups[0].id } } }\r\n            })\r\n          }\r\n\r\n        }\r\n        // 删除成员少的组\r\n        await ctx.db.deleteClassGroup({\r\n          id: myClassGroups[0].id\r\n        })\r\n\r\n        const members = await ctx.db.classGroup({ id: studentClassGroups[0].id }).members()\r\n        for (const member of members) {\r\n          const student = await ctx.db.classMate({ id: member.id }).student()\r\n          pubsub.publish(CLASSGROUP_CHANGED, { [CLASSGROUP_CHANGED]: { \"text\": student.id } })\r\n        }\r\n\r\n        return studentClassGroups[0]\r\n      }\r\n      for (const member of studentClassGroupsMembers) {\r\n        // 检查member是否已经在MyClassGroup中\r\n        const memeberStudent = await ctx.db.classMate({\r\n          id: member.id\r\n        }).student()\r\n        const inMyClassGroupStudents = await ctx.db.classMates({\r\n          where: {\r\n            AND: [\r\n              { student: { id: memeberStudent.id } },\r\n              { group: { id: myClassGroups[0].id } }\r\n            ]\r\n          }\r\n        })\r\n        if (inMyClassGroupStudents.length > 0) {\r\n          if (member.status !== inMyClassGroupStudents[0].status) {\r\n            await ctx.db.updateClassMate({\r\n              where: { id: inMyClassGroupStudents[0].id },\r\n              data: {\r\n                status: '1',\r\n                group: { connect: { id: myClassGroups[0].id } }\r\n              }\r\n            })\r\n          }\r\n          await ctx.db.deleteClassMate({\r\n            id: member.id\r\n          })\r\n        } else {\r\n          await ctx.db.updateClassMate({\r\n            where: { id: member.id },\r\n            data: { group: { connect: { id: myClassGroups[0].id } } }\r\n          })\r\n        }\r\n      }\r\n\r\n      // 删除成员少的组\r\n      await ctx.db.deleteClassGroup({\r\n        id: studentClassGroups[0].id\r\n      })\r\n\r\n      const members = await ctx.db.classGroup({ id: myClassGroups[0].id }).members()\r\n      for (const member of members) {\r\n        const student = await ctx.db.classMate({ id: member.id }).student()\r\n        pubsub.publish(CLASSGROUP_CHANGED, { [CLASSGROUP_CHANGED]: { \"text\": student.id } })\r\n      }\r\n      return myClassGroups[0]\r\n    }\r\n    // 如果student还没有组，则直接合并到我的组中，并更新状态\r\n    const studentClassMates = await ctx.db.classMates({\r\n      where: {\r\n        AND: [\r\n          { student: { id: studentId } },\r\n          { group: { id: myClassGroups[0].id } }\r\n        ]\r\n      }\r\n    })\r\n    await ctx.db.updateClassMate({\r\n      where: { id: studentClassMates[0].id },\r\n      data: { status: '1' }\r\n    })\r\n    const members = await ctx.db.classGroup({ id: myClassGroups[0].id }).members()\r\n    for (const member of members) {\r\n      const student = await ctx.db.classMate({ id: member.id }).student()\r\n      pubsub.publish(CLASSGROUP_CHANGED, { [CLASSGROUP_CHANGED]: { \"text\": student.id } })\r\n    }\r\n    return myClassGroups[0]\r\n  },\r\n\r\n  addWorkGroup: async (parent, { companyId, workerId }, ctx) => {\r\n    // -----------------------------------------------\r\n    // 输入数据验证\r\n    checkId(companyId)\r\n    checkId(workerId)\r\n    // -----------------------------------------------\r\n    // 权限验证\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n\r\n    // 检查wokerId是否已经有组,如果有组则把请求者加入得到已有的组中\r\n    const workGroups = await ctx.db.workGroups({\r\n      where: {\r\n        AND: [\r\n          { company: { id: companyId } },\r\n          {\r\n            colleagues_some: {\r\n              AND: [\r\n                { worker: { id: workerId } },\r\n                { status: '1' }\r\n              ]\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    })\r\n\r\n    if (workGroups.length > 0) {\r\n      // 检查我是否已经在组里了，如果在了，不能重复添加\r\n      const meColleagues = await ctx.db.colleagues({\r\n        where: {\r\n          AND: [\r\n            { worker: { id: user.id } },\r\n            { group: { id: workGroups[0].id } }\r\n          ]\r\n        }\r\n      })\r\n      if (meColleagues.length > 0) {\r\n        throw new Error('你已经提起过申请，无法重复提请')\r\n      }\r\n      // 如果我没有在组里，则更新group,将我添加进去\r\n      const updated = await ctx.db.updateWorkGroup({\r\n        where: { id: workGroups[0].id },\r\n        data: { colleagues: { create: { status: '0', worker: { connect: { id: user.id } } } } }\r\n      })\r\n      const colleagues = await ctx.db.workGroup({ id: updated.id }).colleagues()\r\n      for (const colleague of colleagues) {\r\n        const worker = await ctx.db.colleague({ id: colleague.id }).worker()\r\n        if (worker.id !== user.id) {\r\n          pubsub.publish(WORKGROUP_CHANGED, { [WORKGROUP_CHANGED]: { \"text\": worker.id } })\r\n        }\r\n      }\r\n\r\n      return updated\r\n    }\r\n    // 如果workId没有组，则workId新建一个组，并且把user加入到组中\r\n    // -----------------------------------------------\r\n    const created = await ctx.db.createWorkGroup({\r\n      company: { connect: { id: companyId } },\r\n      colleagues: {\r\n        create: [\r\n          { status: \"1\", worker: { connect: { id: workerId } } },\r\n          { status: \"0\", worker: { connect: { id: user.id } } },\r\n        ]\r\n      }\r\n    })\r\n    pubsub.publish(WORKGROUP_CHANGED, { [WORKGROUP_CHANGED]: { \"text\": workerId } })\r\n    return created\r\n  },\r\n  confirmWorkGroup: async (parent, { companyId, workerId }, ctx) => {\r\n        // -----------------------------------------------\r\n    // 输入数据验证\r\n    checkId(companyId)\r\n    checkId(workerId)\r\n    // -----------------------------------------------\r\n    // 权限验证\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    // -----------------------------------------------\r\n    // 输入数据验证\r\n\r\n    // 检查workerId是否已经有组,如果有组则把请求者加入得到已有的组中\r\n    const workerGroups = await ctx.db.workGroups({\r\n      where: {\r\n        AND: [\r\n          { company: { id: companyId } },\r\n          {\r\n            colleagues_some: {\r\n              AND: [\r\n                { worker: { id: workerId } },\r\n                { status: '1' }\r\n              ]\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    })\r\n    const myWorkGroups = await ctx.db.workGroups({\r\n      where: {\r\n        AND: [\r\n          { company: { id: companyId } },\r\n          {\r\n            colleagues_some: {\r\n              AND: [\r\n                { worker: { id: user.id } },\r\n                { status: '1' }\r\n              ]\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    })\r\n    // 检查worker是否是我的组成员\r\n    const InMyGroupWorkers = await ctx.db.workGroup(\r\n      { id: myWorkGroups[0].id }\r\n    ).colleagues({ where: { worker: { id: workerId } } })\r\n    if (InMyGroupWorkers.length === 0) {\r\n      throw new Error('搞错了，你还不在这个组里')\r\n    }\r\n    const myWorkGroupColleagues = await ctx.db.workGroup(\r\n      { id: myWorkGroups[0].id }\r\n    ).colleagues()\r\n\r\n    // 如果worker也有组,且和我不是一个组，则合并我和stuent的组。\r\n    if (workerGroups.length > 0 && workerGroups[0].id !== myWorkGroups[0].id) {\r\n      const workerGroupsColleagues = await ctx.db.workGroup({\r\n        id: workerGroups[0].id\r\n      }).colleagues()\r\n      // 合并到成员多的组中\r\n      if (workerGroupsColleagues.length >= myWorkGroupColleagues.length) {\r\n        for (const colleague of myWorkGroupColleagues) {\r\n          // 检查colleague是否已经在wokerGroup中\r\n          const colleagueWorker = await ctx.db.colleague({\r\n            id: colleague.id\r\n          }).worker()\r\n          const inWorkerGroupColleagues = await ctx.db.colleagues({\r\n            where: {\r\n              AND: [\r\n                { worker: { id: colleagueWorker.id } },\r\n                { group: { id: workerGroups[0].id } }\r\n              ]\r\n            }\r\n          })\r\n          if (inWorkerGroupColleagues.length > 0) {\r\n            if (colleague.status !== inWorkerGroupColleagues[0].status) {\r\n              await ctx.db.updateColleague({\r\n                where: { id: inWorkerGroupColleagues[0].id },\r\n                data: {\r\n                  status: '1',\r\n                  group: { connect: { id: workerGroups[0].id } }\r\n                }\r\n              })\r\n            }\r\n            await ctx.db.deleteColleague({\r\n              id: colleague.id\r\n            })\r\n          } else {\r\n            await ctx.db.updateColleague({\r\n              where: { id: colleague.id },\r\n              data: { group: { connect: { id: workerGroups[0].id } } }\r\n            })\r\n          }\r\n\r\n        }\r\n        // 删除成员少的组\r\n        await ctx.db.deleteWorkGroup({\r\n          id: myWorkGroups[0].id\r\n        })\r\n\r\n        const colleagues = await ctx.db.workGroup({ id: workerGroups[0].id }).colleagues()\r\n        for (const colleague of colleagues) {\r\n          const worker = await ctx.db.colleague({ id: colleague.id }).worker()\r\n          pubsub.publish(WORKGROUP_CHANGED, { [WORKGROUP_CHANGED]: { \"text\": worker.id } })\r\n        }\r\n\r\n        return workerGroups[0]\r\n      }\r\n      for (const colleague of workerGroupsColleagues) {\r\n        // 检查colleague是否已经在MyWorkGroup中\r\n        const colleagueWorker = await ctx.db.colleague({\r\n          id: colleague.id\r\n        }).worker()\r\n        const inMyWorkGroupColleagues = await ctx.db.colleagues({\r\n          where: {\r\n            AND: [\r\n              { worker: { id: colleagueWorker.id } },\r\n              { group: { id: myWorkGroups[0].id } }\r\n            ]\r\n          }\r\n        })\r\n        if (inMyWorkGroupColleagues.length > 0) {\r\n          if (colleague.status !== inMyWorkGroupColleagues[0].status) {\r\n            await ctx.db.updateColleague({\r\n              where: { id: inMyWorkGroupColleagues[0].id },\r\n              data: {\r\n                status: '1',\r\n                group: { connect: { id: myWorkGroups[0].id } }\r\n              }\r\n            })\r\n          }\r\n          await ctx.db.deleteColleague({\r\n            id: colleague.id\r\n          })\r\n        } else {\r\n          await ctx.db.updateColleague({\r\n            where: { id: colleague.id },\r\n            data: { group: { connect: { id: myWorkGroups[0].id } } }\r\n          })\r\n        }\r\n      }\r\n\r\n      // 删除成员少的组\r\n      await ctx.db.deleteWorkGroup({\r\n        id: workerGroups[0].id\r\n      })\r\n\r\n      const colleagues = await ctx.db.workGroup({ id: myWorkGroups[0].id }).colleagues()\r\n      for (const colleague of colleagues) {\r\n        const worker = await ctx.db.colleague({ id: colleague.id }).worker()\r\n        pubsub.publish(WORKGROUP_CHANGED, { [WORKGROUP_CHANGED]: { \"text\": worker.id } })\r\n      }\r\n      return myWorkGroups[0]\r\n    }\r\n    // 如果worker还没有组，则直接合并到我的组中，并更新状态\r\n    const workerColleauges = await ctx.db.colleagues({\r\n      where: {\r\n        AND: [\r\n          { worker: { id: workerId } },\r\n          { group: { id: myWorkGroups[0].id } }\r\n        ]\r\n      }\r\n    })\r\n    await ctx.db.updateColleague({\r\n      where: { id: workerColleauges[0].id },\r\n      data: { status: '1' }\r\n    })\r\n    const colleagues = await ctx.db.workGroup({ id: myWorkGroups[0].id }).colleagues()\r\n    for (const colleague of colleagues) {\r\n      const worker = await ctx.db.colleague({ id: colleague.id }).worker()\r\n      pubsub.publish(WORKGROUP_CHANGED, { [WORKGROUP_CHANGED]: { \"text\": worker.id } })\r\n    }\r\n    return myWorkGroups[0]\r\n  },\r\n\r\n  addOldColleague: async (parent, { companyId, workerId }, ctx) => {\r\n        // -----------------------------------------------\r\n    // 输入数据验证\r\n    checkId(companyId)\r\n    checkId(workerId)\r\n    // -----------------------------------------------\r\n    // 权限验证\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    // -----------------------------------------------\r\n    // 输入数据验证\r\n    checkId(companyId)\r\n    checkId(workerId)\r\n\r\n    const myOldColleague = await ctx.db.createOldColleague({\r\n      from: { connect: { id: user.id } },\r\n      to: { connect: { id: workerId } },\r\n      status: '1',\r\n      company: { connect: { id: companyId } }\r\n    })\r\n\r\n    await ctx.db.createOldColleague({\r\n      from: { connect: { id: workerId } },\r\n      to: { connect: { id: user.id } },\r\n      status: '2',\r\n      company: { connect: { id: companyId } }\r\n    })\r\n    pubsub.publish(MYOLDCOLLEAGUES_CHANGED, { [MYOLDCOLLEAGUES_CHANGED]: { \"text\": workerId } })\r\n\r\n    return myOldColleague\r\n  },\r\n\r\n  confirmOldColleague: async (parent, { companyId, workerId }, ctx) => {\r\n        // -----------------------------------------------\r\n    // 输入数据验证\r\n    checkId(companyId)\r\n    checkId(workerId)\r\n    // -----------------------------------------------\r\n    // 权限验证\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n\r\n    const myOldColleagues = await ctx.db.oldColleagues({\r\n      where: {\r\n        AND: [\r\n          { from: { id: user.id } },\r\n          { to: { id: workerId } },\r\n          { company: { id: companyId } },\r\n        ]\r\n      }\r\n    })\r\n\r\n    const oldColleagueTomes = await ctx.db.oldColleagues({\r\n      where: {\r\n        AND: [\r\n          { from: { id: workerId } },\r\n          { to: { id: user.id } },\r\n          { company: { id: companyId } },\r\n        ]\r\n      }\r\n    })\r\n\r\n    if (oldColleagueTomes.length > 0) {\r\n      await ctx.db.updateOldColleague({\r\n        where: { id: oldColleagueTomes[0].id },\r\n        data: { status: '3' },\r\n      })\r\n      pubsub.publish(MYOLDCOLLEAGUES_CHANGED, { [MYOLDCOLLEAGUES_CHANGED]: { \"text\": workerId } })\r\n    }\r\n\r\n    if (myOldColleagues.length > 0) {\r\n      const updatemyOldColleague = await ctx.db.updateOldColleague({\r\n        where: { id: myOldColleagues[0].id },\r\n        data: { status: '3' },\r\n      })\r\n      return updatemyOldColleague\r\n    }\r\n\r\n    throw new Error('无法更改同事信息')\r\n  },\r\n  postPhoto: async (parent, { uri }, ctx) => {\r\n            // -----------------------------------------------\r\n    // 输入数据验证\r\n    // uri并不用于数据库\r\n    // -----------------------------------------------\r\n    // 添加头像\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const ext = getFileExt(uri)\r\n    const name = getFileName(ext)\r\n    const typesMap = { 'jpg': 'jpeg', 'png': 'png', 'gif': 'gif', 'jpeg': 'jpeg', 'bmp': 'bmp' }\r\n    const options = { expires: 1800, method: 'PUT', 'Content-Type': `image/${typesMap[ext]}` }\r\n    const url = ossClient.signatureUrl(`avatars/${name}`, options);\r\n    const avatar = await ctx.db.user({ uid: userId }).avatar()\r\n    let newPhoto\r\n    if (avatar && avatar.id) {\r\n      newPhoto = await ctx.db.updatePhoto({\r\n        where: { id: avatar.id },\r\n        data: {\r\n          name,\r\n          url: `https://gewu-avatar.oss-cn-hangzhou.aliyuncs.com/avatars/${name}`,\r\n        }\r\n      })\r\n    } else {\r\n      newPhoto = await ctx.db.createPhoto({\r\n        name,\r\n        url: `https://gewu-avatar.oss-cn-hangzhou.aliyuncs.com/avatars/${name}`,\r\n        user: { connect: { uid: userId } }\r\n      })\r\n    }\r\n    return { id: newPhoto.id, name, url }\r\n  },\r\n\r\n  sendMessage: async (parent, { toId, text = \"\", image = \"\" }, ctx) => {\r\n                // -----------------------------------------------\r\n    // 输入数据验证\r\n    checkId(toId)\r\n    // -----------------------------------------------\r\n\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const userAvatar = await ctx.db.user({ uid: userId }).avatar()\r\n\r\n    if (!text && !image) {\r\n      throw new Error('没有发送信息')\r\n    }\r\n\r\n    const toUser = await ctx.db.user({ id: toId })\r\n    const toUserAvatar = await ctx.db.user({ id: toId }).avatar()\r\n    // 更新好友，可以添加评论\r\n    await ctx.db.updateUser({\r\n      where: { id: toId },\r\n      data: { friends: { connect: { id: user.id } } }\r\n    })\r\n\r\n    if (image) {\r\n      const ext = getFileExt(image)\r\n      const name = getFileName(ext)\r\n      const typesMap = { 'jpg': 'jpeg', 'png': 'png', 'gif': 'gif', 'jpeg': 'jpeg', 'bmp': 'bmp' }\r\n      const options = { expires: 1800, method: 'PUT', 'Content-Type': `image/${typesMap[ext]}` }\r\n      const writeUrl = ossClient.signatureUrl(`images/${name}`, options);\r\n      const readUrl = `https://gewu-avatar.oss-cn-hangzhou.aliyuncs.com/images/${name}`\r\n\r\n      const message = await ctx.db.createMessage({\r\n        from: { connect: { id: user.id } },\r\n        to: { connect: { id: toId } },\r\n        text,\r\n        image: {\r\n          create: {\r\n            name,\r\n            url: readUrl\r\n          }\r\n        }\r\n      })\r\n\r\n\r\n      const messageImage = await ctx.db.message({ id: message.id }).image()\r\n      // imageurl返回给上传图片的人，用于上传图片，由于这里要修改image，所以这里使用手动解析。\r\n      const returnMessage = {\r\n        id: message.id,\r\n        to: {\r\n          id: toUser.id,\r\n          name: toUser.name,\r\n          avatar: toUserAvatar,\r\n        },\r\n        from: {\r\n          id: user.id,\r\n          name: user.name,\r\n          avatar: userAvatar\r\n        },\r\n        text,\r\n        image: {\r\n          ...messageImage,\r\n          url: writeUrl\r\n        },\r\n        createdAt: message.createdAt\r\n      }\r\n      // 返回给订阅者，由于subscription无法解析Message，因此这里手动解析。\r\n      const pubMessage = {\r\n        __typename: \"Message\",\r\n        id: message.id,\r\n        to: {\r\n          __typename: \"User\",\r\n          id: toUser.id,\r\n          name: toUser.name,\r\n          avatar: toUserAvatar,\r\n        },\r\n        from: {\r\n          __typename: \"User\",\r\n          id: user.id,\r\n          name: user.name,\r\n          avatar: userAvatar\r\n        },\r\n        text,\r\n        image: {\r\n          __typename: \"Photo\",\r\n          id: messageImage.id,\r\n          name: messageImage.name,\r\n          url: messageImage.url\r\n        },\r\n        createdAt: message.createdAt\r\n      }\r\n\r\n      pubsub.publish(MESSAGE_ADDED_TOPIC, { [MESSAGE_ADDED_TOPIC]: pubMessage })\r\n      return returnMessage\r\n    }\r\n    // 如果没有上传图片，则直接创建\r\n    const message = await ctx.db.createMessage({\r\n      from: { connect: { id: user.id } },\r\n      to: { connect: { id: toId } },\r\n      text,\r\n    })\r\n    // 手动解析订阅信息\r\n    const pubMessage = {\r\n      __typename: \"Messgae\",\r\n      id: message.id,\r\n      to: {\r\n        __typename: \"User\",\r\n        id: toUser.id,\r\n        name: toUser.name,\r\n        avatar: toUserAvatar,\r\n      },\r\n      from: {\r\n        __typename: \"User\",\r\n        id: user.id,\r\n        name: user.name,\r\n        avatar: userAvatar\r\n      },\r\n      text,\r\n      image: null,\r\n      createdAt: message.createdAt\r\n    }\r\n\r\n    const returnMessage = {\r\n      id: message.id,\r\n      to: {\r\n        id: toUser.id,\r\n        name: toUser.name,\r\n        avatar: toUserAvatar,\r\n      },\r\n      from: {\r\n        id: user.id,\r\n        name: user.name,\r\n        avatar: userAvatar\r\n      },\r\n      text,\r\n      image: null,\r\n      createdAt: message.createdAt\r\n    }\r\n    pubsub.publish(MESSAGE_ADDED_TOPIC, { [MESSAGE_ADDED_TOPIC]: pubMessage })\r\n    return returnMessage\r\n  },\r\n\r\n  sendGroupMessage: async (parent, { type, toId, text = \"\", image = \"\" }, ctx) => {\r\n\r\n    // 输入数据检查\r\n    // ----------------------\r\n    checkId(toId)\r\n    if(!validator.isAlpha(type)){\r\n      throw new Error('组类型错误')\r\n    }\r\n\r\n    // ----------------------\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n\r\n    // ----------------------\r\n    checkId(toId)\r\n    const types = [\"Family\", \"ClassMate\", \"Colleague\", \"FellowTownsman\", \"RegStatus\"]\r\n    if (!~types.indexOf(type)) {\r\n      throw new Error('没有该组类型')\r\n    }\r\n    // ----------------------\r\n\r\n\r\n    const userAvatar = await ctx.db.user({ uid: userId }).avatar()\r\n\r\n    if (!text && !image) {\r\n      throw new Error('没有发送信息')\r\n    }\r\n    let toGroup\r\n    if (type === \"Family\") {\r\n      toGroup = await ctx.db.familyGroup({ id: toId })\r\n    } else if (type === \"ClassMate\") {\r\n      toGroup = await ctx.db.classGroup({ id: toId })\r\n    } else if (type === \"Colleague\") {\r\n      toGroup = await ctx.db.workGroup({ id: toId })\r\n    } else if (type === \"FellowTownsman\") {\r\n      toGroup = await ctx.db.locationGroup({ id: toId })\r\n      const FollowTownsmanUsers = await ctx.db.locationGroup({ id: toId }).users()\r\n      if(FollowTownsmanUsers.filter(u=>u.id===user.id).length===0){\r\n        throw new Error('你不在该组，无法发送消息')\r\n      }\r\n    } else if (type === \"RegStatus\") {\r\n      toGroup = await ctx.db.regStatus({ id: toId })\r\n      const regstatusUsers = await ctx.db.regStatus({ id: toId }).applicants()\r\n      if(regstatusUsers.filter(u=>u.id===user.id).length===0){\r\n        throw new Error('你不在该组，无法发送消息')\r\n      }\r\n    }\r\n    if (!toGroup) {\r\n      throw new Error('没有找到对应的组')\r\n    }\r\n\r\n    if (image) {\r\n      const ext = getFileExt(image)\r\n      const name = getFileName(ext)\r\n      const typesMap = { 'jpg': 'jpeg', 'png': 'png', 'gif': 'gif', 'jpeg': 'jpeg', 'bmp': 'bmp' }\r\n      const options = { expires: 1800, method: 'PUT', 'Content-Type': `image/${typesMap[ext]}` }\r\n      const writeUrl = ossClient.signatureUrl(`images/${name}`, options);\r\n      const readUrl = `https://gewu-avatar.oss-cn-hangzhou.aliyuncs.com/images/${name}`\r\n\r\n      const message = await ctx.db.createGroupMessage({\r\n        from: { connect: { id: user.id } },\r\n        type,\r\n        to: toId,\r\n        text,\r\n        image: {\r\n          create: {\r\n            name,\r\n            url: readUrl\r\n          }\r\n        }\r\n      })\r\n\r\n\r\n      const messageImage = await ctx.db.groupMessage({ id: message.id }).image()\r\n      // imageurl返回给上传图片的人，用于上传图片，由于这里要修改image，所以这里使用手动解析。\r\n      const returnMessage = {\r\n        id: message.id,\r\n        type,\r\n        to: toId,\r\n        from: {\r\n          id: user.id,\r\n          name: user.name,\r\n          avatar: userAvatar\r\n        },\r\n        text,\r\n        image: {\r\n          ...messageImage,\r\n          url: writeUrl\r\n        },\r\n        createdAt: message.createdAt\r\n      }\r\n      // 返回给订阅者，由于subscription无法解析Message，因此这里手动解析。\r\n      const pubMessage = {\r\n        __typename: \"GroupMessage\",\r\n        id: message.id,\r\n        type,\r\n        to: toId,\r\n        from: {\r\n          __typename: \"User\",\r\n          id: user.id,\r\n          name: user.name,\r\n          avatar: userAvatar\r\n        },\r\n        text,\r\n        image: {\r\n          __typename: \"Photo\",\r\n          id: messageImage.id,\r\n          name: messageImage.name,\r\n          url: messageImage.url\r\n        },\r\n        createdAt: message.createdAt\r\n      }\r\n\r\n      pubsub.publish(GMESSAGE_ADDED_TOPIC, { [GMESSAGE_ADDED_TOPIC]: pubMessage })\r\n\r\n      return returnMessage\r\n    }\r\n    // 如果没有上传图片，则直接创建\r\n    const message = await ctx.db.createGroupMessage({\r\n      from: { connect: { id: user.id } },\r\n      to: toId,\r\n      type,\r\n      text,\r\n    })\r\n    // 手动解析订阅信息\r\n    const pubMessage = {\r\n      __typename: \"GroupMessgae\",\r\n      id: message.id,\r\n      type,\r\n      to: toId,\r\n      from: {\r\n        __typename: \"User\",\r\n        id: user.id,\r\n        name: user.name,\r\n        avatar: userAvatar\r\n      },\r\n      text,\r\n      image: null,\r\n      createdAt: message.createdAt\r\n    }\r\n\r\n    const returnMessage = {\r\n      id: message.id,\r\n      type,\r\n      to: toId,\r\n      from: {\r\n        id: user.id,\r\n        name: user.name,\r\n        avatar: userAvatar\r\n      },\r\n      text,\r\n      image: null,\r\n      createdAt: message.createdAt\r\n    }\r\n\r\n    pubsub.publish(GMESSAGE_ADDED_TOPIC, { [GMESSAGE_ADDED_TOPIC]: pubMessage })\r\n    pubsub.publish(MESSAGE_ADDED_TOPIC, { [MESSAGE_ADDED_TOPIC]: pubMessage })\r\n    return returnMessage\r\n  },\r\n\r\n  addAdvertisement: async (parent, { url, startTime }, ctx) => {\r\n\r\n    // -------------------------\r\n    if(!validator.isURL(url)){\r\n      throw new Error('url格式错误')\r\n    }\r\n\r\n    // -------------------------\r\n    \r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n\r\n    const sTime = new Date(startTime)\r\n\r\n    const advertisements = await ctx.db.advertisements({\r\n      where: {\r\n        startTime:sTime,\r\n      }\r\n    })\r\n\r\n    let newAdvertisement\r\n    if (advertisements.length > 0) {\r\n      if (!advertisements[0].image1) {\r\n        newAdvertisement = await ctx.db.updateAdvertisement({\r\n          where: { id: advertisements[0].id },\r\n          data: { image1: url }\r\n        })\r\n      } else if (!advertisements[0].image2) {\r\n        newAdvertisement = await ctx.db.updateAdvertisement({\r\n          where: { id: advertisements[0].id },\r\n          data: { image2: url }\r\n        })\r\n      } else if (!advertisements[0].image3) {\r\n        newAdvertisement = await ctx.db.updateAdvertisement({\r\n          where: { id: advertisements[0].id },\r\n          data: { image3: url }\r\n        })\r\n      } else if (!advertisements[0].image4) {\r\n        newAdvertisement = await ctx.db.updateAdvertisement({\r\n          where: { id: advertisements[0].id },\r\n          data: { image4: url }\r\n        })\r\n      } else if (!advertisements[0].image5) {\r\n        newAdvertisement = await ctx.db.updateAdvertisement({\r\n          where: { id: advertisements[0].id },\r\n          data: { image5: url }\r\n        })\r\n      } else {\r\n        throw new Error('没有剩余广告位')\r\n      }\r\n    }else{\r\n      newAdvertisement = await ctx.db.createAdvertisement({\r\n        image1:url,\r\n        startTime:sTime,\r\n        endTime:new Date(sTime.getTime() + 30*60*1000)\r\n      })\r\n    }\r\n\r\n    return newAdvertisement\r\n  },\r\n\r\n  newTrade:async (parent, { productId, number,amount }, ctx) => {\r\n\r\n    // -------------------------\r\n    if(!validator.isFloat(`${amount}`)){\r\n      throw new Error('amount格式错误')\r\n    }\r\n    if(!validator.isInt((`${number}`))){\r\n      throw new Error('amount格式错误')\r\n    }\r\n    checkId(productId)\r\n    // -------------------------\r\n    \r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n\r\n    const product = await ctx.db.product({id:productId})\r\n    const totalAmount = product.price * number\r\n    if(totalAmount!==amount){\r\n      throw new Error(\"金额计算错误\")\r\n    }\r\n\r\n    return ctx.db.createTrade({\r\n      product: { connect: { id: productId } },\r\n      user: { connect: { uid: userId } },\r\n      number,\r\n      amount,\r\n      status:'0'\r\n    })\r\n  },\r\n\r\n  addOrUpdateLoveSetting:async (parent, { myHeight,myWeight,otherHeightMin,otherHeightMax,\r\n    otherWeightMin,otherWeightMax,otherAgeMin,otherAgeMax,dateTime,datePlace\r\n   }, ctx) => {\r\n\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const userGender = await ctx.db.user({ uid: userId }).gender()\r\n\r\n    // -------------------------\r\n    if(!validator.isInt(`${myHeight}`)){\r\n      throw new Error('身高格式错误')\r\n    }\r\n    if(!validator.isInt((`${myWeight}`))){\r\n      throw new Error('体重格式错误')\r\n    }\r\n    if(!validator.isInt((`${otherHeightMin}`))){\r\n      throw new Error('对方最低身高格式错误')\r\n    }\r\n    if(!validator.isInt((`${otherHeightMax}`))){\r\n      throw new Error('对方最高身高格式错误')\r\n    }\r\n    if(!validator.isInt((`${otherWeightMin}`))){\r\n      throw new Error('对方最小体重格式错误')\r\n    }\r\n    if(!validator.isInt((`${otherWeightMax}`))){\r\n      throw new Error('对方最大体重格式错误')\r\n    }\r\n    if(!validator.isInt((`${otherAgeMin}`))){\r\n      throw new Error('对方最小年龄格式错误')\r\n    }\r\n    if(!validator.isInt((`${otherAgeMax}`))){\r\n      throw new Error('对方最大年龄格式错误')\r\n    }\r\n    if(userGender==='female'){\r\n      if (!/^[A-Za-z0-9\\u4e00-\\u9fa5]+/.test(dateTime)){\r\n        throw new Error('见面时间格式错误')\r\n      }\r\n      if (!/^[A-Za-z0-9\\u4e00-\\u9fa5]+/.test(datePlace)){\r\n        throw new Error('见面地点格式错误')\r\n      }\r\n    }\r\n    // -------------------------\r\n    const loveSettings = await ctx.db.loveSettings({\r\n      where:{user:{uid:userId}}\r\n    })\r\n    let loveSetting\r\n    if(loveSettings.length>0){\r\n      loveSetting =  await ctx.db.updateLoveSetting({\r\n        where:{id:loveSettings[0].id},\r\n        data:{\r\n          myHeight,\r\n          myWeight,\r\n          otherHeightMin,\r\n          otherHeightMax,\r\n          otherWeightMin,\r\n          otherWeightMax,\r\n          otherAgeMax,\r\n          otherAgeMin,\r\n          dateTime,\r\n          datePlace,\r\n        }\r\n      })\r\n    }else{\r\n      loveSetting =  await ctx.db.createLoveSetting({\r\n          myHeight,\r\n          myWeight,\r\n          otherHeightMin,\r\n          otherHeightMax,\r\n          otherWeightMin,\r\n          otherWeightMax,\r\n          otherAgeMax,\r\n          otherAgeMin,\r\n          dateTime,\r\n          datePlace,\r\n          user:{connect:{uid:userId}}\r\n      })\r\n    }\r\n    return loveSetting\r\n  },\r\n  addOrUpdateLoveSignUp:async (parent, args, ctx) => {\r\n\r\n    // -------------------------\r\n   \r\n    \r\n    \r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    // -------------------------\r\n    const residence = await ctx.db.user({ uid: userId }).residence()\r\n    let city\r\n    if(residence){\r\n      city = await ctx.db.user({ uid: userId }).residence().city()\r\n    }else{\r\n      throw new Error('尚未填写居住地')\r\n    }\r\n\r\n\r\n    const now = getTimeByTimeZone(8)\r\n    const week = now.getDay()\r\n    if (week === 0 || week === 5 || week === 6) {\r\n        throw new Error('本期报名已截止,报名时间为周一到周四')\r\n    }\r\n  \r\n    \r\n    const phase = parseInt(`${(now.getTime() - DateStartTime.getTime()) / 1000 / 60 / 60 / 24 / 7}`,10) + 1\r\n    \r\n    const loveSignUps = await ctx.db.loveSignUps({\r\n      where:{person:{uid:userId}}\r\n    })\r\n    \r\n    let loveSignUp\r\n    if(loveSignUps.length>0){\r\n      loveSignUp = await ctx.db.updateLoveSignUp({\r\n        where:{id:loveSignUps[0].id},\r\n        data:{\r\n          period:`${phase}`,\r\n          city:{connect:{id:city.id}},\r\n          person:{connect:{id:user.id}}\r\n        }\r\n      })\r\n    }else{\r\n      loveSignUp = await ctx.db.createLoveSignUp({\r\n        period:`${phase}`,\r\n        city:{connect:{id:city.id}},\r\n        person:{connect:{id:user.id}}\r\n      })\r\n    }\r\n    return loveSignUp\r\n  },\r\n  addSkill:async (parent, { name }, ctx) => {\r\n\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n\r\n    // -------------------------\r\n    if (!/^[A-Za-z0-9\\u4e00-\\u9fa5]+/.test(name)){\r\n      throw new Error('技能名称错误')\r\n    }\r\n    // -------------------------\r\n\r\n    const skills = await ctx.db.skills({\r\n      where:{name}\r\n    })\r\n\r\n    let skill\r\n\r\n    if(skills.length>0){\r\n      skill = await ctx.db.updateSkill({\r\n        where:{id:skills[0].id},\r\n        data:{persons:{connect:{uid:userId}}}\r\n      })\r\n    }else{\r\n      skill = await ctx.db.createSkill({\r\n        name,\r\n        persons:{connect:{uid:userId}}\r\n      })\r\n    }\r\n    \r\n    return skill\r\n  },\r\n  createProject:async (parent, { name, content }, ctx) => {\r\n\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n\r\n    const city = await ctx.db.user({ uid: userId }).residence().city()\r\n\r\n    // -------------------------\r\n    if (!/^[_,.，。！!;；：:A-Za-z0-9\\u4e00-\\u9fa5]+/.test(name)){\r\n      throw new Error('项目名称格式错误')\r\n    }\r\n    if (!/^[_,.，。！!;；：:A-Za-z0-9\\u4e00-\\u9fa5]+/.test(content)){\r\n      throw new Error('项目内容格式错误')\r\n    }\r\n    // -------------------------\r\n    return ctx.db.createProject({\r\n      name,\r\n      content,\r\n      place:{connect:{id:city.id}},\r\n      starter:{connect:{id:user.id}}\r\n    })\r\n\r\n  },\r\n  addPartnerCondition:async (parent, { skillName, number,place,projectId }, ctx) => {\r\n\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n\r\n\r\n    // -------------------------\r\n     if (!/^[A-Za-z0-9\\u4e00-\\u9fa5]+/.test(skillName)){\r\n      throw new Error('技能名称错误')\r\n    }\r\n    if(!validator.isInt(`${number}`)){\r\n      throw new Error('数字格式错误')\r\n    }\r\n    if(!~[\"0\",\"1\",\"2\"].indexOf(place)){\r\n      throw new Error('未选择地址')\r\n    }\r\n    checkId(projectId)\r\n    // -------------------------\r\n    let persons\r\n    if(place===\"0\"){\r\n      const city = await ctx.db.user({ uid: userId }).residence().city()\r\n      persons = await ctx.db.skill({name:skillName}).persons({\r\n        where:{\r\n          AND:[\r\n            {residence:{city:{code:city.code}}},\r\n            {id_not:user.id}\r\n          ]\r\n          \r\n        },\r\n        first:parseInt(number,10)\r\n      })\r\n    }else if(place===\"1\"){\r\n      const province = await ctx.db.user({ uid: userId }).residence().province()\r\n      persons = await ctx.db.skill({name:skillName}).persons({\r\n        where:{\r\n          AND:[\r\n            {residence:{province:{code:province.code}}},\r\n            {id_not:user.id}\r\n          ]\r\n        },\r\n        first:parseInt(number,10)\r\n      })\r\n    }else if(place === \"2\"){\r\n      persons = await ctx.db.skill({name:skillName}).persons({\r\n        where:{id_not:user.id},\r\n        first:parseInt(number,10)\r\n      })\r\n    }\r\n\r\n    const personsIds = persons.map(person=>({id:person.id}))\r\n   \r\n    const partnerCondition = await ctx.db.createPartnerCondition({\r\n      skillName,\r\n      place,\r\n      number,\r\n      partners:{connect:personsIds},\r\n      project:{connect:{id:projectId}}\r\n    })\r\n    \r\n    return partnerCondition\r\n  },\r\n  deletePartnerCondition:async (parent, { id }, ctx) => {\r\n\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n\r\n    // -------------------------\r\n    checkId(id)\r\n    // -------------------------\r\n    \r\n    const deletePartnerCondition = await ctx.db.deletePartnerCondition({\r\n      id,\r\n    })\r\n    return deletePartnerCondition\r\n  },\r\n  changePartner:async (parent, { conditionId,uid }, ctx) => {\r\n\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n\r\n    // -------------------------\r\n    checkId(conditionId)\r\n    checkId(uid)\r\n    // -------------------------\r\n    const partnerCondition = await ctx.db.partnerCondition({id:conditionId})\r\n    const partners = await ctx.db.partnerCondition({id:conditionId}).partners()\r\n    const partnersId = partners.map(partner=>partner.id)\r\n    const passedPartners = await ctx.db.partnerCondition({id:conditionId}).passedPartners()\r\n    const passedPartnersId = passedPartners.map(passedPartner=>passedPartner.id)\r\n    const ids = [...partnersId,...passedPartnersId,user.id]\r\n    let persons\r\n    if(partnerCondition.place===\"0\"){\r\n      const city = await ctx.db.user({ uid: userId }).residence().city()\r\n      persons = await ctx.db.skill({name:partnerCondition.skillName}).persons({\r\n        where:{\r\n          AND:[\r\n            {residence:{city:{code:city.code}}},\r\n            {id_not_in:ids}\r\n          ]\r\n          \r\n        },\r\n        first:1\r\n      })\r\n    }else if(partnerCondition.place===\"1\"){\r\n      const province = await ctx.db.user({ uid: userId }).residence().province()\r\n      persons = await ctx.db.skill({name:partnerCondition.skillName}).persons({\r\n        where:{\r\n          AND:[\r\n            {residence:{province:{code:province.code}}},\r\n            {id_not_in:ids}\r\n          ]\r\n        },\r\n        first:1\r\n      })\r\n    }else if(partnerCondition.place === \"2\"){\r\n      persons = await ctx.db.skill({name:partnerCondition.skillName}).persons({\r\n        where:{id_not_in:ids},\r\n        first:1\r\n      })\r\n    }\r\n    \r\n    let changePartner\r\n    if(persons.length>0){\r\n      changePartner = await ctx.db.updatePartnerCondition({\r\n        where:{id:conditionId},\r\n        data:{\r\n          partners:{\r\n            disconnect:{id:uid},\r\n            connect:{id:persons[0].id}\r\n          },\r\n          passedPartners:{\r\n            connect:{id:uid}\r\n          }\r\n        }\r\n      })\r\n    }else{\r\n      changePartner = await ctx.db.updatePartnerCondition({\r\n        where:{id:conditionId},\r\n        data:{\r\n          partners:{\r\n            disconnect:{id:uid},\r\n          },\r\n          passedPartners:{\r\n            connect:{id:uid}\r\n          }\r\n        }\r\n      })\r\n    }\r\n    \r\n    return changePartner\r\n  },\r\n  refreshPartner:async (parent, { conditionId }, ctx) => {\r\n\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n\r\n    // -------------------------\r\n    checkId(conditionId)\r\n    // -------------------------\r\n    const partnerCondition = await ctx.db.partnerCondition({id:conditionId})\r\n    const partners = await ctx.db.partnerCondition({id:conditionId}).partners()\r\n    const partnersId = partners.map(partner=>partner.id)\r\n    const passedPartners = await ctx.db.partnerCondition({id:conditionId}).passedPartners()\r\n    const passedPartnersId = passedPartners.map(passedPartner=>passedPartner.id)\r\n    const ids = [...partnersId,...passedPartnersId,user.id]\r\n    let persons\r\n    if(partnerCondition.place===\"0\"){\r\n      const city = await ctx.db.user({ uid: userId }).residence().city()\r\n      persons = await ctx.db.skill({name:partnerCondition.skillName}).persons({\r\n        where:{\r\n          AND:[\r\n            {residence:{city:{code:city.code}}},\r\n\r\n            {id_not_in:ids}\r\n          ]\r\n          \r\n        },\r\n        first:partnerCondition.number\r\n      })\r\n    }else if(partnerCondition.place===\"1\"){\r\n      const province = await ctx.db.user({ uid: userId }).residence().province()\r\n      persons = await ctx.db.skill({name:partnerCondition.skillName}).persons({\r\n        where:{\r\n          AND:[\r\n            {residence:{province:{code:province.code}}},\r\n            {id_not_in:ids}\r\n          ]\r\n        },\r\n        first:partnerCondition.number\r\n      })\r\n    }else if(partnerCondition.place === \"2\"){\r\n      persons = await ctx.db.skill({name:partnerCondition.skillName}).persons({\r\n        where:{id_not_in:ids},\r\n        first:partnerCondition.number\r\n      })\r\n    }\r\n    \r\n    const personsIds = persons.map(person=>({id:person.id}))\r\n    let refreshPartner \r\n    if(persons.length>0){\r\n      refreshPartner = await ctx.db.updatePartnerCondition({\r\n        where:{id:conditionId},\r\n        data:{\r\n          partners:{\r\n            connect:personsIds\r\n          },\r\n        }\r\n      })\r\n    }else{\r\n      refreshPartner = partnerCondition\r\n    }\r\n    \r\n    return refreshPartner\r\n  },\r\n  refusePartner:async (parent, { conditionId }, ctx) => {\r\n\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n\r\n    // -------------------------\r\n    checkId(conditionId)\r\n    // -------------------------\r\n    const refusePartner = await ctx.db.updatePartnerCondition({\r\n      where:{id:conditionId},\r\n      data:{\r\n        partners:{\r\n          disconnect:{id:user.id},\r\n        },\r\n        passedPartners:{\r\n          connect:{id:user.id}\r\n        }\r\n      }\r\n    })\r\n   \r\n    return refusePartner\r\n  },\r\n}\r\n"],"file":"Mutation.js"}