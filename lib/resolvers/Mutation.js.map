{"version":3,"sources":["../../src/resolvers/Mutation.js"],"names":["Mutation","signup","parent","ctx","username","password","deviceId","db","user","hasuser","Error","diveiceRegisters","registerCounts","where","length","hashedPassword","uid","token","userId","APP_SECRET","createUser","createRegisterCount","addUser","connect","id","login","valid","changePassword","currentPassword","newPassword","hashedNewPassword","updateUser","data","findPassword","forgetterId","forgetter","findPassWords","findPasswords","findPassWord","remmember","remmembers","updateFindPassWord","times","updateFindPassword","deleteFindPassWord","createFindPassWord","addBasicInfo","name","gender","birthday","birthplace","residence","village","code","homeVillage","street","homeStreet","area","homeArea","city","homeCity","province","homeProvince","residenceVillage","residenceStreet","residenceArea","residenceCity","residenceProvince","locations","existBirthplaces","createLocation","birthLocation","existResidences","residenceLocation","birthdaycalendar","calendar","date","villageGroupTypes","Object","keys","type","locationGroups","villageLocationGroups","kind","userInVillageGroups","createLocationGroup","users","pubsub","publish","LOCATIONGROUP_CHANGED","updateLocationGroup","disconnect","oldGroup","locationGroup","oldGroupUsers","oldGroupUser","a","newGroup","newGroupUsers","newGroupUser","avatar","hometownGroupTypes","hometownLocationGroups","userInHometownGroups","b","createFamily","relationship","spouseId","status","from","to","create","spouse","family","updateFamily","ctxUser","update","hasFatherAndMother","deleteFamily","familyId","toId","person","personUser","families","personFamilies","deletePerson","connectFamily","relativeId","relative","AND","relationship_in","relationshipMap","persons","families_some","indexOf","personId","relativeFamilyId","persons1","FAMILY_CHANGED","persons2","confirmFamily","myUpdateFamily","relativeFamily","myRelationship","relativeRelationship","isHusbandOrWife","myFamilies","relativeFamilies","myCommonFamilies","relativeCommonFamilies","myIntersectionFamilies","relativeIntersectionFamilies","myDifferentFamilies","relativeDifferentFamilies","myCommonFamily","myCommonFamilyTo","relativeToCommonUserFamily","relativeToCommonUserFamilyTo","relativeCommonFamily","relativeCommonFamilyTo","meRelationship","relationshipGenderMap","relationshipTOGender","relationIntersectionNew","mySpouse","relRelationship","myCommonFamilyToUser","Date","parse","relativeSpouse","addLocation","location","locationName","place","addSchool","schools","createSchool","addStudy","year","schoolId","grade","className","majorId","startTime","schoolEdus","school","createSchoolEdu","students","newSchoolEdu","updateSchoolEdu","major","schoolEdu","student","STUDENTS_ADDED","addOrUpdateWork","companyName","endTime","department","stationId","updateId","companies","work","worker","updateWork","post","getFullYear","workGroups","company","colleagues_some","workGroup","colleagues","workGroupWorColleagues","colleague","oldworker","createOldColleague","MYOLDCOLLEAGUES_CHANGED","allWorkGroups","group","userColleagues","updateWorkGroup","delete","publishWorker","WORKGROUP_CHANGED","WORKS_CHANGED","companyId","createWork","createdWork","works","OR","startTime_gte","endTime_lte","COLLEAGUES_ADDED","addExamBasicInfo","section","score","specialScore","examineeCardNumber","collegeEntranceExam","candidatenum","isExistcandidatenum","createCollegeEntranceExam","subject","culscore","parseFloat","proscore","updateExamBasicInfo","collegeEntranceExams","oldExamBasicInfo","updateCollegeEntranceExam","addRegStatus","education","universityId","regStatus","userRegStatus","regStatuses","university","updateRegStatus","applicants","userReg","createRegStatus","fee","regTimes","maxRegTimes","cancelRegStatus","addClassGroup","schoolEduId","studentId","classGroups","study","members_some","classMates","studentClassMates","updateClassGroup","members","updated","classGroup","member","classMate","CLASSGROUP_CHANGED","createClassGroup","created","confirmClassGroup","studentClassGroups","myClassGroups","InMyGroupstudents","myClassGroupMembers","studentClassGroupsMembers","memeberStudent","inStudentClassGroupStudents","updateClassMate","deleteClassMate","deleteClassGroup","inMyClassGroupStudents","addWorkGroup","workerId","meColleagues","createWorkGroup","confirmWorkGroup","workerGroups","myWorkGroups","InMyGroupWorkers","myWorkGroupColleagues","workerGroupsColleagues","colleagueWorker","inWorkerGroupColleagues","updateColleague","deleteColleague","deleteWorkGroup","inMyWorkGroupColleagues","workerColleauges","addOldColleague","myOldColleague","confirmOldColleague","oldColleagues","myOldColleagues","oldColleagueTomes","updateOldColleague","updatemyOldColleague","postPhoto","uri","ext","typesMap","options","expires","method","url","ossClient","signatureUrl","updatePhoto","newPhoto","createPhoto","sendMessage","text","image","userAvatar","toUser","toUserAvatar","friends","writeUrl","readUrl","createMessage","message","messageImage","returnMessage","createdAt","pubMessage","__typename","MESSAGE_ADDED_TOPIC","sendGroupMessage","types","familyGroup","toGroup","createGroupMessage","groupMessage","GMESSAGE_ADDED_TOPIC","addAdvertisement","sTime","advertisements","image1","updateAdvertisement","newAdvertisement","image2","image3","image4","image5","createAdvertisement","getTime","createDraft","title","content","authorEmail","createPost","author","email","deletePost","$fragment","authorId","updatePost","isPublished"],"mappings":"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","sourcesContent":["import { hash, compare } from 'bcrypt'\r\nimport { sign } from 'jsonwebtoken'\r\nimport uuidv4 from 'uuid/v4'\r\n\r\nimport {\r\n  APP_SECRET,\r\n  getUserId,\r\n  updateCommonUserFamily,\r\n  getCommonFamilies,\r\n  getIntersectionFamiles,\r\n  getDifferentFamilies,\r\n  refreshMyFamilyGroups,\r\n  checkExistFatherAndMother,\r\n  getFileName,\r\n  getFileExt,\r\n} from '../services/utils'\r\n\r\nimport {\r\n  checkUsername,\r\n  checkPassword,\r\n  checkName,\r\n  checkRelationship,\r\n  checkId,\r\n  checkStatus,\r\n  validateBasicInfo,\r\n  checkNum,\r\n  checkCnEnNum,\r\n  checkDate,\r\n  checkCompanyName,\r\n  checkScore\r\n} from '../validate'\r\nimport {\r\n  relationshipMap,\r\n  relationIntersectionNew,\r\n  relationshipGenderMap,\r\n  relationshipTOGender,\r\n} from \"../services/relationship\"\r\nimport {\r\n  FAMILY_CHANGED,\r\n  CLASSGROUP_CHANGED,\r\n  WORKGROUP_CHANGED,\r\n  STUDENTS_ADDED,\r\n  COLLEAGUES_ADDED,\r\n  MYOLDCOLLEAGUES_CHANGED,\r\n  WORKS_CHANGED,\r\n  LOCATIONGROUP_CHANGED,\r\n  MESSAGE_ADDED_TOPIC,\r\n  GMESSAGE_ADDED_TOPIC,\r\n} from './Subscription'\r\nimport { pubsub } from '../subscriptions';\r\nimport { fee, ossClient } from '../services/settings'\r\n\r\nexport const Mutation = {\r\n  signup: async (parent, { username, password, deviceId }, ctx) => {\r\n    // 输入数据验证\r\n    checkUsername(username)\r\n    checkPassword(password)\r\n\r\n    const hasuser = await ctx.db.user({ username })\r\n    if (hasuser) {\r\n      throw new Error(`${username}已经被占用`)\r\n    }\r\n    // 检查设备已注册人数\r\n    const diveiceRegisters = ctx.db.registerCounts({\r\n      where: { deviceId }\r\n    })\r\n    if (diveiceRegisters.length >= 3) {\r\n      throw new Error('每台设备限注册三人，已超过最大限制')\r\n    }\r\n    //------------------------------------\r\n    const hashedPassword = await hash(password, 10)\r\n    const uid = uuidv4()\r\n    const token = sign({ userId: uid }, APP_SECRET)\r\n    const user = await ctx.db.createUser({\r\n      username,\r\n      password: hashedPassword,\r\n      uid,\r\n      token,\r\n    })\r\n    // 添加注册信息\r\n    await ctx.db.createRegisterCount({\r\n      addUser: { connect: { id: user.id } },\r\n      deviceId,\r\n    })\r\n\r\n    return {\r\n      token,\r\n      user\r\n    }\r\n  },\r\n\r\n  login: async (parent, { username, password }, ctx) => {\r\n    // 输入数据验证\r\n    checkUsername(username)\r\n    checkPassword(password)\r\n\r\n    const user = await ctx.db.user({ username })\r\n    if (!user) {\r\n      throw new Error(`用户不存在: ${username}`)\r\n    }\r\n\r\n    const valid = await compare(password, user.password)\r\n    if (!valid) {\r\n      throw new Error('密码错误')\r\n    }\r\n    // -----------------------------------\r\n\r\n\r\n    return {\r\n      token: user.token,\r\n      user\r\n    }\r\n  },\r\n  changePassword: async (parent, { currentPassword, newPassword }, ctx) => {\r\n    // 权限验证\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    // -----------------------------------------------\r\n    // 输入数据验证\r\n    if (currentPassword && newPassword) {\r\n      checkPassword(currentPassword)\r\n      checkPassword(newPassword)\r\n    }\r\n\r\n    const valid = await compare(currentPassword, user.password)\r\n    if (!valid) {\r\n      throw new Error('原始密码错误')\r\n    }\r\n    // --------------------------------------------------------\r\n\r\n    const hashedNewPassword = await hash(newPassword, 10)\r\n    const uid = uuidv4()\r\n    const updateUser = await ctx.db.updateUser({\r\n      data: {\r\n        password: hashedNewPassword,\r\n        uid,\r\n        token: sign({ userId: uid }, APP_SECRET)\r\n      },\r\n      where: {\r\n        uid: userId\r\n      }\r\n    })\r\n\r\n    return updateUser\r\n\r\n  },\r\n\r\n  findPassword: async (parent, { forgetterId }, ctx) => {\r\n    // -----------------------------------------------\r\n    // 输入数据验证\r\n    checkId(forgetterId)\r\n\r\n    // --------------------------------------------------------\r\n    // 权限验证\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const forgetter = await ctx.db.user({ id: forgetterId })\r\n\r\n    if (!forgetter) {\r\n      throw new Error('用户不存在')\r\n    }\r\n    const findPasswords = await ctx.db.findPassWords({\r\n      where: { forgetter: { id: forgetterId } }\r\n    })\r\n    if (findPasswords.length > 0) {\r\n      const remmembers = await ctx.db.findPassWord({ id: findPasswords[0].id }).remmember()\r\n      if (remmembers[0].id === user.id) {\r\n        return findPasswords[0]\r\n      }\r\n      const updateFindPassword = await ctx.db.updateFindPassWord({\r\n        where: { id: findPasswords[0].id },\r\n        data: {\r\n          times: 2,\r\n          forgetter: { connect: { id: forgetterId } },\r\n          remmember: { connect: { id: user.id } }\r\n        }\r\n      })\r\n      const newPassword = '123456abcd'\r\n      const hashedNewPassword = await hash(newPassword, 10)\r\n      const uid = uuidv4()\r\n      await ctx.db.updateUser({\r\n        data: {\r\n          password: hashedNewPassword,\r\n          uid,\r\n          token: sign({ userId: uid }, APP_SECRET)\r\n        },\r\n        where: {\r\n          id: forgetterId\r\n        }\r\n      })\r\n\r\n      await ctx.db.deleteFindPassWord({ id: updateFindPassword.id })\r\n\r\n      return updateFindPassword\r\n    }\r\n\r\n    return ctx.db.createFindPassWord({\r\n      times: 1,\r\n      forgetter: { connect: { id: forgetterId } },\r\n      remmember: { connect: { id: user.id } }\r\n    })\r\n\r\n  },\r\n\r\n  addBasicInfo: async (parent, { name, gender, birthday, birthplace, residence }, ctx) => {\r\n    // 权限验证\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    // -----------------------------------------------\r\n    // 输入数据验证\r\n    validateBasicInfo(name, gender, birthday, birthplace, residence)\r\n    // 检查是或否已经存在location\r\n\r\n    let birthLocation\r\n    let residenceLocation\r\n\r\n    const homeVillage = await ctx.db.village({ code: birthplace.village })\r\n    const homeStreet = await ctx.db.street({ code: birthplace.street })\r\n    const homeArea = await ctx.db.area({ code: birthplace.area })\r\n    const homeCity = await ctx.db.city({ code: birthplace.city })\r\n    const homeProvince = await ctx.db.province({ code: birthplace.province })\r\n\r\n    const residenceVillage = await ctx.db.village({ code: residence.village })\r\n    const residenceStreet = await ctx.db.street({ code: residence.street })\r\n    const residenceArea = await ctx.db.area({ code: residence.area })\r\n    const residenceCity = await ctx.db.city({ code: residence.city })\r\n    const residenceProvince = await ctx.db.province({ code: residence.province })\r\n\r\n    const existBirthplaces = await ctx.db.locations({\r\n      where: {\r\n        province: { code: birthplace.province },\r\n        city: { code: birthplace.city },\r\n        area: { code: birthplace.area },\r\n        village: { code: birthplace.village },\r\n        street: { code: birthplace.street },\r\n      }\r\n    })\r\n\r\n    if (existBirthplaces.length === 0) {\r\n      birthLocation = await ctx.db.createLocation({\r\n        name: homeProvince.name + homeCity.name + homeArea.name + homeStreet.name + homeVillage.name,\r\n        province: { connect: { code: birthplace.province } },\r\n        city: { connect: { code: birthplace.city } },\r\n        area: { connect: { code: birthplace.area } },\r\n        street: { connect: { code: birthplace.street } },\r\n        village: { connect: { code: birthplace.village } },\r\n      })\r\n    } else {\r\n      birthLocation = existBirthplaces[0]\r\n    }\r\n    const existResidences = await ctx.db.locations({\r\n      where: {\r\n        province: { code: residence.province },\r\n        city: { code: residence.city },\r\n        area: { code: residence.area },\r\n        village: { code: residence.village },\r\n        street: { code: residence.street },\r\n      }\r\n    })\r\n    if (existResidences.length === 0) {\r\n      residenceLocation = await ctx.db.createLocation({\r\n        name: residenceProvince.name + residenceCity.name + residenceArea.name + residenceStreet.name + residenceVillage.name,\r\n        province: { connect: { code: residence.province } },\r\n        city: { connect: { code: residence.city } },\r\n        area: { connect: { code: residence.area } },\r\n        street: { connect: { code: residence.street } },\r\n        village: { connect: { code: residence.village } },\r\n      })\r\n    } else {\r\n      residenceLocation = existResidences[0]\r\n    }\r\n    // -----------------------------------------------\r\n    const updateUser = ctx.db.updateUser({\r\n      where: { uid: userId },\r\n      data: {\r\n        name,\r\n        gender,\r\n        birthdaycalendar: birthday.calendar,\r\n        birthday: birthday.date,\r\n        birthplace: { connect: { id: birthLocation.id } },\r\n        residence: { connect: { id: residenceLocation.id } },\r\n      }\r\n    })\r\n    // 添加location group\r\n    const villageGroupTypes = { 'HomeVillage': homeVillage, 'ResidenceVillage': residenceVillage }\r\n    // 添加village组\r\n    for (const type of Object.keys(villageGroupTypes)) {\r\n      // 检查老家组是否存在\r\n      const villageLocationGroups = await ctx.db.locationGroups({\r\n        where: { code: villageGroupTypes[type].code }\r\n      })\r\n      // 检查用户是否已经有老家组\r\n      const userInVillageGroups = await ctx.db.user({ id: user.id }).locationGroups({\r\n        where: { kind: type }\r\n      })\r\n\r\n      // 如果没有老家组\r\n      if (villageLocationGroups.length === 0) {\r\n        await ctx.db.createLocationGroup({\r\n          kind: type,\r\n          code: villageGroupTypes[type].code,\r\n          name: villageGroupTypes[type].name,\r\n          users: { connect: { uid: userId } }\r\n        })\r\n        pubsub.publish(LOCATIONGROUP_CHANGED, {\r\n          [LOCATIONGROUP_CHANGED]: {\r\n            \"toId\": user.id,\r\n            \"type\": \"refech\"\r\n          }\r\n        })\r\n        // 如果用户有老家组\r\n        if (userInVillageGroups.length > 0) {\r\n          // 从原来的组中删除User\r\n          const oldGroup = await ctx.db.updateLocationGroup({\r\n            where: { id: userInVillageGroups[0].id },\r\n            data: { users: { disconnect: { uid: userId } } }\r\n          })\r\n          const oldGroupUsers = await ctx.db.locationGroup({ id: oldGroup.id }).users()\r\n          for (const oldGroupUser of oldGroupUsers) {\r\n            pubsub.publish(LOCATIONGROUP_CHANGED, {\r\n              [LOCATIONGROUP_CHANGED]: {\r\n                \"toId\": oldGroupUser.id,\r\n                \"groupId\": oldGroup.id,\r\n                'userid': user.id,\r\n                'type': \"userRemoved\"\r\n              }\r\n            })\r\n          }\r\n        }\r\n      } else {\r\n        const a = 1\r\n        if (userInVillageGroups.length > 0) {\r\n          if (userInVillageGroups[0].id !== villageLocationGroups[0].id) {\r\n            // 从原来的组中删除User\r\n            const oldGroup = await ctx.db.updateLocationGroup({\r\n              where: { id: userInVillageGroups[0].id },\r\n              data: { users: { disconnect: { uid: userId } } }\r\n            })\r\n            const oldGroupUsers = await ctx.db.locationGroup({ id: oldGroup.id }).users()\r\n            for (const oldGroupUser of oldGroupUsers) {\r\n              pubsub.publish(LOCATIONGROUP_CHANGED, {\r\n                [LOCATIONGROUP_CHANGED]: {\r\n                  \"toId\": oldGroupUser.id,\r\n                  \"groupId\": oldGroup.id,\r\n                  'userid': user.id,\r\n                  'type': \"userRemoved\"\r\n                }\r\n              })\r\n            }\r\n            // 将User添加到现在的组中\r\n            const newGroup = await ctx.db.updateLocationGroup({\r\n              where: { id: villageLocationGroups[0].id },\r\n              data: { users: { connect: { uid: userId } } }\r\n            })\r\n            const newGroupUsers = await ctx.db.locationGroup({ id: newGroup.id }).users()\r\n            for (const newGroupUser of newGroupUsers) {\r\n              if (newGroupUser.id !== user.id) {\r\n                pubsub.publish(LOCATIONGROUP_CHANGED, {\r\n                  [LOCATIONGROUP_CHANGED]: {\r\n                    \"toId\": newGroupUser.id,\r\n                    \"groupId\": newGroup.id,\r\n                    \"userid\": user.id,\r\n                    \"username\": user.name,\r\n                    \"userAvatar\": user.avatar,\r\n                    'type': 'userAdded'\r\n                  }\r\n                })\r\n              }\r\n            }\r\n            pubsub.publish(LOCATIONGROUP_CHANGED, {\r\n              [LOCATIONGROUP_CHANGED]: {\r\n                \"toId\": user.id,\r\n                \"type\": \"refech\"\r\n              }\r\n            })\r\n          }\r\n        } else {\r\n          // 将用户添加到现在的组中\r\n          const newGroup = await ctx.db.updateLocationGroup({\r\n            where: { id: villageLocationGroups[0].id },\r\n            data: { users: { connect: { uid: userId } } }\r\n          })\r\n          const newGroupUsers = await ctx.db.locationGroup({ id: newGroup.id }).users()\r\n          for (const newGroupUser of newGroupUsers) {\r\n            if (newGroupUser.id !== user.id) {\r\n              pubsub.publish(LOCATIONGROUP_CHANGED, {\r\n                [LOCATIONGROUP_CHANGED]: {\r\n                  \"toId\": newGroupUser.id,\r\n                  \"groupId\": newGroup.id,\r\n                  \"userid\": user.id,\r\n                  \"username\": user.name,\r\n                  \"userAvatar\": user.avatar,\r\n                  'type': 'userAdded'\r\n                }\r\n              })\r\n            }\r\n          }\r\n          pubsub.publish(LOCATIONGROUP_CHANGED, {\r\n            [LOCATIONGROUP_CHANGED]: {\r\n              \"toId\": user.id,\r\n              \"type\": \"refech\"\r\n            }\r\n          })\r\n        }\r\n      }\r\n\r\n\r\n\r\n    }\r\n\r\n    // 添加老乡组\r\n    const hometownGroupTypes = {\r\n      \"VillageInResidenceVillage\": [homeVillage, residenceVillage],\r\n      \"StreetInResidenceVillage\": [homeStreet, residenceVillage],\r\n      \"AreaInResidenceVillage\": [homeArea, residenceVillage],\r\n      \"CityInResidenceVillage\": [homeCity, residenceVillage],\r\n      \"ProvinceInResidenceVillage\": [homeProvince, residenceVillage],\r\n      \"VillageInResidenceStreet\": [homeVillage, residenceStreet],\r\n      \"StreetInResidenceStreet\": [homeStreet, residenceStreet],\r\n      \"AreaInResidenceStreet\": [homeArea, residenceStreet],\r\n      \"CityInResidenceStreet\": [homeCity, residenceStreet],\r\n      \"ProvinceInResidenceStreet\": [homeProvince, residenceStreet],\r\n      \"VillageInResidenceArea\": [homeVillage, residenceArea],\r\n      \"StreetInResidenceArea\": [homeStreet, residenceArea],\r\n      \"AreaInResidenceArea\": [homeArea, residenceArea],\r\n      \"CityInResidenceArea\": [homeCity, residenceArea],\r\n      \"ProvinceInResidenceArea\": [homeProvince, residenceArea],\r\n      \"VillageInResidenceCity\": [homeVillage, residenceCity],\r\n      \"StreetInResidenceCity\": [homeStreet, residenceCity],\r\n      \"AreaInResidenceCity\": [homeArea, residenceCity],\r\n      \"CityInResidenceCity\": [homeCity, residenceCity],\r\n      \"ProvinceInResidenceCity\": [homeProvince, residenceCity],\r\n    }\r\n\r\n    if (homeProvince.id !== residenceProvince.id) {\r\n      // 对于跨省人的增加老乡组\r\n      for (const type of Object.keys(hometownGroupTypes)) {\r\n        // 检查组是否存在\r\n        const hometownLocationGroups = await ctx.db.locationGroups({\r\n          where: { code: `${hometownGroupTypes[type][0].code}in${hometownGroupTypes[type][1].code}` }\r\n        })\r\n        // 检查用户是否已经有组\r\n        const userInHometownGroups = await ctx.db.user({ id: user.id }).locationGroups({\r\n          where: { kind: type }\r\n        })\r\n\r\n        if (hometownLocationGroups.length === 0) {\r\n          await ctx.db.createLocationGroup({\r\n            kind: type,\r\n            code: `${hometownGroupTypes[type][0].code}in${hometownGroupTypes[type][1].code}`,\r\n            name: `${hometownGroupTypes[type][0].name}人在${hometownGroupTypes[type][1].name}`,\r\n            users: { connect: { uid: userId } }\r\n          })\r\n          pubsub.publish(LOCATIONGROUP_CHANGED, {\r\n            [LOCATIONGROUP_CHANGED]: {\r\n              \"toId\": user.id,\r\n              \"type\": \"refech\"\r\n            }\r\n          })\r\n          // 如果用户有老家组\r\n          if (userInHometownGroups.length > 0) {\r\n            // 从原来的组中删除User\r\n            const oldGroup = await ctx.db.updateLocationGroup({\r\n              where: { id: userInHometownGroups[0].id },\r\n              data: { users: { disconnect: { uid: userId } } }\r\n            })\r\n            const oldGroupUsers = await ctx.db.locationGroup({ id: oldGroup.id }).users()\r\n            for (const oldGroupUser of oldGroupUsers) {\r\n              pubsub.publish(LOCATIONGROUP_CHANGED, {\r\n                [LOCATIONGROUP_CHANGED]: {\r\n                  \"toId\": oldGroupUser.id,\r\n                  \"groupId\": oldGroup.id,\r\n                  'userid': user.id,\r\n                  'type': \"userRemoved\"\r\n                }\r\n              })\r\n            }\r\n          }\r\n        } else {\r\n          const b = 1\r\n          if (userInHometownGroups.length > 0) {\r\n            if (userInHometownGroups[0].id !== hometownLocationGroups[0].id) {\r\n              // 从原来的组中删除User\r\n              const oldGroup = await ctx.db.updateLocationGroup({\r\n                where: { id: userInHometownGroups[0].id },\r\n                data: { users: { disconnect: { uid: userId } } }\r\n              })\r\n              const oldGroupUsers = await ctx.db.locationGroup({ id: oldGroup.id }).users()\r\n              for (const oldGroupUser of oldGroupUsers) {\r\n                pubsub.publish(LOCATIONGROUP_CHANGED, {\r\n                  [LOCATIONGROUP_CHANGED]: {\r\n                    \"toId\": oldGroupUser.id,\r\n                    \"groupId\": oldGroup.id,\r\n                    'userid': user.id,\r\n                    'type': \"userRemoved\"\r\n                  }\r\n                })\r\n              }\r\n              // 将User添加到现在的组中\r\n              const newGroup = await ctx.db.updateLocationGroup({\r\n                where: { id: hometownLocationGroups[0].id },\r\n                data: { users: { connect: { uid: userId } } }\r\n              })\r\n              const newGroupUsers = await ctx.db.locationGroup({ id: newGroup.id }).users()\r\n              for (const newGroupUser of newGroupUsers) {\r\n                if (newGroupUser.id !== user.id) {\r\n                  pubsub.publish(LOCATIONGROUP_CHANGED, {\r\n                    [LOCATIONGROUP_CHANGED]: {\r\n                      \"toId\": newGroupUser.id,\r\n                      \"groupId\": newGroup.id,\r\n                      \"userid\": user.id,\r\n                      \"username\": user.name,\r\n                      \"userAvatar\": user.avatar,\r\n                      'type': 'userAdded'\r\n                    }\r\n                  })\r\n                }\r\n              }\r\n\r\n              pubsub.publish(LOCATIONGROUP_CHANGED, {\r\n                [LOCATIONGROUP_CHANGED]: {\r\n                  \"toId\": user.id,\r\n                  \"type\": \"refech\"\r\n                }\r\n              })\r\n            }\r\n          } else {\r\n            // 将用户添加到现在的组中\r\n            const newGroup = await ctx.db.updateLocationGroup({\r\n              where: { id: hometownLocationGroups[0].id },\r\n              data: { users: { connect: { uid: userId } } }\r\n            })\r\n            const newGroupUsers = await ctx.db.locationGroup({ id: newGroup.id }).users()\r\n            for (const newGroupUser of newGroupUsers) {\r\n              if (newGroupUser.id !== user.id) {\r\n                pubsub.publish(LOCATIONGROUP_CHANGED, {\r\n                  [LOCATIONGROUP_CHANGED]: {\r\n                    \"toId\": newGroupUser.id,\r\n                    \"groupId\": newGroup.id,\r\n                    \"userid\": user.id,\r\n                    \"username\": user.name,\r\n                    \"userAvatar\": user.avatar,\r\n                    'type': 'userAdded'\r\n                  }\r\n                })\r\n              }\r\n            }\r\n            pubsub.publish(LOCATIONGROUP_CHANGED, {\r\n              [LOCATIONGROUP_CHANGED]: {\r\n                \"toId\": user.id,\r\n                \"type\": \"refech\"\r\n              }\r\n            })\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return updateUser\r\n  },\r\n\r\n\r\n  createFamily: async (parent, { name, relationship, spouseId }, ctx) => {\r\n    // 权限验证\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    // -----------------------------------------------\r\n    // 输入数据验证\r\n    checkName(name)\r\n    checkRelationship(relationship)\r\n    // -----------------------------------------------\r\n    // 创建家人\r\n    let family\r\n    if (spouseId) {\r\n      checkId(spouseId)\r\n      family = await ctx.db.createFamily({\r\n        relationship,\r\n        status: '0',\r\n        from: { connect: { uid: userId } },\r\n        to: { create: { name } },\r\n        spouse: { connect: { id: spouseId } }\r\n      })\r\n    } else {\r\n      family = await ctx.db.createFamily({\r\n        relationship,\r\n        status: '0',\r\n        from: { connect: { uid: userId } },\r\n        to: { create: { name } },\r\n      })\r\n    }\r\n    // const hasFatherAndMother = await checkExistFatherAndMother(user.id,ctx)\r\n    // if(hasFatherAndMother){\r\n    //   await refreshMyFamilyGroups(parent,{},ctx)\r\n    // }\r\n    return family\r\n  },\r\n\r\n  updateFamily: async (parent, { id, name, relationship, spouseId, status = \"0\" }, ctx) => {\r\n    // 权限验证\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const ctxUser = await ctx.db.user({ uid: userId })\r\n    if (!ctxUser) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.family({ id }).from()\r\n    if (user.uid !== userId) {\r\n      throw new Error(\"无法更新不属于自己的家人\")\r\n    }\r\n    // -----------------------------------------------\r\n    // 输入数据验证\r\n    checkId(id)\r\n    checkName(name)\r\n    checkRelationship(relationship)\r\n    checkStatus(status)\r\n    // -----------------------------------------------\r\n    let updateFamily\r\n    if (spouseId) {\r\n      checkId(spouseId)\r\n      updateFamily = await ctx.db.updateFamily({\r\n        where: { id },\r\n        data: {\r\n          to: { update: { name } },\r\n          spouse: { connect: { id: spouseId } },\r\n          relationship,\r\n          status\r\n        },\r\n      })\r\n    } else {\r\n      updateFamily = await ctx.db.updateFamily({\r\n        where: { id },\r\n        data: {\r\n          to: { update: { name } },\r\n          relationship,\r\n          status\r\n        },\r\n      })\r\n    }\r\n    const hasFatherAndMother = await checkExistFatherAndMother(user.id, ctx)\r\n    if (hasFatherAndMother) {\r\n      await refreshMyFamilyGroups(parent, {}, ctx)\r\n    }\r\n    return updateFamily\r\n  },\r\n\r\n  deleteFamily: async (parent, { familyId, toId }, ctx) => {\r\n    // 权限验证\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.family({ id: familyId }).from()\r\n    if (user.uid !== userId) {\r\n      throw new Error(\"无法删除不属于自己的家人\")\r\n    }\r\n    // -----------------------------------------------\r\n    // 输入数据验证\r\n    checkId(familyId)\r\n    checkId(toId)\r\n    // -----------------------------------------------\r\n\r\n    const deleteFamily = await ctx.db.deleteFamily({ id: familyId })\r\n    const personUser = await ctx.db.person({ id: toId }).user()\r\n    const personFamilies = await ctx.db.person({ id: toId }).families()\r\n    if (!personUser && personFamilies.length === 0) {\r\n      await ctx.db.deletePerson({ id: toId })\r\n    }\r\n    const hasFatherAndMother = await checkExistFatherAndMother(user.id, ctx)\r\n    if (hasFatherAndMother) {\r\n      await refreshMyFamilyGroups(parent, {}, ctx)\r\n    }\r\n    return deleteFamily\r\n  },\r\n\r\n  connectFamily: async (parent, { relativeId, familyId, name, relationship }, ctx) => {\r\n    // relativeId:亲属的user id\r\n    // familyId:自己建立亲属的id\r\n    // name:亲属的姓名\r\n    // relationship:和亲属的关系\r\n\r\n    // 权限验证\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n\r\n    const user = await ctx.db.family({ id: familyId }).from()\r\n    if (user.uid !== userId) {\r\n      throw new Error(\"无法连接不属于自己的家人\")\r\n    }\r\n    // -----------------------------------------------\r\n    // 输入数据验证\r\n    checkId(relativeId)\r\n    checkId(familyId)\r\n    checkName(name)\r\n    checkRelationship(relationship)\r\n    // -----------------------------------------------\r\n    // 亲人\r\n    const relative = await ctx.db.user({ id: relativeId })\r\n    if (relative.name !== name) {\r\n      throw new Error(\"对方姓名与你拟添加的家庭成员姓名不一致\")\r\n    }\r\n    // 亲人的家庭成员列表，仅包含尚未连接的列表\r\n    const families = await ctx.db.families({\r\n      where: {\r\n        AND: [\r\n          { from: { id: relativeId } },\r\n          { status: \"0\" },\r\n          { relationship_in: relationshipMap[relationship] }\r\n        ]\r\n      }\r\n    })\r\n    // 检查拟建立关系的亲人家庭成员中是否添加了与user相同的名字和对应的关系。\r\n    if (families.length === 0) {\r\n      throw new Error(\"对方家庭成员中未找到你的名字\")\r\n    }\r\n    let personId\r\n    let relativeFamilyId\r\n    for (const family of families) {\r\n      // 获取亲人家庭成员的个人信息\r\n      const persons = await ctx.db.persons({ where: { families_some: { id: family.id } } })\r\n      for (const person of persons) {\r\n        if (person.name === user.name && relationshipMap[relationship].indexOf(family.relationship) > -1) {\r\n          personId = person.id\r\n          relativeFamilyId = family.id\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!personId || !relativeFamilyId) {\r\n      throw new Error(\"对方家庭成员中未包含你的名字或关系不正确\")\r\n    }\r\n    // 检查person中是否已经存在User\r\n    const persons1 = await ctx.db.persons({ where: { user: { uid: userId } } })\r\n    // 0:连接，1:等待验证 2:确认 3:已连接\r\n    // 更新亲人连接状态为“确认”,更新to中的user\r\n    if (persons1.length === 0) {\r\n      await ctx.db\r\n        .updateFamily({\r\n          data: {\r\n            status: \"2\",\r\n            to: {\r\n              update: {\r\n                user: {\r\n                  connect: {\r\n                    uid: userId\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          where: {\r\n            id: relativeFamilyId\r\n          }\r\n        })\r\n    } else {\r\n      await ctx.db\r\n        .updateFamily({\r\n          data: {\r\n            status: \"2\",\r\n            to: {\r\n              connect: {\r\n                id: persons1[0].id\r\n              }\r\n            }\r\n          },\r\n          where: {\r\n            id: relativeFamilyId\r\n          }\r\n        })\r\n    }\r\n    // 此处发送向relative发送订阅\r\n    pubsub.publish(FAMILY_CHANGED, { [FAMILY_CHANGED]: { \"text\": relativeId } })\r\n    // 更新自己的家庭成员状态为“等待确认”,更新to中的user\r\n    // 检查person中是否已经存在relative\r\n    const persons2 = await ctx.db.persons({ where: { user: { id: relativeId } } })\r\n    let updateFamily\r\n    if (persons2.length === 0) {\r\n      updateFamily = await ctx.db\r\n        .updateFamily({\r\n          data: {\r\n            status: \"1\",\r\n            to: {\r\n              update: {\r\n                user: {\r\n                  connect: {\r\n                    id: relativeId\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          where: {\r\n            id: familyId\r\n          }\r\n        })\r\n    } else {\r\n      updateFamily = await ctx.db\r\n        .updateFamily({\r\n          data: {\r\n            status: \"1\",\r\n            to: {\r\n              connect: {\r\n                id: persons2[0].id\r\n              }\r\n            }\r\n          },\r\n          where: {\r\n            id: familyId\r\n          }\r\n        })\r\n    }\r\n    return updateFamily\r\n  },\r\n\r\n  confirmFamily: async (parent, { familyId }, ctx) => {\r\n    // 权限验证\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.family({ id: familyId }).from()\r\n    if (user.uid !== userId) {\r\n      throw new Error(\"无法确认不属于自己的家人\")\r\n    }\r\n    // -----------------------------------------------\r\n    // 输入数据验证\r\n    checkId(familyId)\r\n    // -----------------------------------------------\r\n\r\n    // 更新user family status\r\n    const myUpdateFamily = await ctx.db.updateFamily({\r\n      where: { id: familyId },\r\n      data: { status: \"3\" }\r\n    })\r\n\r\n\r\n    // 获取relative famliy\r\n    // 获取relative\r\n    const relative = await ctx.db.family(\r\n      { id: familyId },\r\n    ).to().user()\r\n    // 获取relative Family\r\n    const relativeFamily = await ctx.db.user({ id: relative.id }).families({ where: { to: { user: { uid: userId } } } })\r\n    // 更新relative family  status\r\n    await ctx.db.updateFamily({\r\n      where: { id: relativeFamily[0].id },\r\n      data: { status: \"3\" }\r\n    })\r\n    pubsub.publish(FAMILY_CHANGED, { [FAMILY_CHANGED]: { \"text\": relative.id } })\r\n    // 删除多余的person 见deletePersons\r\n    // 没有必要每个删除，可以定时的删除所有family为[],并且user 为null的person.\r\n\r\n    // 合并相同的亲人\r\n    // 将共同的亲人分为三部分，一部分是me和relative都有的commonuser,第二部分是me有relative没有的，第三部分是relative有me没有的。\r\n    // 我的家庭成员==》我的共同家庭成员==》使用我的共同家庭成员同步relative的family，同时更新共同家庭成员family\r\n    // rel的家庭成员==》rel的共同家庭成员==》使用rel的共同家庭成员同步我的family，同时更新共同家庭成员family\r\n\r\n    const myRelationship = myUpdateFamily.relationship\r\n    const relativeRelationship = relativeFamily[0].relationship\r\n    const isHusbandOrWife = ~[\"husband\", \"wife\"].indexOf(myRelationship)\r\n    const myFamilies = await ctx.db.user({ uid: userId }).families()\r\n    const relativeFamilies = await ctx.db.user({ id: relative.id }).families()\r\n    // 获取共同的亲人\r\n    const myCommonFamilies = await getCommonFamilies(relativeRelationship, myFamilies, myUpdateFamily.id, ctx)\r\n    const relativeCommonFamilies = await getCommonFamilies(myRelationship, relativeFamilies, relativeFamily[0].id, ctx)\r\n    // 获取共同家庭成员的交集\r\n    const { myIntersectionFamilies, relativeIntersectionFamilies } = await getIntersectionFamiles(myCommonFamilies, relativeCommonFamilies, ctx)\r\n    // 获取me共同成员的差集\r\n    const myDifferentFamilies = getDifferentFamilies(myCommonFamilies, myIntersectionFamilies)\r\n    // 获取relative共同成员的差集\r\n    const relativeDifferentFamilies = getDifferentFamilies(relativeCommonFamilies, relativeIntersectionFamilies)\r\n    // 第一部分：遍历共同的家庭成员交集，用status大的一方更新小的一方。\r\n    for (const myCommonFamily of myIntersectionFamilies) {\r\n      const myCommonFamilyTo = await ctx.db.family({ id: myCommonFamily.id }).to()\r\n      const relativeToCommonUserFamily = await ctx.db.user({ id: relative.id }).families(\r\n        { where: { to: { name: myCommonFamilyTo.name } } }\r\n      )\r\n      const relativeToCommonUserFamilyTo = await ctx.db.family({ id: relativeToCommonUserFamily[0].id }).to()\r\n      // 如果已经同步了，就不要在同步了\r\n      if (myCommonFamilyTo.id !== relativeToCommonUserFamilyTo.id ||\r\n        myCommonFamily.status !== relativeToCommonUserFamily[0].status\r\n      ) {\r\n        if (myCommonFamily.status >= relativeToCommonUserFamily[0].status) {\r\n          // 如果我的家庭成员status大于relative的status,则更新relative的family\r\n          // 更新relative的family\r\n          await ctx.db.updateFamily({\r\n            where: { id: relativeToCommonUserFamily[0].id },\r\n            data: {\r\n              status: myCommonFamily.status,\r\n              to: { connect: { id: myCommonFamilyTo.id } }\r\n            }\r\n          })\r\n          if (myCommonFamily.status > \"0\") {\r\n            // 如果等于0,则还没有共同的user,无需更新,如果大于0，则要更新CommonUser\r\n            await updateCommonUserFamily(user, myRelationship, myCommonFamily, relative, relativeRelationship, ctx)\r\n          }\r\n          // 向relative推送familyChanged\r\n          pubsub.publish(FAMILY_CHANGED, { [FAMILY_CHANGED]: { \"text\": relative.id } })\r\n        }\r\n        else {\r\n          // 如果relative的status大于我的家庭成员的status，则更新我的family\r\n          // 更新我的family\r\n          await ctx.db.updateFamily({\r\n            where: { id: myCommonFamily.id },\r\n            data: {\r\n              status: relativeToCommonUserFamily[0].status,\r\n              to: { connect: { id: relativeToCommonUserFamilyTo.id } }\r\n            }\r\n          })\r\n\r\n          if (relativeToCommonUserFamily[0].status > 0) {\r\n            // 如果等于0,则还没有共同的user,无需更新,如果大于0，则要更新CommonUser\r\n            await updateCommonUserFamily(relative, relativeRelationship, relativeToCommonUserFamily[0], user, myRelationship, ctx)\r\n          }\r\n          // 像我推送“familyChanged\"\r\n          pubsub.publish(FAMILY_CHANGED, { [FAMILY_CHANGED]: { \"text\": user.id } })\r\n        }\r\n      }\r\n    }\r\n\r\n    // 第二部分：遍历relative共同成员差集\r\n    for (const relativeCommonFamily of relativeDifferentFamilies) {\r\n      const relativeCommonFamilyTo = await ctx.db.family({ id: relativeCommonFamily.id }).to()\r\n\r\n      const meRelationship = (relationshipGenderMap[relationshipTOGender[relativeCommonFamily.relationship]]\r\n      [relationIntersectionNew[relationshipGenderMap[relative.gender][relativeCommonFamily.relationship]][relativeFamily[0].relationship]]\r\n      )\r\n      // 如果是自己的话，不要增加\r\n      if (relativeCommonFamilyTo.name !== user.name) {\r\n        if (isHusbandOrWife) {\r\n          await ctx.db.createFamily({\r\n            from: { connect: { id: user.id } },\r\n            status: relativeCommonFamily.status,\r\n            to: { connect: { id: relativeCommonFamilyTo.id } },\r\n            spouse: { connect: { id: myUpdateFamily.id } },\r\n            relationship: meRelationship\r\n          })\r\n        } else {\r\n          const mySpouse = await ctx.db.family({ id: myUpdateFamily.id }).spouse()\r\n          await ctx.db.createFamily({\r\n            from: { connect: { id: user.id } },\r\n            status: relativeCommonFamily.status,\r\n            to: { connect: { id: relativeCommonFamilyTo.id } },\r\n            spouse: mySpouse ? { connect: { id: mySpouse.id } } : null,\r\n            relationship: meRelationship\r\n          })\r\n        }\r\n      }\r\n      if (relativeCommonFamily.status > \"0\") {\r\n        // 如果等于0,则还没有共同的user,无需更新,如果大于0，则要更新CommonUser\r\n        await updateCommonUserFamily(relative, relativeRelationship, relativeCommonFamily, user, myRelationship, ctx)\r\n      }\r\n      pubsub.publish(FAMILY_CHANGED, { [FAMILY_CHANGED]: { \"text\": user.id } })\r\n    }\r\n\r\n    // 第三部分：遍历me共同成员的差集\r\n    for (const myCommonFamily of myDifferentFamilies) {\r\n      const myCommonFamilyTo = await ctx.db.family({ id: myCommonFamily.id }).to()\r\n      let relRelationship = (relationshipGenderMap[relationshipTOGender[myCommonFamily.relationship]]\r\n      [relationIntersectionNew[relationshipGenderMap[user.gender][myCommonFamily.relationship]][myUpdateFamily.relationship]\r\n      ])\r\n      const myCommonFamilyToUser = await ctx.db.family({ id: myCommonFamily.id }).to().user()\r\n      if (myCommonFamilyToUser) {\r\n        if (relRelationship === \"sister\") {\r\n          if (Date.parse(myCommonFamilyToUser.birthday) > Date.parse(relative.birthday)) {\r\n            relRelationship = \"youngsister\"\r\n          } else {\r\n            relRelationship = \"oldsister\"\r\n          }\r\n        } else if (relRelationship === \"brother\") {\r\n          if (Date.parse(myCommonFamilyToUser.birthday) > Date.parse(relative.birthday)) {\r\n            relRelationship = \"youngbrother\"\r\n          } else {\r\n            relRelationship = \"oldbrother\"\r\n          }\r\n        }\r\n      }\r\n\r\n      // 如果是自己的话，不要增加\r\n      if (myCommonFamilyTo.name !== relative.name) {\r\n        // 如果relative和me是夫妻的话，则spouse直接为relativeFamily。\r\n        if (isHusbandOrWife) {\r\n          await ctx.db.createFamily({\r\n            from: { connect: { id: relative.id } },\r\n            status: myCommonFamily.status,\r\n            to: { connect: { id: myCommonFamilyTo.id } },\r\n            spouse: { connect: { id: relativeFamily[0].id } },\r\n            relationship: relRelationship\r\n          })\r\n        } else {\r\n          // 如果relative和me是不是夫妻的话，则spouse为relativeFamily的spouse,因为剩下的肯定是子女或兄弟姐妹关系，\r\n          // 兄弟姐妹的话spouse为null,子女的话spouse也是对应的spouse。\r\n          const relativeSpouse = await ctx.db.family({ id: relativeFamily[0].id }).spouse()\r\n          await ctx.db.createFamily({\r\n            from: { connect: { id: relative.id } },\r\n            status: myCommonFamily.status,\r\n            to: { connect: { id: myCommonFamilyTo.id } },\r\n            spouse: relativeSpouse ? { connect: { id: relativeSpouse.id } } : null,\r\n            relationship: relRelationship\r\n          })\r\n        }\r\n      }\r\n      if (myCommonFamily.status > \"0\") {\r\n        // 如果等于0,则还没有共同的user,无需更新,如果大于0，则要更新CommonUser\r\n        await updateCommonUserFamily(user, myRelationship, myCommonFamily, relative, relativeRelationship, ctx)\r\n      }\r\n      // 向relative推送familychanged\r\n      pubsub.publish(FAMILY_CHANGED, { [FAMILY_CHANGED]: { \"text\": relative.id } })\r\n    }\r\n    const hasFatherAndMother = await checkExistFatherAndMother(user.id, ctx)\r\n    if (hasFatherAndMother) {\r\n      await refreshMyFamilyGroups(parent, {}, ctx)\r\n    }\r\n    return myUpdateFamily\r\n  },\r\n\r\n  addLocation: async (parent, { location, locationName }, ctx) => {\r\n    // 权限验证\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    // -----------------------------------------------\r\n    // 输入数据验证\r\n    // validateBasicInfo(name, gender, birthday, birthplace)\r\n    // -----------------------------------------------\r\n    // 获取要输入的数据。 \r\n    // 获取学校地址\r\n    let place\r\n    place = await ctx.db.location({ name: locationName })\r\n    if (!place) {\r\n      if (location.village !== \"\") {\r\n        place = await ctx.db.createLocation({\r\n          name: locationName,\r\n          province: { connect: { code: location.province } },\r\n          city: { connect: { code: location.city } },\r\n          area: { connect: { code: location.area } },\r\n          street: { connect: { code: location.street } },\r\n          village: { connect: { code: location.village } },\r\n        })\r\n      } else if (location.street !== \"\") {\r\n        place = await ctx.db.createLocation({\r\n          name: locationName,\r\n          province: { connect: { code: location.province } },\r\n          city: { connect: { code: location.city } },\r\n          area: { connect: { code: location.area } },\r\n          street: { connect: { code: location.street } },\r\n        })\r\n      } else if (location.area !== \"\") {\r\n        place = await ctx.db.createLocation({\r\n          name: locationName,\r\n          province: { connect: { code: location.province } },\r\n          city: { connect: { code: location.city } },\r\n          area: { connect: { code: location.area } },\r\n        })\r\n      } else if (location.city !== \"\") {\r\n        place = await ctx.db.createLocation({\r\n          name: locationName,\r\n          province: { connect: { code: location.province } },\r\n          city: { connect: { code: location.city } },\r\n        })\r\n      } else if (location.province !== \"\") {\r\n        place = await ctx.db.createLocation({\r\n          name: locationName,\r\n          province: { connect: { code: location.province } },\r\n        })\r\n      } else {\r\n        place = await ctx.db.createLocation({\r\n          name: locationName,\r\n        })\r\n      }\r\n    }\r\n\r\n    return place\r\n  },\r\n\r\n  addSchool: async (parent, { name, kind, locationName }, ctx) => {\r\n    const schools = await ctx.db.schools(\r\n      {\r\n        where: {\r\n          AND: [\r\n            { name },\r\n            { kind },\r\n            { location: { name: locationName } }\r\n          ]\r\n        }\r\n      }\r\n    )\r\n\r\n    if (schools.length === 0) {\r\n      return ctx.db.createSchool({\r\n        name,\r\n        kind,\r\n        location: { connect: { name: locationName } }\r\n      })\r\n    }\r\n\r\n    throw new Error('学校已存在')\r\n\r\n  },\r\n\r\n  addStudy: async (parent, { year, schoolId, grade, className, majorId = \"\" }, ctx) => {\r\n    // 权限验证\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    // -----------------------------------------------\r\n    // 输入数据验证\r\n    checkNum(year)\r\n    checkId(schoolId)\r\n    checkNum(grade)\r\n    checkCnEnNum(className)\r\n    if (majorId !== \"\") {\r\n      checkId(majorId)\r\n    }\r\n    // -----------------------------------------------\r\n    // 获取要输入的数据。 \r\n    // 获取学校地址\r\n    const startTime = `${year}-9-1`\r\n    let schoolEdus\r\n    let newSchoolEdu\r\n    if (majorId === \"\") {\r\n      schoolEdus = await ctx.db.schoolEdus({\r\n        where: {\r\n          AND: [\r\n            { startTime },\r\n            { grade },\r\n            { className },\r\n            { school: { id: schoolId } },\r\n          ]\r\n        }\r\n      })\r\n\r\n      if (schoolEdus.length === 0) {\r\n        newSchoolEdu = await ctx.db.createSchoolEdu({\r\n          startTime,\r\n          grade,\r\n          className,\r\n          school: { connect: { id: schoolId } },\r\n          students: { connect: { uid: userId } }\r\n        })\r\n\r\n      } else {\r\n        newSchoolEdu = await ctx.db.updateSchoolEdu(\r\n          {\r\n            where: { id: schoolEdus[0].id },\r\n            data: { students: { connect: { uid: userId } } }\r\n          }\r\n        )\r\n      }\r\n    } else {\r\n      schoolEdus = await ctx.db.schoolEdus({\r\n        where: {\r\n          AND: [\r\n            { startTime },\r\n            { grade },\r\n            { className },\r\n            { school: { id: schoolId } },\r\n            { major: { id: majorId } }\r\n          ]\r\n        }\r\n      })\r\n\r\n      if (schoolEdus.length === 0) {\r\n        newSchoolEdu = await ctx.db.createSchoolEdu({\r\n          startTime,\r\n          grade,\r\n          className,\r\n          school: { connect: { id: schoolId } },\r\n          major: { connect: { id: majorId } },\r\n          students: { connect: { uid: userId } }\r\n        })\r\n      } else {\r\n        newSchoolEdu = await ctx.db.updateSchoolEdu(\r\n          {\r\n            where: { id: schoolEdus[0].id },\r\n            data: { students: { connect: { uid: userId } } }\r\n          }\r\n        )\r\n      }\r\n    }\r\n    // 向所有同学推送\r\n    const students = await ctx.db.schoolEdu({ id: newSchoolEdu.id }).students()\r\n    for (const student of students) {\r\n      pubsub.publish(STUDENTS_ADDED, { [STUDENTS_ADDED]: { \"text\": student.id } })\r\n    }\r\n    return newSchoolEdu\r\n  },\r\n\r\n  addOrUpdateWork: async (parent, { companyName, startTime, endTime, department, stationId, updateId }, ctx) => {\r\n    // 权限验证\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    // -----------------------------------------------\r\n    // 输入数据验证\r\n    checkDate(startTime)\r\n    checkDate(endTime)\r\n    checkCompanyName(companyName)\r\n    checkName(department)\r\n    checkId(stationId)\r\n    // -----------------------------------------------\r\n    const companies = await ctx.db.companies({ where: { name: companyName } })\r\n    let companyId\r\n    let createdWork\r\n\r\n    // 如果要是更新的话\r\n    if (updateId) {\r\n      const work = await ctx.db.work({ id: updateId })\r\n      if (work) {\r\n        const worker = await ctx.db.work({ id: updateId }).worker()\r\n        if (worker.id !== user.id) {\r\n          throw new Error('你没有权利修改')\r\n        }\r\n        if (companies.length === 0) {\r\n          throw new Error('无法修改公司名称')\r\n        }\r\n        const updateWork = await ctx.db.updateWork({\r\n          where: { id: updateId },\r\n          data: {\r\n            startTime,\r\n            endTime,\r\n            department,\r\n            post: { connect: { id: stationId } },\r\n          }\r\n        })\r\n        // 如果同事离职了，更新同事，更新组，则从workGroup中删除该成员，同时在oldColleagues中增加成员。\r\n        // 从组中将成员状态为1的成员复制到oldColleagues当中\r\n        if (new Date(endTime).getFullYear() !== 9999) {\r\n          const workGroups = await ctx.db.workGroups({\r\n            where: {\r\n              AND: [\r\n                { company: { id: companies[0].id } },\r\n                {\r\n                  colleagues_some: {\r\n                    AND: [\r\n                      { worker: { id: user.id } },\r\n                      { status: '1' }\r\n                    ]\r\n                  }\r\n                }\r\n              ]\r\n            }\r\n          })\r\n          if (workGroups.length > 0) {\r\n            const workGroupWorColleagues = await ctx.db.workGroup({\r\n              id: workGroups[0].id\r\n            }).colleagues()\r\n            for (const colleague of workGroupWorColleagues) {\r\n              const oldworker = await ctx.db.colleague({ id: colleague.id }).worker()\r\n              await ctx.db.createOldColleague({\r\n                from: { connect: { id: user.id } },\r\n                to: { connect: { id: oldworker.id } },\r\n                status: '3',\r\n                company: { connect: { id: companies[0].id } }\r\n              })\r\n\r\n              await ctx.db.createOldColleague({\r\n                from: { connect: { id: oldworker.id } },\r\n                to: { connect: { id: user.id } },\r\n                status: '3',\r\n                company: { connect: { id: companies[0].id } }\r\n              })\r\n              pubsub.publish(MYOLDCOLLEAGUES_CHANGED, { [MYOLDCOLLEAGUES_CHANGED]: { \"text\": oldworker.id } })\r\n            }\r\n          }\r\n          // 从所有的组中删除成员\r\n          const allWorkGroups = await ctx.db.workGroups({\r\n            where: {\r\n              AND: [\r\n                { company: { id: companies[0].id } },\r\n                {\r\n                  colleagues_some: {\r\n                    AND: [\r\n                      { worker: { id: user.id } },\r\n                    ]\r\n                  }\r\n                }\r\n              ]\r\n            }\r\n          })\r\n\r\n          for (const workGroup of allWorkGroups) {\r\n            const userColleagues = await ctx.db.colleagues({\r\n              where: {\r\n                AND: [\r\n                  { worker: { id: user.id } },\r\n                  { group: { id: workGroup.id } }\r\n                ]\r\n              }\r\n            })\r\n            await ctx.db.updateWorkGroup({\r\n              where: { id: workGroup.id },\r\n              data: { colleagues: { delete: { id: userColleagues[0].id } } }\r\n            })\r\n            const colleagues = await ctx.db.workGroup({ id: workGroup.id }).colleagues()\r\n            for (const colleague of colleagues) {\r\n              const publishWorker = await ctx.db.colleague({ id: colleague.id }).worker()\r\n              if (publishWorker.id !== user.id) {\r\n                pubsub.publish(WORKGROUP_CHANGED, { [WORKGROUP_CHANGED]: { \"text\": publishWorker.id } })\r\n              }\r\n            }\r\n          }\r\n        }\r\n        pubsub.publish(WORKS_CHANGED, { [WORKS_CHANGED]: { \"text\": user.id } })\r\n        return updateWork\r\n      }\r\n      throw new Error('未找到对应要更新的工作')\r\n    }\r\n    // 如果公司已经存在 \r\n    if (companies.length > 0) {\r\n      companyId = companies[0].id\r\n      createdWork = await ctx.db.createWork({\r\n        startTime,\r\n        endTime,\r\n        department,\r\n        post: { connect: { id: stationId } },\r\n        company: { connect: { id: companyId } },\r\n        worker: { connect: { uid: userId } }\r\n      })\r\n\r\n    } else {\r\n      // 如果公司不存在\r\n      createdWork = await ctx.db.createWork({\r\n        startTime,\r\n        endTime,\r\n        department,\r\n        post: { connect: { id: stationId } },\r\n        company: { create: { name: companyName } },\r\n        worker: { connect: { uid: userId } }\r\n      })\r\n      const company = await ctx.db.work({ id: createdWork.id }).company()\r\n      companyId = company.id\r\n    }\r\n\r\n    // 对于刚刚创建的工作，查找所有同时间工作的人\r\n    const works = await ctx.db.works({\r\n      where: {\r\n        AND: [\r\n          {\r\n            OR: [\r\n              { startTime_gte: (new Date(startTime)) },\r\n              { endTime_lte: (new Date(endTime)) },\r\n            ]\r\n          },\r\n          { company: { id: companyId.id } },\r\n        ]\r\n      }\r\n    })\r\n\r\n    for (const work of works) {\r\n      // 向所有的人推送通知，重新获取数据\r\n      const worker = await ctx.db.work({ id: work.id }).worker()\r\n      pubsub.publish(COLLEAGUES_ADDED, { [COLLEAGUES_ADDED]: { \"text\": worker.id } })\r\n    }\r\n\r\n    pubsub.publish(WORKS_CHANGED, { [WORKS_CHANGED]: { \"text\": user.id } })\r\n\r\n    return createdWork\r\n  },\r\n\r\n  addExamBasicInfo: async (parent, { province, section, score, specialScore, examineeCardNumber }, ctx) => {\r\n    // 权限验证\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    // -----------------------------------------------\r\n    // 输入数据验证\r\n    checkNum(province)\r\n    if (!~[\"none\", \"arts\", \"science\"].indexOf(section)) {\r\n      throw new Error('选择的文理科不正确')\r\n    }\r\n    checkScore(score)\r\n    checkScore(specialScore)\r\n    checkNum(examineeCardNumber)\r\n    const isExistcandidatenum = await ctx.db.collegeEntranceExam({\r\n      candidatenum: examineeCardNumber,\r\n    })\r\n    if (isExistcandidatenum) {\r\n      throw new Error('准考证号已被人注册，请检查准考证号是否正确，如存在被人盗用情况请联系客服。')\r\n    }\r\n    // -----------------------------------------------\r\n    return ctx.db.createCollegeEntranceExam({\r\n      province: { connect: { code: province } },\r\n      subject: section,\r\n      culscore: parseFloat(score),\r\n      proscore: parseFloat(specialScore),\r\n      candidatenum: examineeCardNumber,\r\n      times: 1,\r\n      student: { connect: { uid: userId } }\r\n    })\r\n  },\r\n\r\n  updateExamBasicInfo: async (parent, { province, section, score, specialScore, examineeCardNumber }, ctx) => {\r\n    // 权限验证\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    // -----------------------------------------------\r\n    // 输入数据验证\r\n    checkNum(province)\r\n    if (!~[\"none\", \"arts\", \"science\"].indexOf(section)) {\r\n      throw new Error('选择的文理科不正确')\r\n    }\r\n    checkScore(score)\r\n    checkScore(specialScore)\r\n    checkNum(examineeCardNumber)\r\n    // -----------------------------------------------\r\n    const oldExamBasicInfo = await ctx.db.collegeEntranceExams({\r\n      where: { student: { uid: userId } }\r\n    })\r\n    if (oldExamBasicInfo.length === 0) {\r\n      throw new Error('尚未创建高考信息')\r\n    }\r\n    if (oldExamBasicInfo[0].times >= 3) {\r\n      throw new Error('你修改的次数已达到上限')\r\n    }\r\n\r\n    return ctx.db.updateCollegeEntranceExam({\r\n      where: { id: oldExamBasicInfo[0].id },\r\n      data: {\r\n        province: { connect: { code: province } },\r\n        subject: section,\r\n        culscore: parseFloat(score),\r\n        proscore: parseFloat(specialScore),\r\n        candidatenum: examineeCardNumber,\r\n        times: oldExamBasicInfo[0].times + 1,\r\n      }\r\n    })\r\n  },\r\n\r\n  addRegStatus: async (parent, { education, universityId, majorId }, ctx) => {\r\n    // 权限验证\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    // -----------------------------------------------\r\n    // 输入数据验证\r\n    if (!~(['Undergraduate', 'JuniorCollege'].indexOf(education))) {\r\n      throw new Error('请选择本科或者专科')\r\n    }\r\n    checkId(universityId)\r\n    checkId(majorId)\r\n\r\n    // -----------------------------------------------\r\n    // 检查该用户是否已经注册\r\n    const userRegStatus = await ctx.db.user({\r\n      uid: userId\r\n    }).regStatus()\r\n    if (userRegStatus && userRegStatus.id) {\r\n      throw new Error('只能进行一次报名，如需重新报名，请先退出当前报名')\r\n    }\r\n\r\n\r\n    // 检查是否已经存在相关学校和专业的注册记录\r\n    const regStatuses = await ctx.db.regStatuses({\r\n      where: {\r\n        education,\r\n        university: { id: universityId },\r\n        major: { id: majorId }\r\n      }\r\n    })\r\n\r\n    // 如果存在\r\n    let userReg\r\n    if (regStatuses.length > 0) {\r\n      userReg = await ctx.db.updateRegStatus({\r\n        where: { id: regStatuses[0].id },\r\n        data: {\r\n          applicants: { connect: { uid: userId } }\r\n        }\r\n      })\r\n    } else {\r\n      userReg = await ctx.db.createRegStatus({\r\n        education,\r\n        university: { connect: { id: universityId } },\r\n        major: { connect: { id: majorId } },\r\n        applicants: { connect: { uid: userId } }\r\n      })\r\n    }\r\n\r\n    if (fee) {\r\n      if (user.regTimes >= user.maxRegTimes) {\r\n        throw new Error('你的报名次数已用完,请充值后再继续报名')\r\n      }\r\n      await ctx.db.updateUser({\r\n        where: { uid: userId },\r\n        data: { regTimes: user.regTimes + 1 }\r\n      })\r\n    }\r\n\r\n    return userReg\r\n  },\r\n  cancelRegStatus: async (parent, { id }, ctx) => {\r\n    // 权限验证\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    // -----------------------------------------------\r\n    // 输入数据验证\r\n    checkId(id)\r\n\r\n    // -----------------------------------------------\r\n    return ctx.db.updateRegStatus({\r\n      where: { id },\r\n      data: { applicants: { disconnect: { uid: userId } } }\r\n    })\r\n  },\r\n\r\n  \r\n  addClassGroup: async (parent, { name, schoolEduId, studentId }, ctx) => {\r\n    // 权限验证\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    // -----------------------------------------------\r\n    // 输入数据验证\r\n\r\n    // 检查studentId是否已经有组,如果有组则把请求者加入得到已有的组中\r\n    const classGroups = await ctx.db.classGroups({\r\n      where: {\r\n        AND: [\r\n          { study: { id: schoolEduId } },\r\n          {\r\n            members_some: {\r\n              AND: [\r\n                { student: { id: studentId } },\r\n                { status: '1' }\r\n              ]\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    })\r\n\r\n    if (classGroups.length > 0) {\r\n      // 检查我是否已经在组里了，如果在了，不能重复添加\r\n      const studentClassMates = await ctx.db.classMates({\r\n        where: {\r\n          AND: [\r\n            { student: { id: user.id } },\r\n            { group: { id: classGroups[0].id } }\r\n          ]\r\n        }\r\n      })\r\n      if (studentClassMates.length > 0) {\r\n        throw new Error('你已经提起过申请，无法重复提请')\r\n      }\r\n      const updated = await ctx.db.updateClassGroup({\r\n        where: { id: classGroups[0].id },\r\n        data: { members: { create: { status: '0', student: { connect: { id: user.id } } } } }\r\n      })\r\n      const members = await ctx.db.classGroup({ id: updated.id }).members()\r\n      for (const member of members) {\r\n        const student = await ctx.db.classMate({ id: member.id }).student()\r\n        if (student.id !== user.id) {\r\n          pubsub.publish(CLASSGROUP_CHANGED, { [CLASSGROUP_CHANGED]: { \"text\": student.id } })\r\n        }\r\n      }\r\n\r\n      return updated\r\n    }\r\n    // 如果studentId没有组，则studentId新建一个组，并且把user加入到组中\r\n    // -----------------------------------------------\r\n    const created = await ctx.db.createClassGroup({\r\n      name,\r\n      study: { connect: { id: schoolEduId } },\r\n      members: {\r\n        create: [\r\n          { status: \"1\", student: { connect: { id: studentId } } },\r\n          { status: \"0\", student: { connect: { id: user.id } } },\r\n        ]\r\n      }\r\n    })\r\n    pubsub.publish(CLASSGROUP_CHANGED, { [CLASSGROUP_CHANGED]: { \"text\": studentId } })\r\n    return created\r\n\r\n  },\r\n  confirmClassGroup: async (parent, { schoolEduId, studentId }, ctx) => {\r\n    // 权限验证\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    // -----------------------------------------------\r\n    // 输入数据验证\r\n\r\n    // 检查studentId是否已经有组,如果有组则把请求者加入得到已有的组中\r\n    const studentClassGroups = await ctx.db.classGroups({\r\n      where: {\r\n        AND: [\r\n          { study: { id: schoolEduId } },\r\n          {\r\n            members_some: {\r\n              AND: [\r\n                { student: { id: studentId } },\r\n                { status: '1' }\r\n              ]\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    })\r\n    const myClassGroups = await ctx.db.classGroups({\r\n      where: {\r\n        AND: [\r\n          { study: { id: schoolEduId } },\r\n          {\r\n            members_some: {\r\n              AND: [\r\n                { student: { id: user.id } },\r\n                { status: '1' }\r\n              ]\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    })\r\n    // 检查student是否是我的组成员\r\n    const InMyGroupstudents = await ctx.db.classGroup(\r\n      { id: myClassGroups[0].id }\r\n    ).members({ where: { student: { id: studentId } } })\r\n    if (InMyGroupstudents.length === 0) {\r\n      throw new Error('搞错了，你还不在这个组里')\r\n    }\r\n    const myClassGroupMembers = await ctx.db.classGroup(\r\n      { id: myClassGroups[0].id }\r\n    ).members()\r\n\r\n    // 如果student也有组,且和我不是一个组，则合并我和stuent的组。\r\n    if (studentClassGroups.length > 0 && studentClassGroups[0].id !== myClassGroups[0].id) {\r\n      const studentClassGroupsMembers = await ctx.db.classGroup({\r\n        id: studentClassGroups[0].id\r\n      }).members()\r\n      // 合并到成员多的组中\r\n      if (studentClassGroupsMembers.length >= myClassGroupMembers.length) {\r\n        for (const member of myClassGroupMembers) {\r\n          // 检查member是否已经在studentClassGroup中\r\n          const memeberStudent = await ctx.db.classMate({\r\n            id: member.id\r\n          }).student()\r\n          const inStudentClassGroupStudents = await ctx.db.classMates({\r\n            where: {\r\n              AND: [\r\n                { student: { id: memeberStudent.id } },\r\n                { group: { id: studentClassGroups[0].id } }\r\n              ]\r\n            }\r\n          })\r\n          if (inStudentClassGroupStudents.length > 0) {\r\n            if (member.status !== inStudentClassGroupStudents[0].status) {\r\n              await ctx.db.updateClassMate({\r\n                where: { id: inStudentClassGroupStudents[0].id },\r\n                data: {\r\n                  status: '1',\r\n                  group: { connect: { id: studentClassGroups[0].id } }\r\n                }\r\n              })\r\n            }\r\n            await ctx.db.deleteClassMate({\r\n              id: member.id\r\n            })\r\n          } else {\r\n            await ctx.db.updateClassMate({\r\n              where: { id: member.id },\r\n              data: { group: { connect: { id: studentClassGroups[0].id } } }\r\n            })\r\n          }\r\n\r\n        }\r\n        // 删除成员少的组\r\n        await ctx.db.deleteClassGroup({\r\n          id: myClassGroups[0].id\r\n        })\r\n\r\n        const members = await ctx.db.classGroup({ id: studentClassGroups[0].id }).members()\r\n        for (const member of members) {\r\n          const student = await ctx.db.classMate({ id: member.id }).student()\r\n          pubsub.publish(CLASSGROUP_CHANGED, { [CLASSGROUP_CHANGED]: { \"text\": student.id } })\r\n        }\r\n\r\n        return studentClassGroups[0]\r\n      }\r\n      for (const member of studentClassGroupsMembers) {\r\n        // 检查member是否已经在MyClassGroup中\r\n        const memeberStudent = await ctx.db.classMate({\r\n          id: member.id\r\n        }).student()\r\n        const inMyClassGroupStudents = await ctx.db.classMates({\r\n          where: {\r\n            AND: [\r\n              { student: { id: memeberStudent.id } },\r\n              { group: { id: myClassGroups[0].id } }\r\n            ]\r\n          }\r\n        })\r\n        if (inMyClassGroupStudents.length > 0) {\r\n          if (member.status !== inMyClassGroupStudents[0].status) {\r\n            await ctx.db.updateClassMate({\r\n              where: { id: inMyClassGroupStudents[0].id },\r\n              data: {\r\n                status: '1',\r\n                group: { connect: { id: myClassGroups[0].id } }\r\n              }\r\n            })\r\n          }\r\n          await ctx.db.deleteClassMate({\r\n            id: member.id\r\n          })\r\n        } else {\r\n          await ctx.db.updateClassMate({\r\n            where: { id: member.id },\r\n            data: { group: { connect: { id: myClassGroups[0].id } } }\r\n          })\r\n        }\r\n      }\r\n\r\n      // 删除成员少的组\r\n      await ctx.db.deleteClassGroup({\r\n        id: studentClassGroups[0].id\r\n      })\r\n\r\n      const members = await ctx.db.classGroup({ id: myClassGroups[0].id }).members()\r\n      for (const member of members) {\r\n        const student = await ctx.db.classMate({ id: member.id }).student()\r\n        pubsub.publish(CLASSGROUP_CHANGED, { [CLASSGROUP_CHANGED]: { \"text\": student.id } })\r\n      }\r\n      return myClassGroups[0]\r\n    }\r\n    // 如果student还没有组，则直接合并到我的组中，并更新状态\r\n    const studentClassMates = await ctx.db.classMates({\r\n      where: {\r\n        AND: [\r\n          { student: { id: studentId } },\r\n          { group: { id: myClassGroups[0].id } }\r\n        ]\r\n      }\r\n    })\r\n    await ctx.db.updateClassMate({\r\n      where: { id: studentClassMates[0].id },\r\n      data: { status: '1' }\r\n    })\r\n    const members = await ctx.db.classGroup({ id: myClassGroups[0].id }).members()\r\n    for (const member of members) {\r\n      const student = await ctx.db.classMate({ id: member.id }).student()\r\n      pubsub.publish(CLASSGROUP_CHANGED, { [CLASSGROUP_CHANGED]: { \"text\": student.id } })\r\n    }\r\n    return myClassGroups[0]\r\n  },\r\n\r\n  addWorkGroup: async (parent, { companyId, workerId }, ctx) => {\r\n    // 权限验证\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    // -----------------------------------------------\r\n    // 输入数据验证\r\n\r\n    // 检查wokerId是否已经有组,如果有组则把请求者加入得到已有的组中\r\n    const workGroups = await ctx.db.workGroups({\r\n      where: {\r\n        AND: [\r\n          { company: { id: companyId } },\r\n          {\r\n            colleagues_some: {\r\n              AND: [\r\n                { worker: { id: workerId } },\r\n                { status: '1' }\r\n              ]\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    })\r\n\r\n    if (workGroups.length > 0) {\r\n      // 检查我是否已经在组里了，如果在了，不能重复添加\r\n      const meColleagues = await ctx.db.colleagues({\r\n        where: {\r\n          AND: [\r\n            { worker: { id: user.id } },\r\n            { group: { id: workGroups[0].id } }\r\n          ]\r\n        }\r\n      })\r\n      if (meColleagues.length > 0) {\r\n        throw new Error('你已经提起过申请，无法重复提请')\r\n      }\r\n      // 如果我没有在组里，则更新group,将我添加进去\r\n      const updated = await ctx.db.updateWorkGroup({\r\n        where: { id: workGroups[0].id },\r\n        data: { colleagues: { create: { status: '0', worker: { connect: { id: user.id } } } } }\r\n      })\r\n      const colleagues = await ctx.db.workGroup({ id: updated.id }).colleagues()\r\n      for (const colleague of colleagues) {\r\n        const worker = await ctx.db.colleague({ id: colleague.id }).worker()\r\n        if (worker.id !== user.id) {\r\n          pubsub.publish(WORKGROUP_CHANGED, { [WORKGROUP_CHANGED]: { \"text\": worker.id } })\r\n        }\r\n      }\r\n\r\n      return updated\r\n    }\r\n    // 如果workId没有组，则workId新建一个组，并且把user加入到组中\r\n    // -----------------------------------------------\r\n    const created = await ctx.db.createWorkGroup({\r\n      company: { connect: { id: companyId } },\r\n      colleagues: {\r\n        create: [\r\n          { status: \"1\", worker: { connect: { id: workerId } } },\r\n          { status: \"0\", worker: { connect: { id: user.id } } },\r\n        ]\r\n      }\r\n    })\r\n    pubsub.publish(WORKGROUP_CHANGED, { [WORKGROUP_CHANGED]: { \"text\": workerId } })\r\n    return created\r\n  },\r\n  confirmWorkGroup: async (parent, { companyId, workerId }, ctx) => {\r\n    // 权限验证\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    // -----------------------------------------------\r\n    // 输入数据验证\r\n\r\n    // 检查workerId是否已经有组,如果有组则把请求者加入得到已有的组中\r\n    const workerGroups = await ctx.db.workGroups({\r\n      where: {\r\n        AND: [\r\n          { company: { id: companyId } },\r\n          {\r\n            colleagues_some: {\r\n              AND: [\r\n                { worker: { id: workerId } },\r\n                { status: '1' }\r\n              ]\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    })\r\n    const myWorkGroups = await ctx.db.workGroups({\r\n      where: {\r\n        AND: [\r\n          { company: { id: companyId } },\r\n          {\r\n            colleagues_some: {\r\n              AND: [\r\n                { worker: { id: user.id } },\r\n                { status: '1' }\r\n              ]\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    })\r\n    // 检查worker是否是我的组成员\r\n    const InMyGroupWorkers = await ctx.db.workGroup(\r\n      { id: myWorkGroups[0].id }\r\n    ).colleagues({ where: { worker: { id: workerId } } })\r\n    if (InMyGroupWorkers.length === 0) {\r\n      throw new Error('搞错了，你还不在这个组里')\r\n    }\r\n    const myWorkGroupColleagues = await ctx.db.workGroup(\r\n      { id: myWorkGroups[0].id }\r\n    ).colleagues()\r\n\r\n    // 如果worker也有组,且和我不是一个组，则合并我和stuent的组。\r\n    if (workerGroups.length > 0 && workerGroups[0].id !== myWorkGroups[0].id) {\r\n      const workerGroupsColleagues = await ctx.db.workGroup({\r\n        id: workerGroups[0].id\r\n      }).colleagues()\r\n      // 合并到成员多的组中\r\n      if (workerGroupsColleagues.length >= myWorkGroupColleagues.length) {\r\n        for (const colleague of myWorkGroupColleagues) {\r\n          // 检查colleague是否已经在wokerGroup中\r\n          const colleagueWorker = await ctx.db.colleague({\r\n            id: colleague.id\r\n          }).worker()\r\n          const inWorkerGroupColleagues = await ctx.db.colleagues({\r\n            where: {\r\n              AND: [\r\n                { worker: { id: colleagueWorker.id } },\r\n                { group: { id: workerGroups[0].id } }\r\n              ]\r\n            }\r\n          })\r\n          if (inWorkerGroupColleagues.length > 0) {\r\n            if (colleague.status !== inWorkerGroupColleagues[0].status) {\r\n              await ctx.db.updateColleague({\r\n                where: { id: inWorkerGroupColleagues[0].id },\r\n                data: {\r\n                  status: '1',\r\n                  group: { connect: { id: workerGroups[0].id } }\r\n                }\r\n              })\r\n            }\r\n            await ctx.db.deleteColleague({\r\n              id: colleague.id\r\n            })\r\n          } else {\r\n            await ctx.db.updateColleague({\r\n              where: { id: colleague.id },\r\n              data: { group: { connect: { id: workerGroups[0].id } } }\r\n            })\r\n          }\r\n\r\n        }\r\n        // 删除成员少的组\r\n        await ctx.db.deleteWorkGroup({\r\n          id: myWorkGroups[0].id\r\n        })\r\n\r\n        const colleagues = await ctx.db.workGroup({ id: workerGroups[0].id }).colleagues()\r\n        for (const colleague of colleagues) {\r\n          const worker = await ctx.db.colleague({ id: colleague.id }).worker()\r\n          pubsub.publish(WORKGROUP_CHANGED, { [WORKGROUP_CHANGED]: { \"text\": worker.id } })\r\n        }\r\n\r\n        return workerGroups[0]\r\n      }\r\n      for (const colleague of workerGroupsColleagues) {\r\n        // 检查colleague是否已经在MyWorkGroup中\r\n        const colleagueWorker = await ctx.db.colleague({\r\n          id: colleague.id\r\n        }).worker()\r\n        const inMyWorkGroupColleagues = await ctx.db.colleagues({\r\n          where: {\r\n            AND: [\r\n              { worker: { id: colleagueWorker.id } },\r\n              { group: { id: myWorkGroups[0].id } }\r\n            ]\r\n          }\r\n        })\r\n        if (inMyWorkGroupColleagues.length > 0) {\r\n          if (colleague.status !== inMyWorkGroupColleagues[0].status) {\r\n            await ctx.db.updateColleague({\r\n              where: { id: inMyWorkGroupColleagues[0].id },\r\n              data: {\r\n                status: '1',\r\n                group: { connect: { id: myWorkGroups[0].id } }\r\n              }\r\n            })\r\n          }\r\n          await ctx.db.deleteColleague({\r\n            id: colleague.id\r\n          })\r\n        } else {\r\n          await ctx.db.updateColleague({\r\n            where: { id: colleague.id },\r\n            data: { group: { connect: { id: myWorkGroups[0].id } } }\r\n          })\r\n        }\r\n      }\r\n\r\n      // 删除成员少的组\r\n      await ctx.db.deleteWorkGroup({\r\n        id: workerGroups[0].id\r\n      })\r\n\r\n      const colleagues = await ctx.db.workGroup({ id: myWorkGroups[0].id }).colleagues()\r\n      for (const colleague of colleagues) {\r\n        const worker = await ctx.db.colleague({ id: colleague.id }).worker()\r\n        pubsub.publish(WORKGROUP_CHANGED, { [WORKGROUP_CHANGED]: { \"text\": worker.id } })\r\n      }\r\n      return myWorkGroups[0]\r\n    }\r\n    // 如果worker还没有组，则直接合并到我的组中，并更新状态\r\n    const workerColleauges = await ctx.db.colleagues({\r\n      where: {\r\n        AND: [\r\n          { worker: { id: workerId } },\r\n          { group: { id: myWorkGroups[0].id } }\r\n        ]\r\n      }\r\n    })\r\n    await ctx.db.updateColleague({\r\n      where: { id: workerColleauges[0].id },\r\n      data: { status: '1' }\r\n    })\r\n    const colleagues = await ctx.db.workGroup({ id: myWorkGroups[0].id }).colleagues()\r\n    for (const colleague of colleagues) {\r\n      const worker = await ctx.db.colleague({ id: colleague.id }).worker()\r\n      pubsub.publish(WORKGROUP_CHANGED, { [WORKGROUP_CHANGED]: { \"text\": worker.id } })\r\n    }\r\n    return myWorkGroups[0]\r\n  },\r\n\r\n  addOldColleague: async (parent, { companyId, workerId }, ctx) => {\r\n    // 权限验证\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    // -----------------------------------------------\r\n    // 输入数据验证\r\n    checkId(companyId)\r\n    checkId(workerId)\r\n\r\n    const myOldColleague = await ctx.db.createOldColleague({\r\n      from: { connect: { id: user.id } },\r\n      to: { connect: { id: workerId } },\r\n      status: '1',\r\n      company: { connect: { id: companyId } }\r\n    })\r\n\r\n    await ctx.db.createOldColleague({\r\n      from: { connect: { id: workerId } },\r\n      to: { connect: { id: user.id } },\r\n      status: '2',\r\n      company: { connect: { id: companyId } }\r\n    })\r\n    pubsub.publish(MYOLDCOLLEAGUES_CHANGED, { [MYOLDCOLLEAGUES_CHANGED]: { \"text\": workerId } })\r\n\r\n    return myOldColleague\r\n  },\r\n\r\n  confirmOldColleague: async (parent, { companyId, workerId }, ctx) => {\r\n    // 权限验证\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    // -----------------------------------------------\r\n    // 输入数据验证\r\n    checkId(companyId)\r\n    checkId(workerId)\r\n    // -----------------------------------------------\r\n    const myOldColleagues = await ctx.db.oldColleagues({\r\n      where: {\r\n        AND: [\r\n          { from: { id: user.id } },\r\n          { to: { id: workerId } },\r\n          { company: { id: companyId } },\r\n        ]\r\n      }\r\n    })\r\n\r\n    const oldColleagueTomes = await ctx.db.oldColleagues({\r\n      where: {\r\n        AND: [\r\n          { from: { id: workerId } },\r\n          { to: { id: user.id } },\r\n          { company: { id: companyId } },\r\n        ]\r\n      }\r\n    })\r\n\r\n    if (oldColleagueTomes.length > 0) {\r\n      await ctx.db.updateOldColleague({\r\n        where: { id: oldColleagueTomes[0].id },\r\n        data: { status: '3' },\r\n      })\r\n      pubsub.publish(MYOLDCOLLEAGUES_CHANGED, { [MYOLDCOLLEAGUES_CHANGED]: { \"text\": workerId } })\r\n    }\r\n\r\n    if (myOldColleagues.length > 0) {\r\n      const updatemyOldColleague = await ctx.db.updateOldColleague({\r\n        where: { id: myOldColleagues[0].id },\r\n        data: { status: '3' },\r\n      })\r\n      return updatemyOldColleague\r\n    }\r\n\r\n    throw new Error('无法更改同事信息')\r\n  },\r\n  postPhoto: async (parent, { uri }, ctx) => {\r\n    // 添加头像\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const ext = getFileExt(uri)\r\n    const name = getFileName(ext)\r\n    const typesMap = { 'jpg': 'jpeg', 'png': 'png', 'gif': 'gif', 'jpeg': 'jpeg', 'bmp': 'bmp' }\r\n    const options = { expires: 1800, method: 'PUT', 'Content-Type': `image/${typesMap[ext]}` }\r\n    const url = ossClient.signatureUrl(`avatars/${name}`, options);\r\n    const avatar = await ctx.db.user({ uid: userId }).avatar()\r\n    let newPhoto\r\n    if (avatar && avatar.id) {\r\n      newPhoto = await ctx.db.updatePhoto({\r\n        where: { id: avatar.id },\r\n        data: {\r\n          name,\r\n          url: `https://gewu-avatar.oss-cn-hangzhou.aliyuncs.com/avatars/${name}`,\r\n        }\r\n      })\r\n    } else {\r\n      newPhoto = await ctx.db.createPhoto({\r\n        name,\r\n        url: `https://gewu-avatar.oss-cn-hangzhou.aliyuncs.com/avatars/${name}`,\r\n        user: { connect: { uid: userId } }\r\n      })\r\n    }\r\n    return { id: newPhoto.id, name, url }\r\n  },\r\n\r\n  sendMessage: async (parent, { toId, text = \"\", image = \"\" }, ctx) => {\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const userAvatar = await ctx.db.user({ uid: userId }).avatar()\r\n\r\n    if (!text && !image) {\r\n      throw new Error('没有发送信息')\r\n    }\r\n\r\n    const toUser = await ctx.db.user({ id: toId })\r\n    const toUserAvatar = await ctx.db.user({ id: toId }).avatar()\r\n    // 更新好友，可以添加评论\r\n    await ctx.db.updateUser({\r\n      where: { id: toId },\r\n      data: { friends: { connect: { id: user.id } } }\r\n    })\r\n\r\n    if (image) {\r\n      const ext = getFileExt(image)\r\n      const name = getFileName(ext)\r\n      const typesMap = { 'jpg': 'jpeg', 'png': 'png', 'gif': 'gif', 'jpeg': 'jpeg', 'bmp': 'bmp' }\r\n      const options = { expires: 1800, method: 'PUT', 'Content-Type': `image/${typesMap[ext]}` }\r\n      const writeUrl = ossClient.signatureUrl(`images/${name}`, options);\r\n      const readUrl = `https://gewu-avatar.oss-cn-hangzhou.aliyuncs.com/images/${name}`\r\n\r\n      const message = await ctx.db.createMessage({\r\n        from: { connect: { id: user.id } },\r\n        to: { connect: { id: toId } },\r\n        text,\r\n        image: {\r\n          create: {\r\n            name,\r\n            url: readUrl\r\n          }\r\n        }\r\n      })\r\n\r\n\r\n      const messageImage = await ctx.db.message({ id: message.id }).image()\r\n      // imageurl返回给上传图片的人，用于上传图片，由于这里要修改image，所以这里使用手动解析。\r\n      const returnMessage = {\r\n        id: message.id,\r\n        to: {\r\n          id: toUser.id,\r\n          name: toUser.name,\r\n          avatar: toUserAvatar,\r\n        },\r\n        from: {\r\n          id: user.id,\r\n          name: user.name,\r\n          avatar: userAvatar\r\n        },\r\n        text,\r\n        image: {\r\n          ...messageImage,\r\n          url: writeUrl\r\n        },\r\n        createdAt: message.createdAt\r\n      }\r\n      // 返回给订阅者，由于subscription无法解析Message，因此这里手动解析。\r\n      const pubMessage = {\r\n        __typename: \"Message\",\r\n        id: message.id,\r\n        to: {\r\n          __typename: \"User\",\r\n          id: toUser.id,\r\n          name: toUser.name,\r\n          avatar: toUserAvatar,\r\n        },\r\n        from: {\r\n          __typename: \"User\",\r\n          id: user.id,\r\n          name: user.name,\r\n          avatar: userAvatar\r\n        },\r\n        text,\r\n        image: {\r\n          __typename: \"Photo\",\r\n          id: messageImage.id,\r\n          name: messageImage.name,\r\n          url: messageImage.url\r\n        },\r\n        createdAt: message.createdAt\r\n      }\r\n\r\n      pubsub.publish(MESSAGE_ADDED_TOPIC, { [MESSAGE_ADDED_TOPIC]: pubMessage })\r\n      return returnMessage\r\n    }\r\n    // 如果没有上传图片，则直接创建\r\n    const message = await ctx.db.createMessage({\r\n      from: { connect: { id: user.id } },\r\n      to: { connect: { id: toId } },\r\n      text,\r\n    })\r\n    // 手动解析订阅信息\r\n    const pubMessage = {\r\n      __typename: \"Messgae\",\r\n      id: message.id,\r\n      to: {\r\n        __typename: \"User\",\r\n        id: toUser.id,\r\n        name: toUser.name,\r\n        avatar: toUserAvatar,\r\n      },\r\n      from: {\r\n        __typename: \"User\",\r\n        id: user.id,\r\n        name: user.name,\r\n        avatar: userAvatar\r\n      },\r\n      text,\r\n      image: null,\r\n      createdAt: message.createdAt\r\n    }\r\n\r\n    const returnMessage = {\r\n      id: message.id,\r\n      to: {\r\n        id: toUser.id,\r\n        name: toUser.name,\r\n        avatar: toUserAvatar,\r\n      },\r\n      from: {\r\n        id: user.id,\r\n        name: user.name,\r\n        avatar: userAvatar\r\n      },\r\n      text,\r\n      image: null,\r\n      createdAt: message.createdAt\r\n    }\r\n    pubsub.publish(MESSAGE_ADDED_TOPIC, { [MESSAGE_ADDED_TOPIC]: pubMessage })\r\n    return returnMessage\r\n  },\r\n\r\n  sendGroupMessage: async (parent, { type, toId, text = \"\", image = \"\" }, ctx) => {\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n\r\n    // ----------------------\r\n    checkId(toId)\r\n    const types = [\"Family\", \"ClassMate\", \"Colleague\", \"FellowTownsman\", \"RegStatus\"]\r\n    if (!~types.indexOf(type)) {\r\n      throw new Error('没有该组类型')\r\n    }\r\n    // ----------------------\r\n\r\n\r\n    const userAvatar = await ctx.db.user({ uid: userId }).avatar()\r\n\r\n    if (!text && !image) {\r\n      throw new Error('没有发送信息')\r\n    }\r\n    let toGroup\r\n    if (type === \"Family\") {\r\n      toGroup = await ctx.db.familyGroup({ id: toId })\r\n    } else if (type === \"ClassMate\") {\r\n      toGroup = await ctx.db.classGroup({ id: toId })\r\n    } else if (type === \"Colleague\") {\r\n      toGroup = await ctx.db.workGroup({ id: toId })\r\n    } else if (type === \"FellowTownsman\") {\r\n      toGroup = await ctx.db.locationGroup({ id: toId })\r\n    } else if (type === \"RegStatus\") {\r\n      toGroup = await ctx.db.regStatus({ id: toId })\r\n    }\r\n    if (!toGroup) {\r\n      throw new Error('没有找到对应的组')\r\n    }\r\n\r\n    if (image) {\r\n      const ext = getFileExt(image)\r\n      const name = getFileName(ext)\r\n      const typesMap = { 'jpg': 'jpeg', 'png': 'png', 'gif': 'gif', 'jpeg': 'jpeg', 'bmp': 'bmp' }\r\n      const options = { expires: 1800, method: 'PUT', 'Content-Type': `image/${typesMap[ext]}` }\r\n      const writeUrl = ossClient.signatureUrl(`images/${name}`, options);\r\n      const readUrl = `https://gewu-avatar.oss-cn-hangzhou.aliyuncs.com/images/${name}`\r\n\r\n      const message = await ctx.db.createGroupMessage({\r\n        from: { connect: { id: user.id } },\r\n        type,\r\n        to: toId,\r\n        text,\r\n        image: {\r\n          create: {\r\n            name,\r\n            url: readUrl\r\n          }\r\n        }\r\n      })\r\n\r\n\r\n      const messageImage = await ctx.db.groupMessage({ id: message.id }).image()\r\n      // imageurl返回给上传图片的人，用于上传图片，由于这里要修改image，所以这里使用手动解析。\r\n      const returnMessage = {\r\n        id: message.id,\r\n        type,\r\n        to: toId,\r\n        from: {\r\n          id: user.id,\r\n          name: user.name,\r\n          avatar: userAvatar\r\n        },\r\n        text,\r\n        image: {\r\n          ...messageImage,\r\n          url: writeUrl\r\n        },\r\n        createdAt: message.createdAt\r\n      }\r\n      // 返回给订阅者，由于subscription无法解析Message，因此这里手动解析。\r\n      const pubMessage = {\r\n        __typename: \"GroupMessage\",\r\n        id: message.id,\r\n        type,\r\n        to: toId,\r\n        from: {\r\n          __typename: \"User\",\r\n          id: user.id,\r\n          name: user.name,\r\n          avatar: userAvatar\r\n        },\r\n        text,\r\n        image: {\r\n          __typename: \"Photo\",\r\n          id: messageImage.id,\r\n          name: messageImage.name,\r\n          url: messageImage.url\r\n        },\r\n        createdAt: message.createdAt\r\n      }\r\n\r\n      pubsub.publish(GMESSAGE_ADDED_TOPIC, { [GMESSAGE_ADDED_TOPIC]: pubMessage })\r\n\r\n      return returnMessage\r\n    }\r\n    // 如果没有上传图片，则直接创建\r\n    const message = await ctx.db.createGroupMessage({\r\n      from: { connect: { id: user.id } },\r\n      to: toId,\r\n      type,\r\n      text,\r\n    })\r\n    // 手动解析订阅信息\r\n    const pubMessage = {\r\n      __typename: \"GroupMessgae\",\r\n      id: message.id,\r\n      type,\r\n      to: toId,\r\n      from: {\r\n        __typename: \"User\",\r\n        id: user.id,\r\n        name: user.name,\r\n        avatar: userAvatar\r\n      },\r\n      text,\r\n      image: null,\r\n      createdAt: message.createdAt\r\n    }\r\n\r\n    const returnMessage = {\r\n      id: message.id,\r\n      type,\r\n      to: toId,\r\n      from: {\r\n        id: user.id,\r\n        name: user.name,\r\n        avatar: userAvatar\r\n      },\r\n      text,\r\n      image: null,\r\n      createdAt: message.createdAt\r\n    }\r\n\r\n    pubsub.publish(GMESSAGE_ADDED_TOPIC, { [GMESSAGE_ADDED_TOPIC]: pubMessage })\r\n    pubsub.publish(MESSAGE_ADDED_TOPIC, { [MESSAGE_ADDED_TOPIC]: pubMessage })\r\n    return returnMessage\r\n  },\r\n\r\n  addAdvertisement: async (parent, { url, startTime }, ctx) => {\r\n    // 添加头像\r\n    const userId = getUserId(ctx)\r\n    if (!userId) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n    const user = await ctx.db.user({ uid: userId })\r\n    if (!user) {\r\n      throw new Error(\"用户不存在\")\r\n    }\r\n\r\n    const sTime = new Date(startTime)\r\n\r\n    const advertisements = await ctx.db.advertisements({\r\n      where: {\r\n        startTime:sTime,\r\n      }\r\n    })\r\n\r\n    let newAdvertisement\r\n    if (advertisements.length > 0) {\r\n      if (!advertisements[0].image1) {\r\n        newAdvertisement = await ctx.db.updateAdvertisement({\r\n          where: { id: advertisements[0].id },\r\n          data: { image1: url }\r\n        })\r\n      } else if (!advertisements[0].image2) {\r\n        newAdvertisement = await ctx.db.updateAdvertisement({\r\n          where: { id: advertisements[0].id },\r\n          data: { image2: url }\r\n        })\r\n      } else if (!advertisements[0].image3) {\r\n        newAdvertisement = await ctx.db.updateAdvertisement({\r\n          where: { id: advertisements[0].id },\r\n          data: { image3: url }\r\n        })\r\n      } else if (!advertisements[0].image4) {\r\n        newAdvertisement = await ctx.db.updateAdvertisement({\r\n          where: { id: advertisements[0].id },\r\n          data: { image4: url }\r\n        })\r\n      } else if (!advertisements[0].image5) {\r\n        newAdvertisement = await ctx.db.updateAdvertisement({\r\n          where: { id: advertisements[0].id },\r\n          data: { image5: url }\r\n        })\r\n      } else {\r\n        throw new Error('没有剩余广告位')\r\n      }\r\n    }else{\r\n      newAdvertisement = await ctx.db.createAdvertisement({\r\n        image1:url,\r\n        startTime:sTime,\r\n        endTime:new Date(sTime.getTime() + 30*60*1000)\r\n      })\r\n    }\r\n\r\n    return newAdvertisement\r\n  },\r\n\r\n  createDraft: async (parent, { title, content, authorEmail }, ctx) => ctx.db.createPost({\r\n    title,\r\n    content,\r\n    author: { connect: { email: authorEmail } },\r\n  }),\r\n\r\n  deletePost: async (parent, { id }, ctx) => {\r\n    const userId = getUserId(ctx)\r\n    const author = await ctx.db\r\n      .post({ id })\r\n      .author()\r\n      .$fragment('{ id }')\r\n    const authorId = author.id\r\n    if (userId !== authorId) {\r\n      throw new Error('Author Invalid')\r\n    }\r\n\r\n    return ctx.db.deletePost({ id })\r\n  },\r\n\r\n\r\n\r\n  publish: async (parent, { id }, ctx) => ctx.db.updatePost({\r\n    where: { id },\r\n    data: { isPublished: true },\r\n  }),\r\n}\r\n"],"file":"Mutation.js"}