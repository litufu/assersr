{"version":3,"sources":["../../src/resolvers/VisitCount.js"],"names":["year","Date","getFullYear","month","getMonth","day","getDate","startTime","endTime","VisitCount","userNum","parent","args","ctx","db","usersConnection","aggregate","count","addNum","registerCounts","where","AND","createdAt_gte","createdAt_lt","length","visits","bootCounts","result","i","end","getTime","filter","bootCount","createdAt","JSON","stringify"],"mappings":";;;;;;;;;;;AAAE,IAAMA,IAAI,GAAG,IAAIC,IAAJ,GAAWC,WAAX,EAAb;AACA,IAAMC,KAAK,GAAG,IAAIF,IAAJ,GAAWG,QAAX,EAAd;AACA,IAAMC,GAAG,GAAG,IAAIJ,IAAJ,GAAWK,OAAX,KAAuB,CAAnC;AAEA,IAAMC,SAAS,GAAG,IAAIN,IAAJ,CAASD,IAAT,EAAeG,KAAf,EAAsBE,GAAtB,EAA2B,CAA3B,EAA8B,CAA9B,EAAiC,CAAjC,CAAlB;AACA,IAAMG,OAAO,GAAG,IAAIP,IAAJ,CAASD,IAAT,EAAcG,KAAd,EAAoBE,GAAG,GAAC,CAAxB,EAA0B,CAA1B,EAA4B,CAA5B,EAA8B,CAA9B,CAAhB;AAEO,IAAMI,UAAU,GAAG;AACxBC,EAAAA,OAAO,EAAC,iBAACC,MAAD,EAASC,IAAT,EAAeC,GAAf;AAAA,WAAuBA,GAAG,CAACC,EAAJ,CAAOC,eAAP,GAAyBC,SAAzB,GAAqCC,KAArC,EAAvB;AAAA,GADgB;AAExBC,EAAAA,MAAM;AAAA;AAAA;AAAA,4BAAC,iBAAOP,MAAP,EAAeC,IAAf,EAAqBC,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAC2BA,GAAG,CAACC,EAAJ,CAAOK,cAAP,CAAsB;AAChDC,gBAAAA,KAAK,EAAC;AACFC,kBAAAA,GAAG,EAAC,CACA;AAACC,oBAAAA,aAAa,EAACf;AAAf,mBADA,EAEA;AAACgB,oBAAAA,YAAY,EAACf;AAAd,mBAFA;AADF;AAD0C,eAAtB,CAD3B;;AAAA;AACGW,cAAAA,cADH;AAAA,+CASIA,cAAc,CAACK,MATnB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA;AAAA;AAAA;AAAA,KAFkB;AAaxBC,EAAAA,MAAM;AAAA;AAAA;AAAA,4BAAC,kBAAOd,MAAP,EAAeC,IAAf,EAAqBC,GAArB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEsBA,GAAG,CAACC,EAAJ,CAAOY,UAAP,CAAkB;AACvCN,gBAAAA,KAAK,EAAC;AACFC,kBAAAA,GAAG,EAAC,CACA;AAACC,oBAAAA,aAAa,EAACf;AAAf,mBADA,EAEA;AAACgB,oBAAAA,YAAY,EAACf;AAAd,mBAFA;AADF;AADiC,eAAlB,CAFtB;;AAAA;AAEGkB,cAAAA,UAFH;AAUGC,cAAAA,MAVH,GAUY,EAVZ;;AAAA,qCAWKC,CAXL;AAYC,oBAAOC,GAAG,GAAGtB,SAAS,CAACuB,OAAV,KAAsBF,CAAC,GAAC,CAAF,GAAI,EAAJ,GAAO,EAAP,GAAU,IAA7C;AACAD,gBAAAA,MAAM,CAACC,CAAD,CAAN,GAAYF,UAAU,CAACK,MAAX,CAAkB,UAAAC,SAAS,EAAE;AACrC,sBAAOC,SAAS,GAAG,IAAIhC,IAAJ,CAAS+B,SAAS,CAACC,SAAnB,EAA8BH,OAA9B,EAAnB;;AAEA,sBAAGG,SAAS,GAACJ,GAAV,IAAiBI,SAAS,IAAGJ,GAAG,GAAC,IAAE,CAAF,GAAI,EAAJ,GAAO,EAAP,GAAU,IAA9C,EAAoD;AAChD,2BAAO,IAAP;AACH;;AACD,yBAAO,KAAP;AACH,iBAPW,EAOTL,MAPH;AAbD;;AAWH,mBAAQI,CAAR,GAAU,CAAV,EAAYA,CAAC,IAAE,EAAf,EAAkBA,CAAC,EAAnB,EAAuB;AAAA,sBAAfA,CAAe;AAUtB;;AArBE,gDAsBIM,IAAI,CAACC,SAAL,CAAeR,MAAf,CAtBJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA;AAAA;AAAA;AAAA;AAbkB,CAAnB","sourcesContent":["  const year = new Date().getFullYear()\r\n  const month = new Date().getMonth()\r\n  const day = new Date().getDate() - 1\r\n\r\n  const startTime = new Date(year, month, day, 0, 0, 0)\r\n  const endTime = new Date(year,month,day+1,0,0,0)\r\n  \r\n  export const VisitCount = {\r\n    userNum:(parent, args, ctx) => ctx.db.usersConnection().aggregate().count(),\r\n    addNum:async (parent, args, ctx) => {\r\n        const registerCounts =  await ctx.db.registerCounts({\r\n            where:{\r\n                AND:[\r\n                    {createdAt_gte:startTime},\r\n                    {createdAt_lt:endTime},\r\n                ]\r\n            }\r\n        })\r\n        return registerCounts.length\r\n    },\r\n    visits:async (parent, args, ctx) =>{\r\n       \r\n        const bootCounts = await ctx.db.bootCounts({\r\n            where:{\r\n                AND:[\r\n                    {createdAt_gte:startTime},\r\n                    {createdAt_lt:endTime},\r\n                ]\r\n            }\r\n        })\r\n        const result = {}\r\n        for(let i=1;i<=48;i++) {\r\n            const  end = startTime.getTime() + i/2*60*60*1000\r\n            result[i] = bootCounts.filter(bootCount=>{\r\n                const  createdAt = new Date(bootCount.createdAt).getTime()\r\n           \r\n                if(createdAt<end && createdAt>=(end-1/2*60*60*1000)){\r\n                    return true\r\n                }\r\n                return false\r\n            }).length\r\n        }\r\n        return JSON.stringify(result)\r\n    } \r\n}"],"file":"VisitCount.js"}