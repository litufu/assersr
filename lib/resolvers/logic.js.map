{"version":3,"sources":["../../src/resolvers/logic.js"],"names":["getAuthenticatedUser","ctx","user","then","AuthenticationError","subscriptionLogic","locationGroupChanged","params","args","id","userId","ForbiddenError","Promise","resolve"],"mappings":";;;;;;;AAAA;;AAEA;AACA,SAASA,oBAAT,CAA8BC,GAA9B,EAAmC;AACjC,SAAOA,GAAG,CAACC,IAAJ,CAASC,IAAT,CAAc,UAACD,IAAD,EAAU;AAC7B,QAAI,CAACA,IAAL,EAAW;AACT,YAAM,IAAIE,iCAAJ,CAAwB,KAAxB,CAAN;AACD;;AACD,WAAOF,IAAP;AACD,GALM,CAAP;AAMD;;AAEM,IAAMG,iBAAiB,GAAG;AAC/BC,EAAAA,oBAD+B,gCACVC,MADU,EACFC,IADE,EACIP,GADJ,EACS;AACpC,WAAOD,oBAAoB,CAACC,GAAD,CAApB,CACJE,IADI,CACC,UAACD,IAAD,EAAU;AACd,UAAIA,IAAI,CAACO,EAAL,KAAYD,IAAI,CAACE,MAArB,EAA6B;AAC3B,cAAM,IAAIC,4BAAJ,CAAmB,KAAnB,CAAN;AACD;;AAED,aAAOC,OAAO,CAACC,OAAR,EAAP;AACD,KAPI,CAAP;AAQD;AAV4B,CAA1B","sourcesContent":["import { AuthenticationError, ForbiddenError } from 'apollo-server';\r\n\r\n// reusable function to check for a user with context\r\nfunction getAuthenticatedUser(ctx) {\r\n  return ctx.user.then((user) => {\r\n    if (!user) {\r\n      throw new AuthenticationError('未验证');\r\n    }\r\n    return user;\r\n  });\r\n}\r\n\r\nexport const subscriptionLogic = {\r\n  locationGroupChanged(params, args, ctx) {\r\n      return getAuthenticatedUser(ctx)\r\n        .then((user) => {\r\n          if (user.id !== args.userId) {\r\n            throw new ForbiddenError('未授权');\r\n          }\r\n  \r\n          return Promise.resolve();\r\n        });\r\n    },\r\n  \r\n  };"],"file":"logic.js"}