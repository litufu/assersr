{"version":3,"sources":["../../src/validate/index.js"],"names":["validateBasicInfo","name","gender","birthday","birthplace","residence","checkName","checkGender","checkCalendar","calendar","checkDate","date","checkPlaceCode","province","city","area","street","village","checkCompanyName","companyName","rxName","test","Error","isNaN","Date","parse","input","inputName","checkHasInput","checkUsername","username","uPattern","usernameTest","checkPassword","password","pPattern","curPasswordTest","checkRelationship","relationship","relationships","indexOf","checkId","id","idPatter","idTest","checkStatus","status","statuses","checkCnEnNum","checkNum","str","checkScore","pattern","checkPhotoName","strRegex","re","RegExp","toLowerCase"],"mappings":"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","sourcesContent":["\r\n\r\nexport const validateBasicInfo=(name,gender,birthday,birthplace,residence)=>{\r\n  checkName(name)\r\n  checkGender(gender)\r\n  checkCalendar(birthday.calendar)\r\n  checkDate(birthday.date)\r\n  checkPlaceCode(birthplace.province,'所在省')\r\n  checkPlaceCode(birthplace.city,'所在市')\r\n  checkPlaceCode(birthplace.area,'所在区')\r\n  checkPlaceCode(birthplace.street,'所在乡镇')\r\n  checkPlaceCode(birthplace.village,'所在村')\r\n  checkPlaceCode(residence.province,'所在省')\r\n  checkPlaceCode(residence.city,'所在市')\r\n  checkPlaceCode(residence.area,'所在区')\r\n  checkPlaceCode(residence.street,'所在乡镇')\r\n  checkPlaceCode(residence.village,'所在村')\r\n}\r\n\r\nexport const checkCompanyName = (companyName)=>{\r\n  const rxName =/^[（()）\\u4E00-\\u9FA5\\uf900-\\ufa2d·s]{2,20}$/\r\n  if(!rxName.test(companyName)){\r\n    throw new Error('公司名称错误')\r\n  }\r\n}\r\n\r\nexport const checkName = (name)=>{\r\n  const rxName =/^[\\u4E00-\\u9FA5\\uf900-\\ufa2d·s]{2,20}$/\r\n  if(!rxName.test(name)){\r\n    throw new Error('你的姓名错误')\r\n  }\r\n}\r\n\r\nexport const checkGender = (gender)=>{\r\n  if(gender!=='male' && gender !== 'female'){\r\n    throw new Error('你的性别未选择')\r\n  }\r\n}\r\n\r\nexport  const checkCalendar = (calendar)=>{\r\n  if(calendar!=='lunar' && calendar!=='gregorian'){\r\n    throw new Error('你未选择日历类别')\r\n  }\r\n}\r\n\r\nexport const checkDate= (date)=>{\r\n  if(isNaN(Date.parse(date))){\r\n     throw new Error('日期错误')\r\n  }\r\n}\r\n\r\nexport const checkPlaceCode=(input,inputName)=>{\r\n  if(!/^\\d+$/.test(input)){\r\n    throw new Error(`你未输入${inputName}`)\r\n    }\r\n}\r\n\r\nexport const checkHasInput=(input,inputName)=>{\r\n  if (input==null && input === \"\" && isNaN(input)){\r\n    throw new Error(`你未输入${inputName}`)\r\n  }\r\n}\r\n\r\nexport const checkUsername = (username)=>{\r\n  const uPattern = /^[a-zA-Z0-9_-]{4,16}$/\r\n  const usernameTest = uPattern.test(username)\r\n  if (!usernameTest) throw new Error(`${username}格式不符合要求`)\r\n}\r\n\r\nexport const checkPassword = (password)=>{\r\n  const pPattern = /^.*(?=.{6,20})(?=.*\\d)(?=.*[a-zA-Z]).*$/;\r\n  const curPasswordTest = pPattern.test(password)\r\n  if (!curPasswordTest) throw new Error(\"密码格式错误\")\r\n}\r\n\r\nexport const checkRelationship = (relationship)=>{\r\n  const relationships = [\"father\",\"mother\",\"son\",\"daughter\",\"oldbrother\",\"youngbrother\",\"oldsister\",\"youngsister\",\"sister\",\"brother\",\"wife\",\"husband\"]\r\n  if(!~relationships.indexOf(relationship)){\r\n    throw new Error(\"关系输入错误\")\r\n  }\r\n}\r\n\r\nexport const checkId = (id)=>{\r\n  const idPatter = /^[0-9a-zA-Z]*$/g\r\n  const idTest = idPatter.test(id)\r\n  if (!idTest) throw new Error(\"id格式错误\")\r\n}\r\n\r\nexport const checkStatus = (status)=>{\r\n  const statuses = [\"0\",\"1\",\"2\",\"3\"]\r\n  if(!~statuses.indexOf(status)){\r\n    throw new Error(\"status输入错误\")\r\n  }\r\n}\r\n\r\nexport const checkCnEnNum=(name)=>{\r\n  // 检查中文英文和数字\r\n  const rxName =/^[a-zA-Z0-9\\u4E00-\\u9FA5\\uf900-\\ufa2d·s]+$/\r\n  if(!rxName.test(name)){\r\n    throw new Error(\"格式输入错误\")\r\n  }\r\n}\r\n\r\nexport const checkNum = (str)=>{\r\n  if(!/^\\d+$/.test(str)){\r\n    throw new Error(\"数字输入错误\")\r\n    }\r\n}\r\n\r\nexport const checkScore = (str)=>{\r\n  const pattern = /^[0-9]+(.[0-9]{1,2})?$/\r\n  if(!pattern.test(str)){\r\n    throw new Error(\"分数格式错误\")\r\n  }\r\n}\r\n\r\nexport const  checkPhotoName= (str)=>{\r\n  const strRegex = \"(.jpg|.png|.gif|.ps|.jpeg)$\";\r\n  const re=new RegExp(strRegex);\r\n  if (!re.test(str.toLowerCase())){\r\n    throw new Error(\"图片格式错误\")\r\n  }\r\n}"],"file":"index.js"}