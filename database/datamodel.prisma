type Post {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!
  isPublished: Boolean! @default(value: "false")
  title: String!
  content: String!
  author: User!
}

# 高考基本信息
type CollegeEntranceExam {
  id: ID! @unique
  province:Province!
  subject:String!
  culscore:Float!
  proscore:Float
  candidatenum:String! @unique
  times:Int
  student:User!
}

# 高考报名情况
type RegStatus {
  id: ID! @unique
  education:Educationkind!
  university:University
  major:Major!
  applicants:[User!]!
}

type University {
  id: ID! @unique
  name: String! @unique
  education:Educationkind!
  department:String
  location:String
  desc:String
}

# 用户
type User {
  id: ID! @unique
  username: String! @unique
  password: String!
  name: String
  gender:String
  avatar:String
  birthdaycalendar:String
  birthday:DateTime
  birthplace:Location  @relation(name: "Birth")
  residence:Location @relation(name: "Live")
  uid:String! @unique
  token:String! @unique
  posts: [Post!]!
  createdAt: DateTime!
  updatedAt: DateTime!
  regStatus:RegStatus
  regTimes:Int
  maxRegTimes:Int
  families:[Family!]!
  studies:[SchoolEdu!]!
  works:[Work!]!
  exam:CollegeEntranceExam
  messages: [Message!]!
  groups: [Group!]!
  friends: [User!]!
  familyGroup:FamilyGroup @relation(name: "SonAndDaughter")
  creater:FamilyGroup @relation(name: "Creater")
  classMate:[ClassMate!]! 
  workGroup:WorkGroup
  colleagues:[Colleague!]!
  fromOldColleagues:[OldColleague!]!  @relation(name: "FromOldColleagues")
  toOldColleagues:[OldColleague!]! @relation(name: "ToOldColleagues")
}

# 地理位置
type Location {
  id: ID! @unique
  name:String @unique
  province:Province
  city:City
  area:Area
  street:Street
  village:Village
  schools:[School!]!
  companies:[Company!]!
  universities:[University!]!
  born:[User!]!  @relation(name: "Birth")
  live:[User!]!  @relation(name: "Live")
}
# family to person
type Person {
  id: ID! @unique
  name:String!
  user:User @unique
  families:[Family!]!
  asFather: [FamilyGroup!]! @relation(name: "AsFather")
  asMother: [FamilyGroup!]! @relation(name: "AsMother")
}

type Work{
  id:ID! @unique
  startTime:DateTime
  endTime:DateTime
  company:Company
  department:String
  post:Station
  jobContent:String
  worker:User
}

# 公司
type Company{
  id: ID! @unique
  name:String @unique
  code:String 
  establishmentDate:DateTime
  representative:String
  location:Location
  BusinessScope:String
  works:[Work!]!
  workGroup:WorkGroup
}

enum Educationkind {
  PrimarySchool, #初等教育-小学
  JuniorMiddleSchool,#中等教育-初中
  HighSchool, #中等教育-高中
  VocationalHighSchool, #中等教育-职业中学教育
  TechnicalSchool, #中等教育-技工学校教育
  SecondarySpecializedSchool, #中等教育-中等专业教育
  JuniorCollege,#普通高等教育-大专
  Undergraduate,#普通高等教育-本科
  Master,#普通高等教育-硕士研究生
  Doctor,#普通高等教育-博士研究生
  JuniorToCollege ,#成人高等教育-专科起点本科
  HighToCollege,#成人高等教育-高中起点升本科
  HighToJunior,#成人高等教育-高中起点升专科
}

# 学校
type School {
  id: ID! @unique
  name:String
  kind:Educationkind
  location:Location

}
# 学校开设的课程
type SchoolEdu{
  id: ID! @unique
  school:School
  startTime:DateTime
  major:Major
  grade:Int
  className:String
  students:[User!]!
}

type Major {
  id: ID! @unique
  name: String!
  category:String!
  education:Educationkind!
}

type Family {
  id: ID! @unique
  from:User!
  to:Person!
  relationship:String!
  spouse:Family
  status:String!
}

type Province {
  id:ID! @unique
  code:String! @unique
  name:String! @unique
  cities:[City!]!
}

type City {
  id:ID! @unique
  code:String! @unique
  name:String!
  province:Province!
  areas:[Area!]!
}

type Area {
  id:ID! @unique
  code:String! @unique
  name:String!
  city:City!
  towns:[Street!]!
}

type Street {
  id:ID! @unique
  code:String! @unique
  name:String!
  Area:Area!
  villages:[Village!]!
}

type Village {
  id:ID! @unique
  code:String! @unique
  name:String!
  street:Street!
  people:[User!]!

}

enum GroupKind {
  Family, #家人
  ClassMate,#同学
  Colleague, #同事
  FellowTownsman, #同乡
  SameCity, #同城
  SameOccupation, #同行
  SameDisease,#同病
}

type Group{
  id:ID! @unique
  type:GroupKind
  name: String
  users: [User!]!
  messages: [Message!]!
}

type FamilyGroup{
  id:ID! @unique
  father:Person @relation(name: "AsFather")
  mother:Person @relation(name: "AsMother")
  creater:User @relation(name: "Creater")
  name: String
  families: [Family!]!
  messages: [Message!]!
  users:[User!]! @relation(name: "SonAndDaughter")
}

type ClassMate{
  id: ID! @unique
  student:User
  status:String!
  group:ClassGroup!
}

type ClassGroup{
  id:ID! @unique
  study:SchoolEdu
  name:String
  members:[ClassMate!]! 
  messages: [Message!]!
}

type OldColleague{
  id: ID! @unique
  from:User  @relation(name: "FromOldColleagues")
  to:User @relation(name: "ToOldColleagues")
  company:Company
  status:String!
}

type Colleague{
  id: ID! @unique
  worker:User
  status:String!
  group:WorkGroup
}

type WorkGroup{
  id:ID! @unique
  company:Company
  colleagues:[Colleague!]!
  messages: [Message!]!
}

type Message {
  id:ID! @unique
  to: Group!
  from: User!
  text: String!
  createdAt: DateTime!
}

type Station {
  id:ID! @unique
  code:String  @unique
  name:String  @unique
}

type Logs {
  user:User
  createFamilyGroupTime:DateTime
}

